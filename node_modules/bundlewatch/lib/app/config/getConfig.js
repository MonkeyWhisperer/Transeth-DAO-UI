"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _lodash = _interopRequireDefault(require("lodash.merge"));

var _getCIVars = _interopRequireDefault(require("./getCIVars"));

var _ensureValid = _interopRequireDefault(require("./ensureValid"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ciVars = (0, _getCIVars.default)(process.env);
const defaultConfig = {
  files: [],
  bundlewatchServiceHost: 'https://service.bundlewatch.io',
  // Can be a custom service, or set to NUll
  ci: {
    githubAccessToken: ciVars.githubAccessToken,
    repoOwner: ciVars.repoOwner,
    repoName: ciVars.repoName,
    repoCurrentBranch: ciVars.repoCurrentBranch,
    repoBranchBase: ciVars.repoBranchBase || 'master',
    // Branch PR is being merged into
    commitSha: ciVars.commitSha,
    trackBranches: ['master', 'develop']
  },
  defaultCompression: 'gzip'
};

const getConfig = customConfig => {
  const config = (0, _lodash.default)({}, defaultConfig, customConfig);
  (0, _ensureValid.default)(config);
  return config;
};

var _default = getConfig;
exports.default = _default;