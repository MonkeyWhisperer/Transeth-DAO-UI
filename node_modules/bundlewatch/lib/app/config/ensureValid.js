"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ValidationError = _interopRequireDefault(require("../errors/ValidationError"));

var _logger = _interopRequireDefault(require("../../logger"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const COMPRESSION_TYPES = ['gzip', 'brotli', 'none'];

const ensureValid = config => {
  if (!Array.isArray(config.files)) {
    throw new _ValidationError.default('config.files must be an Array');
  } // TODO: more validation per file, path, maxSize, compression etc
  // const FILE_TYPE = {
  //     path: '', // required
  //     maxSize, // basically required (defaults to Infinity)
  //     compression, // optional
  // }


  if (!COMPRESSION_TYPES.includes(config.defaultCompression)) {
    throw new _ValidationError.default('config.compression must be a valid type');
  }

  if (!Array.isArray(config.ci.trackBranches)) {
    throw new _ValidationError.default('config.ci.trackBranches must be an Array');
  }

  const requiredOptionsToConnectToBuild = ['githubAccessToken', 'repoOwner', 'repoName', 'commitSha'];
  const missingOptions = requiredOptionsToConnectToBuild.reduce((optionAccumulator, option) => {
    if (!config.ci[option]) {
      optionAccumulator.push(option);
    }

    return optionAccumulator;
  }, []);

  if (missingOptions.length === 0) {
    if (!config.bundlewatchServiceHost) {
      _logger.default.warn(`bundlewatchServiceHost was not supplied, bundlewatch comparisons unavilable:
    Learn more at: https://bundlewatch.io/
            `);
    } else {
      if (!config.ci.repoBranchBase) {
        _logger.default.warn(`The ci.repoBranchCase was not supplied, bundlewatch comparisons unavailable:
    Learn more at: https://bundlewatch.io/
                `);
      }

      if (!config.ci.repoCurrentBranch) {
        _logger.default.warn(`The ci.repoCurrentBranch was not supplied, bundlewatch results with not be saved:
    Learn more at: https://bundlewatch.io/
            `);
      }
    }
  } else {
    _logger.default.warn(`Some CI configuration options were not found (${missingOptions.join(', ')}):
    bundlewatch will be unable to report build status, or save comparison data
    Learn more at: https://bundlewatch.io/
        `);
  }
};

var _default = ensureValid;
exports.default = _default;