import { registerServices as registerErrorServices } from './error-logging';
import { registerServices as registerPerfServices } from './performance-monitoring';
import { ServiceFactory } from './common/service-factory';
import { isPlatformSupported, scheduleMicroTask, scheduleMacroTask, isBrowser } from './common/utils';
import { patchAll, patchEventHandler } from './common/patching';
import { PAGE_LOAD, ERROR, CONFIG_SERVICE, LOGGING_SERVICE, APM_SERVER } from './common/constants';
import { getInstrumentationFlags } from './common/instrument';
import afterFrame from './common/after-frame';
import { bootstrap } from './bootstrap';
import { createTracer } from './opentracing';

function createServiceFactory() {
  registerPerfServices();
  registerErrorServices();
  var serviceFactory = new ServiceFactory();
  return serviceFactory;
}

export { createServiceFactory, ServiceFactory, patchAll, patchEventHandler, isPlatformSupported, isBrowser, getInstrumentationFlags, createTracer, scheduleMicroTask, scheduleMacroTask, afterFrame, ERROR, PAGE_LOAD, CONFIG_SERVICE, LOGGING_SERVICE, APM_SERVER, bootstrap };