{"version":3,"file":"index.js","names":["Cache","constructor","prefix","Set","forceLocalStorage","getConfiguration","configurationKeys","FORCE_LOCAL_STORAGE","drivers","localforage","LOCALSTORAGE","memoryStorageDriver","INDEXEDDB","init","changes","Subject","db","createInstance","driver","name","ready","err","defineDriver","setDriver","_driver","set","key","value","setItem","next","get","defaultValue","getItem","getAll","all","iterate","remove","removeItem","clear","observe","add","getResult$","keyChange$","pipe","filter","change","pluck","race","concat"],"sources":["../../src/cache/index.js"],"sourcesContent":["import { Subject, concat, race } from 'rxjs'\nimport { filter, pluck } from 'rxjs/operators'\nimport localforage from 'localforage'\nimport memoryStorageDriver from 'localforage-memoryStorageDriver'\nimport { getConfiguration } from '../configuration'\nimport * as configurationKeys from '../configuration/keys'\n\n/**\n * A persistent cache on browser environments, preferring IndexedDB when available.\n * Falls back to an in-memory cache on node environments.\n *\n * @param {string} prefix\n *        String prefix to use for the cache\n * @param {Object} [options]\n *        Options\n * @param {boolean} [options.forceLocalStorage]\n *        Require the cache to downgrade to localstorage even if IndexedDB is available\n */\nexport default class Cache {\n  #trackedKeys = new Set()\n\n  constructor (prefix) {\n    this.prefix = prefix\n    const forceLocalStorage = getConfiguration(configurationKeys.FORCE_LOCAL_STORAGE)\n    this.drivers = forceLocalStorage\n      ? [localforage.LOCALSTORAGE, memoryStorageDriver]\n      : [localforage.INDEXEDDB, localforage.LOCALSTORAGE, memoryStorageDriver]\n  }\n\n  async init () {\n    // Set up the changes observable\n    this.changes = new Subject()\n\n    // Set up cache DB\n    this.db = localforage.createInstance({\n      driver: this.drivers,\n      name: `localforage/${this.prefix}`\n    })\n\n    try {\n      // Make sure localforage has settled down and is not waiting for anything else\n      // before possibly setting new drivers\n      await this.db.ready()\n    } catch (err) {\n      // If localforage isn't able to automatically connect to a driver\n      // due to lack of support in the environment (e.g. node),\n      // use an in-memory driver instead\n      // TODO: this doesn't provide an persistent cache for node\n      if (this.db.driver() === null) {\n        await this.db.defineDriver(memoryStorageDriver)\n        await this.db.setDriver(memoryStorageDriver._driver)\n      }\n\n      await this.db.ready()\n    }\n  }\n\n  async set (key, value) {\n    await this.db.setItem(\n      key,\n      value\n    )\n\n    this.changes.next({ key, value })\n  }\n\n  async get (key, defaultValue = null) {\n    // If we access a key without data the promise resolve but value is null\n    const value = await this.db.getItem(key)\n    return value || defaultValue\n  }\n\n  async getAll () {\n    const all = {}\n    await this.db.iterate((value, key) => {\n      all[key] = value\n    })\n    return all\n  }\n\n  async remove (key) {\n    await this.db.removeItem(key)\n    this.changes.next({ key, value: null })\n  }\n\n  async clear () {\n    await this.db.clear()\n\n    for (const key of this.#trackedKeys) {\n      this.changes.next({ key, value: null })\n    }\n  }\n\n  /**\n   * Observe the value of a key in cache over time\n   *\n   * @param  {string} key\n   * @param  {*}      defaultValue\n   * @return {Observable}\n   */\n  observe (key, defaultValue) {\n    this.#trackedKeys.add(key)\n\n    const getResult$ = this.get(key, defaultValue)\n    const keyChange$ = this.changes.pipe(\n      filter(change => change.key === key),\n      pluck('value')\n    )\n\n    /*\n     * There is an inherent race between `this.get()` and a new item being set\n     * on the cache key. Note that `concat()` only subscribes to the next observable\n     * **AFTER** the previous one ends (it doesn't buffer hot observables).\n     *\n     * Thus, we either want:\n     *   - The concatenated result of `this.get()` and `this.changes`, if `this.changes`\n     *     doesn't emit new items, or\n     *   - Just `this.changes` since `this.get()` may be stale by the time it returns\n     */\n    return race(concat(getResult$, keyChange$), keyChange$)\n  }\n}\n"],"mappings":"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"}