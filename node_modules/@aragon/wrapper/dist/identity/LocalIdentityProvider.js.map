{"version":3,"file":"LocalIdentityProvider.js","names":["LocalIdentityProvider","AddressIdentityProvider","constructor","identityCache","Cache","init","resolve","address","toLowerCase","get","modify","name","createdAt","Date","now","Error","metadata","set","Promise","search","searchTerm","isAddressSearch","substring","identities","getAll","results","Object","entries","filter","length","indexOf","map","remove"],"sources":["../../src/identity/LocalIdentityProvider.js"],"sourcesContent":["import Cache from '../cache'\nimport AddressIdentityProvider from './AddressIdentityProvider'\n\n/**\n * An local identity provider for addresses\n *\n * @class LocalIdentityProvider\n */\nexport default class LocalIdentityProvider extends AddressIdentityProvider {\n  /**\n   * Create a new identity provider attached to a locally-stored cache.\n   */\n  constructor () {\n    super()\n    this.identityCache = new Cache('localIdentity')\n  }\n\n  async init () {\n    await this.identityCache.init()\n  }\n\n  /**\n   * Resolve the locally-stored label for an address\n   *\n   * @param  {string} address Address to resolve\n   * @return {Promise} Resolved metadata, null when not found, rejected on error\n   */\n  async resolve (address) {\n    address = address.toLowerCase()\n    return this.identityCache.get(address)\n  }\n\n  /**\n   * Modify the locally-stored label of an address\n   *\n   * @param  {string} address  Address to resolve\n   * @param  {Object} metadata Metadata to modify\n   * @return {Promise} Resolved with saved address and metadata or rejected on error\n   */\n  async modify (address, { name = '', createdAt = Date.now() } = {}) {\n    if (!name) {\n      throw new Error('name is required when modifying a local identity')\n    }\n    address = address.toLowerCase()\n\n    const metadata = { name, createdAt }\n    // First save it in the cache\n    await this.identityCache.set(address, metadata)\n\n    return Promise.resolve({ address, metadata })\n  }\n\n  /**\n   * Search for matches in the locally-stored labels.\n   *\n   * If the search term starts with '0x', addresses will be matched for instead.\n   *\n   * @param  {string} searchTerm Search term\n   * @return {Promise} Resolved with array of matches, each containing the address and name\n   */\n  async search (searchTerm = '') {\n    const isAddressSearch = searchTerm.substring(0, 2).toLowerCase() === '0x'\n    const identities = await this.identityCache.getAll()\n    const results = Object.entries(identities)\n      .filter(\n        ([address, { name }]) =>\n          (isAddressSearch &&\n            searchTerm.length > 3 &&\n            address.toLowerCase().indexOf(searchTerm.toLowerCase()) === 0) ||\n          name.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\n      )\n      .map(([address, { name }]) => ({ name, address }))\n    return results\n  }\n\n  /**\n   * Get all local identities\n   *\n   * @return {Promise} Resolved with an object of all identities when completed\n   */\n  async getAll () {\n    return this.identityCache.getAll()\n  }\n\n  /**\n   * Remove a single identity from the local cache\n   *\n   * @return {Promise} Resolved when completed\n   */\n  async remove (address) {\n    await this.identityCache.remove(address.toLowerCase())\n  }\n}\n"],"mappings":"2TAGA;AACA;AACA;AACA;AACA,GACe,KAAMA,sBAAN,QAAoCC,iCAAwB,CACzE;AACF;AACA,KACEC,WAAW,EAAI,CACb,OADa,CAEb,KAAKC,aAAL,CAAqB,GAAIC,eAAJ,CAAU,eAAV,CACtB,CAES,KAAJC,KAAI,EAAI,CACZ,KAAM,MAAKF,aAAL,CAAmBE,IAAnB,EACP,CAED;AACF;AACA;AACA;AACA;AACA,KACe,KAAPC,QAAO,CAAEC,OAAF,CAAW,CAEtB,MADAA,QAAO,CAAGA,OAAO,CAACC,WAAR,EACV,CAAO,KAAKL,aAAL,CAAmBM,GAAnB,CAAuBF,OAAvB,CACR,CAED;AACF;AACA;AACA;AACA;AACA;AACA,KACc,KAANG,OAAM,CAAEH,OAAF,CAAuD,IAA5C,CAAEI,IAAI,CAAG,EAAT,CAAaC,SAAS,CAAGC,IAAI,CAACC,GAAL,EAAzB,CAA4C,wDAAJ,EAAI,CACjE,GAAI,CAACH,IAAL,CACE,KAAM,IAAII,MAAJ,CAAU,kDAAV,CAAN,CAEFR,OAAO,CAAGA,OAAO,CAACC,WAAR,EAJuD,CAMjE,KAAMQ,SAAQ,CAAG,CAAEL,IAAF,CAAQC,SAAR,CAAjB,CACA;AAGA,MAFA,MAAM,MAAKT,aAAL,CAAmBc,GAAnB,CAAuBV,OAAvB,CAAgCS,QAAhC,CAEN,CAAOE,OAAO,CAACZ,OAAR,CAAgB,CAAEC,OAAF,CAAWS,QAAX,CAAhB,CACR,CAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA,KACc,KAANG,OAAM,EAAmB,IAAjBC,WAAiB,wDAAJ,EAAI,MACvBC,gBAAe,CAAgD,IAA7C,GAAAD,UAAU,CAACE,SAAX,CAAqB,CAArB,CAAwB,CAAxB,EAA2Bd,WAA3B,EADK,CAEvBe,UAAU,CAAG,KAAM,MAAKpB,aAAL,CAAmBqB,MAAnB,EAFI,CAGvBC,OAAO,CAAGC,MAAM,CAACC,OAAP,CAAeJ,UAAf,EACbK,MADa,CAEZ,UAAC,CAACrB,OAAD,CAAU,CAAEI,IAAF,CAAV,CAAD,YACGU,gBAAe,EACM,CAApB,CAAAD,UAAU,CAACS,MADZ,EAE6D,CAA5D,GAAAtB,OAAO,CAACC,WAAR,GAAsBsB,OAAtB,CAA8BV,UAAU,CAACZ,WAAX,EAA9B,CAFF,EAGuD,CAAC,CAAxD,CAAAG,IAAI,CAACH,WAAL,GAAmBsB,OAAnB,CAA2BV,UAAU,CAACZ,WAAX,EAA3B,CAJF,CAFY,EAQbuB,GARa,CAQT,WAAC,CAACxB,OAAD,CAAU,CAAEI,IAAF,CAAV,CAAD,aAA0B,CAAEA,IAAF,CAAQJ,OAAR,CAA1B,CARS,CAHa,CAY7B,MAAOkB,QACR,CAED;AACF;AACA;AACA;AACA,KACc,KAAND,OAAM,EAAI,CACd,MAAO,MAAKrB,aAAL,CAAmBqB,MAAnB,EACR,CAED;AACF;AACA;AACA;AACA,KACc,KAANQ,OAAM,CAAEzB,OAAF,CAAW,CACrB,KAAM,MAAKJ,aAAL,CAAmB6B,MAAnB,CAA0BzB,OAAO,CAACC,WAAR,EAA1B,CACP,CAnFwE,C"}