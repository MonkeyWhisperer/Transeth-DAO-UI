{"version":3,"file":"index.js","names":["ContractProxy","constructor","address","jsonInterface","web3","initializationBlock","contract","eth","Contract","pastEvents","eventNames","options","fromBlock","getEventNames","length","getConfiguration","configurationKeys","PAST_EVENTS_BLOCK_SIZE","blockSizeLimit","from","getPastEventsByBatch","eventName","getPastEvents","then","events","filter","event","includes","eventSource","fromEvent","allEvents","pipe","eventDelay","SUBSCRIPTION_EVENT_DELAY","delay","call","method","methods","Error","params","lastParam","slice","updateInitializationBlock","initBlock","getInitializationBlock"],"sources":["../../../src/core/proxy/index.js"],"sourcesContent":["import { fromEvent, from } from 'rxjs'\nimport { delay, filter } from 'rxjs/operators'\nimport { getConfiguration } from '../../configuration'\nimport * as configurationKeys from '../../configuration/keys'\nimport { getEventNames, getPastEventsByBatch } from '../../utils/events'\n\nexport default class ContractProxy {\n  constructor (address, jsonInterface, web3, { initializationBlock = 0 } = {}) {\n    this.address = address\n    this.contract = new web3.eth.Contract(\n      jsonInterface,\n      address\n    )\n    this.web3 = web3\n    this.initializationBlock = initializationBlock\n  }\n\n  /**\n   * Fetches past events for a given block range\n   *\n   * @param {Array<String>} eventNames events to fetch\n   * @param {Object} [options] web3.eth.Contract.getPastEvents()' options\n   *   The fromBlock is defaulted to this app's initializationBlock unless explicitly provided\n   * @return {Observable} Single-emission observable with an array of past events\n   */\n  pastEvents (eventNames, options = {}) {\n    options.fromBlock = options.fromBlock || this.initializationBlock\n    eventNames = getEventNames(eventNames)\n\n    // The `from`s only unpack the returned Promises (and not the array inside them!)\n    if (eventNames.length === 1) {\n      if (!getConfiguration(configurationKeys.PAST_EVENTS_BLOCK_SIZE)) {\n        return from(this.contract.getPastEvents(eventNames[0], options))\n      }\n      options.blockSizeLimit = getConfiguration(configurationKeys.PAST_EVENTS_BLOCK_SIZE)\n      // Get a specific event or all events unfiltered\n      return from(\n        getPastEventsByBatch({ options, contract: this.contract, eventName: eventNames[0] })\n      )\n    } else {\n      // Get all events and filter ourselves\n      return from(\n        this.contract.getPastEvents('allEvents', options)\n          .then(events => events.filter(event => eventNames.includes(event.event)))\n      )\n    }\n  }\n\n  /**\n   * Subscribe to events, fetching past events if necessary (based on the given options)\n   *\n   * @param {Array<String>} eventNames events to fetch\n   * @param {Object} options web3.eth.Contract.events()' options\n   *   The fromBlock is defaulted to this app's initializationBlock unless explicitly provided\n   * @return {Observable} Multi-emission observable with individual events\n   */\n  events (eventNames, options = {}) {\n    options.fromBlock = options.fromBlock || this.initializationBlock\n    eventNames = getEventNames(eventNames)\n\n    let eventSource\n    if (eventNames.length === 1) {\n      // Get a specific event or all events unfiltered\n      eventSource = fromEvent(\n        this.contract.events[eventNames[0]](options),\n        'data'\n      )\n    } else {\n      // Get all events and filter ourselves\n      eventSource = fromEvent(\n        this.contract.events.allEvents(options),\n        'data'\n      ).pipe(\n        filter((event) => eventNames.includes(event.event))\n      )\n    }\n\n    const eventDelay = getConfiguration(configurationKeys.SUBSCRIPTION_EVENT_DELAY) || 0\n    // Small optimization: don't pipe a delay if we don't have to\n    return eventDelay ? eventSource.pipe(delay(eventDelay)) : eventSource\n  }\n\n  async call (method, ...params) {\n    if (!this.contract.methods[method]) {\n      throw new Error(`No method named ${method} on ${this.address}`)\n    }\n\n    const lastParam = params[params.length - 1]\n\n    return (typeof lastParam === 'object' && lastParam !== null)\n      ? this.contract.methods[method](...params.slice(0, -1)).call(lastParam)\n      : this.contract.methods[method](...params).call()\n  }\n\n  async updateInitializationBlock () {\n    const initBlock = await this.contract.methods.getInitializationBlock().call()\n    this.initializationBlock = initBlock\n  }\n}\n"],"mappings":"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"}