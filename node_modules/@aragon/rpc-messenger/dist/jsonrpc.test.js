"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_ava=_interopRequireDefault(require("ava")),_sinon=_interopRequireDefault(require("sinon")),_proxyquire=_interopRequireDefault(require("proxyquire")),_signals=_interopRequireDefault(require("./signals"));const uuidv4Stub=_sinon.default.stub(),jsonrpc=(0,_proxyquire.default)("./jsonrpc",{"uuid/v4":uuidv4Stub});_ava.default.afterEach.always(()=>{_sinon.default.restore()}),(0,_ava.default)("should encode the request",t=>{uuidv4Stub.returns("some-id");// act
const encoded=jsonrpc.encodeRequest("m");// assert
t.is(encoded.jsonrpc,"2.0"),t.is(encoded.id,"some-id"),t.is(encoded.method,"m"),t.deepEqual(encoded.params,[])}),(0,_ava.default)("should encode the response",t=>{// act
const encoded=jsonrpc.encodeResponse("1234");// assert
t.is(encoded.jsonrpc,"2.0"),t.is(encoded.id,"1234"),t.is(encoded.result,null)}),(0,_ava.default)("should encode the error response",t=>{// act
const encoded=jsonrpc.encodeResponse("1234",new Error);// assert
t.is(encoded.jsonrpc,"2.0"),t.is(encoded.id,"1234"),t.is(encoded.error,"An error occurred")}),(0,_ava.default)("should encode the error response and preserve the message",t=>{// act
const encoded=jsonrpc.encodeResponse("1234",new Error("no-good"));// assert
t.is(encoded.jsonrpc,"2.0"),t.is(encoded.id,"1234"),t.is(encoded.error,"no-good")}),(0,_ava.default)("should encode the complete response",t=>{// act
const encoded=jsonrpc.encodeResponse("1234",_signals.default.COMPLETE);// assert
t.is(encoded.jsonrpc,"2.0"),t.is(encoded.id,"1234"),t.true(encoded.completed)}),(0,_ava.default)("should return true for valid responses",t=>{// arrange
const valid=jsonrpc.isValidResponse({jsonrpc:"2.0",id:"some-id",result:200// act
});// assert
t.true(valid)}),(0,_ava.default)("should return true for valid error responses",t=>{// arrange
const valid=jsonrpc.isValidResponse({jsonrpc:"2.0",id:"some-id",error:null// act
});// assert
t.true(valid)});
//# sourceMappingURL=jsonrpc.test.js.map