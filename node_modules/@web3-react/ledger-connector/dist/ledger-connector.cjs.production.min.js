"use strict";function r(r){return r&&"object"==typeof r&&"default"in r?r.default:r}var e=require("@web3-react/abstract-connector"),t=r(require("web3-provider-engine")),i=require("@0x/subproviders/lib/src"),o=require("@0x/subproviders/lib/src/subproviders/ledger"),n=r(require("web3-provider-engine/subproviders/cache.js")),s=require("@0x/subproviders/lib/src/subproviders/rpc_subprovider");function c(r,e){return(c=Object.setPrototypeOf||function(r,e){return r.__proto__=e,r})(r,e)}exports.LedgerConnector=function(r){var e,u;function a(e){var t,i=e.chainId,o=e.url,n=e.pollingInterval,s=e.requestTimeoutMs,c=e.accountFetchingConfigs,u=e.baseDerivationPath;return(t=r.call(this,{supportedChainIds:[i]})||this).chainId=i,t.url=o,t.pollingInterval=n,t.requestTimeoutMs=s,t.accountFetchingConfigs=c,t.baseDerivationPath=u,t}u=r,(e=a).prototype=Object.create(u.prototype),e.prototype.constructor=e,c(e,u);var d=a.prototype;return d.activate=function(){try{if(!this.provider){var r=new t({pollingInterval:this.pollingInterval});r.addProvider(new o.LedgerSubprovider({networkId:this.chainId,ledgerEthereumClientFactoryAsync:i.ledgerEthereumBrowserClientFactoryAsync,accountFetchingConfigs:this.accountFetchingConfigs,baseDerivationPath:this.baseDerivationPath})),r.addProvider(new n),r.addProvider(new s.RPCSubprovider(this.url,this.requestTimeoutMs)),this.provider=r}return this.provider.start(),Promise.resolve({provider:this.provider,chainId:this.chainId})}catch(r){return Promise.reject(r)}},d.getProvider=function(){try{return Promise.resolve(this.provider)}catch(r){return Promise.reject(r)}},d.getChainId=function(){try{return Promise.resolve(this.chainId)}catch(r){return Promise.reject(r)}},d.getAccount=function(){try{return Promise.resolve(this.provider._providers[0].getAccountsAsync(1).then((function(r){return r[0]})))}catch(r){return Promise.reject(r)}},d.deactivate=function(){this.provider.stop()},a}(e.AbstractConnector);
//# sourceMappingURL=ledger-connector.cjs.production.min.js.map
