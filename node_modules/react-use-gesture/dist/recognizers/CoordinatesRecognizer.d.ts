/// <reference types="react" />
import Recognizer from './Recognizer';
import { TransformedEvent, GestureState, Coordinates } from '../types';
/**
 * Abstract class for coordinates-based gesture recongizers
 */
export default abstract class CoordinatesRecognizer extends Recognizer<Coordinates> {
    /**
     * Utility function to get kinematics of the gesture
     * @values values we want to calculate the kinematics from
     * @event
     * @returns set of values including delta, velocity, velocities, distance and direction
     */
    protected getKinematics: (values: [number, number], event: TransformedEvent<import("react").MouseEvent<Element, MouseEvent> | import("react").TouchEvent<Element> | import("react").WheelEvent<Element> | import("react").PointerEvent<Element> | import("../types").GestureEvent>) => Partial<GestureState<Coordinates>>;
}
