{"version":3,"file":"MergedStore.js","sourceRoot":"","sources":["../src/MergedStore.ts"],"names":[],"mappings":";;;AAAA,uDAAoD;AAEpD,MAAa,WAEX,SAAQ,iCAAkB;IAG1B,YAAY,QAAQ,GAAG,EAAE;QACvB,uCAAuC;QACvC,KAAK,CAAC,EAAkB,CAAC,CAAC;QAE1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,wBAAwB;QACxB,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,SAAS,CAAC,KAAkC;QAC1C,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,iBAAiB;QACf,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpE,kCAAkC;QAClC,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;CACF;AAzBD,kCAyBC","sourcesContent":["import { ObservableStore } from './ObservableStore';\n\nexport class MergedStore<\n  T extends Record<string, unknown>,\n> extends ObservableStore<T> {\n  private _children: ObservableStore<Partial<T>>[];\n\n  constructor(children = []) {\n    // Typecast: Preserve existing behavior\n    super({} as unknown as T);\n\n    this._children = children;\n    // subscribe to children\n    children.forEach((child) => this._addChild(child));\n    this._updateWholeState();\n  }\n\n  _addChild(child: ObservableStore<Partial<T>>): void {\n    child.subscribe(() => this._updateWholeState());\n  }\n\n  _updateWholeState(): void {\n    const childStates = this._children.map((child) => child.getState());\n    // apply shallow merge over states\n    const state = Object.assign({}, ...childStates);\n    this.putState(state);\n  }\n}\n"]}