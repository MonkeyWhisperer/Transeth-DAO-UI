{"version":3,"file":"ComposedStore.js","sourceRoot":"","sources":["../src/ComposedStore.ts"],"names":[],"mappings":";;;AAAA,uDAAoD;AAEpD,MAAa,aAEX,SAAQ,iCAAkB;IAG1B,YAAY,QAAsD;QAChE,uCAAuC;QACvC,KAAK,CAAC,EAAkB,CAAC,CAAC;QAE1B,wBAAwB;QACxB,IAAI,CAAC,SAAS,GAAG,QAAQ,IAAI,EAAE,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC/C,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,QAAiB,EAAE,KAAkC;QAC7D,MAAM,eAAe,GAAG,CAAC,UAAsB,EAAE,EAAE;YACjD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9B,KAAK,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC;QAEF,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACjC,eAAe,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IACpC,CAAC;CACF;AA3BD,sCA2BC","sourcesContent":["import { ObservableStore } from './ObservableStore';\n\nexport class ComposedStore<\n  T extends Record<string, Record<string, unknown>>,\n> extends ObservableStore<T> {\n  private _children: Record<keyof T, ObservableStore<T[keyof T]>>;\n\n  constructor(children: Record<keyof T, ObservableStore<T[keyof T]>>) {\n    // Typecast: Preserve existing behavior\n    super({} as unknown as T);\n\n    // subscribe to children\n    this._children = children || {};\n    Object.keys(this._children).forEach((childKey) => {\n      const child = this._children[childKey];\n      this._addChild(childKey, child);\n    });\n  }\n\n  _addChild(childKey: keyof T, child: ObservableStore<T[keyof T]>) {\n    const updateFromChild = (childValue: T[keyof T]) => {\n      const state = this.getState();\n      state[childKey] = childValue;\n      this.putState(state);\n    };\n\n    child.subscribe(updateFromChild);\n    updateFromChild(child.getState());\n  }\n}\n"]}