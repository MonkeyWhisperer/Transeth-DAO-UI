{"version":3,"file":"ledger-connector.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport Web3ProviderEngine from 'web3-provider-engine'\nimport { ledgerEthereumBrowserClientFactoryAsync } from '@0x/subproviders/lib/src' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport { LedgerSubprovider } from '@0x/subproviders/lib/src/subproviders/ledger' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport CacheSubprovider from 'web3-provider-engine/subproviders/cache.js'\nimport { RPCSubprovider } from '@0x/subproviders/lib/src/subproviders/rpc_subprovider' // https://github.com/0xProject/0x-monorepo/issues/1400\n\ninterface LedgerConnectorArguments {\n  chainId: number\n  url: string\n  pollingInterval?: number\n  requestTimeoutMs?: number\n  accountFetchingConfigs?: any\n  baseDerivationPath?: string\n}\n\nexport class LedgerConnector extends AbstractConnector {\n  private readonly chainId: number\n  private readonly url: string\n  private readonly pollingInterval?: number\n  private readonly requestTimeoutMs?: number\n  private readonly accountFetchingConfigs?: any\n  private readonly baseDerivationPath?: string\n\n  private provider: any\n\n  constructor({\n    chainId,\n    url,\n    pollingInterval,\n    requestTimeoutMs,\n    accountFetchingConfigs,\n    baseDerivationPath\n  }: LedgerConnectorArguments) {\n    super({ supportedChainIds: [chainId] })\n\n    this.chainId = chainId\n    this.url = url\n    this.pollingInterval = pollingInterval\n    this.requestTimeoutMs = requestTimeoutMs\n    this.accountFetchingConfigs = accountFetchingConfigs\n    this.baseDerivationPath = baseDerivationPath\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      const engine = new Web3ProviderEngine({ pollingInterval: this.pollingInterval })\n      engine.addProvider(\n        new LedgerSubprovider({\n          networkId: this.chainId,\n          ledgerEthereumClientFactoryAsync: ledgerEthereumBrowserClientFactoryAsync,\n          accountFetchingConfigs: this.accountFetchingConfigs,\n          baseDerivationPath: this.baseDerivationPath\n        })\n      )\n      engine.addProvider(new CacheSubprovider())\n      engine.addProvider(new RPCSubprovider(this.url, this.requestTimeoutMs))\n      this.provider = engine\n    }\n\n    this.provider.start()\n\n    return { provider: this.provider, chainId: this.chainId }\n  }\n\n  public async getProvider(): Promise<Web3ProviderEngine> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.chainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider._providers[0].getAccountsAsync(1).then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider.stop()\n  }\n}\n"],"names":["LedgerConnector","chainId","url","pollingInterval","requestTimeoutMs","accountFetchingConfigs","baseDerivationPath","supportedChainIds","activate","provider","engine","Web3ProviderEngine","addProvider","LedgerSubprovider","networkId","ledgerEthereumClientFactoryAsync","ledgerEthereumBrowserClientFactoryAsync","CacheSubprovider","RPCSubprovider","start","getProvider","getChainId","getAccount","_providers","getAccountsAsync","then","accounts","deactivate","stop","AbstractConnector"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAiBaA,eAAb;AAAA;;AAUE;;;QACEC,eAAAA;QACAC,WAAAA;QACAC,uBAAAA;QACAC,wBAAAA;QACAC,8BAAAA;QACAC,0BAAAA;AAEA,0CAAM;AAAEC,MAAAA,iBAAiB,EAAE,CAACN,OAAD;AAArB,KAAN;AAEA,UAAKA,OAAL,GAAeA,OAAf;AACA,UAAKC,GAAL,GAAWA,GAAX;AACA,UAAKC,eAAL,GAAuBA,eAAvB;AACA,UAAKC,gBAAL,GAAwBA,gBAAxB;AACA,UAAKC,sBAAL,GAA8BA,sBAA9B;AACA,UAAKC,kBAAL,GAA0BA,kBAA1B;;AACD;;AA1BH;;AAAA,SA4BeE,QA5Bf;AAAA;mBA6BS;;AAAL,UAAI,CAAC,OAAKC,QAAV,EAAoB;AAClB,YAAMC,MAAM,GAAG,IAAIC,kBAAJ,CAAuB;AAAER,UAAAA,eAAe,EAAE,OAAKA;AAAxB,SAAvB,CAAf;AACAO,QAAAA,MAAM,CAACE,WAAP,CACE,IAAIC,wBAAJ,CAAsB;AACpBC,UAAAA,SAAS,EAAE,OAAKb,OADI;AAEpBc,UAAAA,gCAAgC,EAAEC,2CAFd;AAGpBX,UAAAA,sBAAsB,EAAE,OAAKA,sBAHT;AAIpBC,UAAAA,kBAAkB,EAAE,OAAKA;AAJL,SAAtB,CADF;AAQAI,QAAAA,MAAM,CAACE,WAAP,CAAmB,IAAIK,gBAAJ,EAAnB;AACAP,QAAAA,MAAM,CAACE,WAAP,CAAmB,IAAIM,8BAAJ,CAAmB,OAAKhB,GAAxB,EAA6B,OAAKE,gBAAlC,CAAnB;AACA,eAAKK,QAAL,GAAgBC,MAAhB;AACD;;AAED,aAAKD,QAAL,CAAcU,KAAd;;AAEA,6BAAO;AAAEV,QAAAA,QAAQ,EAAE,OAAKA,QAAjB;AAA2BR,QAAAA,OAAO,EAAE,OAAKA;AAAzC,OAAP;AACD,KA/CH;AAAA;AAAA;AAAA;;AAAA,SAiDemB,WAjDf;AAAA;mBAkDW;;AAAP,6BAAO,OAAKX,QAAZ;AACD,KAnDH;AAAA;AAAA;AAAA;;AAAA,SAqDeY,UArDf;AAAA;mBAsDW;;AAAP,6BAAO,OAAKpB,OAAZ;AACD,KAvDH;AAAA;AAAA;AAAA;;AAAA,SAyDeqB,UAzDf;AAAA;mBA0DW;;AAAP,6BAAO,OAAKb,QAAL,CAAcc,UAAd,CAAyB,CAAzB,EAA4BC,gBAA5B,CAA6C,CAA7C,EAAgDC,IAAhD,CAAqD,UAACC,QAAD;AAAA,eAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,OAArD,CAAP;AACD,KA3DH;AAAA;AAAA;AAAA;;AAAA,SA6DSC,UA7DT,GA6DS;AACL,SAAKlB,QAAL,CAAcmB,IAAd;AACD,GA/DH;;AAAA;AAAA,EAAqCC,mCAArC;;;;"}