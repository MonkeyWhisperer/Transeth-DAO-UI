{"version":3,"file":"walletconnect-connector.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { IWalletConnectProviderOptions } from '@walletconnect/types'\n\nexport const URI_AVAILABLE = 'URI_AVAILABLE'\n\nexport interface WalletConnectConnectorArguments extends IWalletConnectProviderOptions {\n  supportedChainIds?: number[]\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nfunction getSupportedChains({ supportedChainIds, rpc }: WalletConnectConnectorArguments): number[] | undefined {\n  if (supportedChainIds) {\n    return supportedChainIds\n  }\n\n  return rpc ? Object.keys(rpc).map(k => Number(k)) : undefined\n}\n\nexport class WalletConnectConnector extends AbstractConnector {\n  private readonly config: WalletConnectConnectorArguments\n\n  public walletConnectProvider?: any\n\n  constructor(config: WalletConnectConnectorArguments) {\n    super({ supportedChainIds: getSupportedChains(config) })\n\n    this.config = config\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleDisconnect = this.handleDisconnect.bind(this)\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n\n  private handleDisconnect(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'disconnect' event\")\n    }\n    this.emitDeactivate()\n    // we have to do this because of a @walletconnect/web3-provider bug\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n      this.walletConnectProvider = undefined\n    }\n\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletConnectProvider) {\n      const WalletConnectProvider = await import('@walletconnect/web3-provider').then(m => m?.default ?? m)\n      this.walletConnectProvider = new WalletConnectProvider(this.config)\n    }\n\n    // ensure that the uri is going to be available, and emit an event if there's a new uri\n    if (!this.walletConnectProvider.wc.connected) {\n      await this.walletConnectProvider.wc.createSession({\n        chainId: this.supportedChainIds && this.supportedChainIds.length > 0 ? this.supportedChainIds[0] : 1\n      })\n      this.emit(URI_AVAILABLE, this.walletConnectProvider.wc.uri)\n    }\n\n    const account = await this.walletConnectProvider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        // TODO ideally this would be a better check\n        if (error.message === 'User closed modal') {\n          throw new UserRejectedRequestError()\n        }\n\n        throw error\n      })\n\n    this.walletConnectProvider.on('disconnect', this.handleDisconnect)\n    this.walletConnectProvider.on('chainChanged', this.handleChainChanged)\n    this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.walletConnectProvider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.walletConnectProvider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.walletConnectProvider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.walletConnectProvider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect)\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n    }\n  }\n\n  public async close() {\n    await this.walletConnectProvider?.close()\n  }\n}\n"],"names":["URI_AVAILABLE","UserRejectedRequestError","name","constructor","message","Error","getSupportedChains","supportedChainIds","rpc","Object","keys","map","k","Number","undefined","WalletConnectConnector","config","handleChainChanged","bind","handleAccountsChanged","handleDisconnect","chainId","console","log","emitUpdate","accounts","account","emitDeactivate","walletConnectProvider","stop","removeListener","activate","enable","then","error","on","provider","wc","connected","createSession","length","emit","uri","m","WalletConnectProvider","getProvider","getChainId","send","getAccount","deactivate","close","AbstractConnector"],"mappings":"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"}