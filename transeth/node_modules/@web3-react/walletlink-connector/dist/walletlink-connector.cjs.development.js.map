{"version":3,"file":"walletlink-connector.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nconst CHAIN_ID = 1\n\ninterface WalletLinkConnectorArguments {\n  url: string\n  appName: string\n  appLogoUrl?: string\n  darkMode?: boolean\n  supportedChainIds?: number[]\n}\n\nexport class WalletLinkConnector extends AbstractConnector {\n  private readonly url: string\n  private readonly appName: string\n  private readonly appLogoUrl?: string\n  private readonly darkMode: boolean\n\n  public walletLink: any\n  private provider: any\n\n  constructor({ url, appName, appLogoUrl, darkMode, supportedChainIds }: WalletLinkConnectorArguments) {\n    super({ supportedChainIds: supportedChainIds })\n\n    this.url = url\n    this.appName = appName\n    this.appLogoUrl = appLogoUrl\n    this.darkMode = darkMode || false\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    // @ts-ignore\n    if (window.ethereum && window.ethereum.isCoinbaseWallet === true) {\n      // user is in the dapp browser on Coinbase Wallet\n      this.provider = window.ethereum\n    } else if (!this.walletLink) {\n      const WalletLink = await import('walletlink').then(m => m?.default ?? m)\n      this.walletLink = new WalletLink({\n        appName: this.appName,\n        darkMode: this.darkMode,\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\n      })\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\n    }\n\n    const accounts = await this.provider.request({\n      method: 'eth_requestAccounts'\n    })\n    const account = accounts[0]\n\n    this.provider.on('chainChanged', this.handleChainChanged)\n    this.provider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.provider, account: account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    const accounts = await this.provider.request({\n      method: 'eth_requestAccounts'\n    })\n    return accounts[0]\n  }\n\n  public deactivate() {\n    this.provider.removeListener('chainChanged', this.handleChainChanged)\n    this.provider.removeListener('accountsChanged', this.handleAccountsChanged)\n  }\n\n  public async close() {\n    this.provider.close()\n    this.emitDeactivate()\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId: chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n}\n"],"names":["CHAIN_ID","WalletLinkConnector","url","appName","appLogoUrl","darkMode","supportedChainIds","handleChainChanged","bind","handleAccountsChanged","activate","provider","request","method","accounts","account","on","window","ethereum","isCoinbaseWallet","walletLink","then","m","WalletLink","makeWeb3Provider","getProvider","getChainId","chainId","getAccount","deactivate","removeListener","close","emitDeactivate","console","log","emitUpdate","AbstractConnector"],"mappings":"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"}