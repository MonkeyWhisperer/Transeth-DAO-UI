{"version":3,"sources":["../src/index.test.js"],"names":["encodeCallScript","callscriptUtils","APP_NAMESPACE_HASH","CORE_NAMESPACE_HASH","test","beforeEach","t","apmCoreStub","getApmInternalAppInfo","sinon","stub","aragonOSCoreStub","getAragonOsInternalAppInfo","configurationStub","setConfiguration","ensStub","resolve","messengerConstructorStub","signals","rpcSignals","utilsStub","AsyncRequestCache","getCacheKey","addressesEqual","Object","is","callscript","forwarding","forwardingUtils","makeAddressMapProxy","fake","returns","makeProxy","transactions","transactionsUtils","Aragon","proxyquire","noCallThru","load","apps","assign","apm","configurationKeys","default","context","createAragon","daoAddress","options","ensRegistryAddress","afterEach","always","restore","plan","app","not","instance","kernelProxyCallStub","withArgs","throws","kernelProxy","address","call","throwsAsync","init","instanceOf","Error","message","truthy","calledTwice","calledWith","FORCE_LOCAL_STORAGE","SUBSCRIPTION_EVENT_DELAY","cache","forceLocalStorage","events","subscriptionEventDelay","initAccounts","providedAccounts","accounts","getAccounts","deepEqual","web3","eth","resolves","fetchFromWeb3","testNetworkId","testNetworkType","getChainId","net","getNetworkType","initNetwork","network","subscribe","id","type","instance1","instance2","initGuiStyle","setGuiStyle","name","guiStyle","value","appearance","theme","aclEvents","event","returnValues","role","allowed","entity","manager","get","set","aclProxyStub","pastEvents","initAcl","Promise","permissions","counter","add","allowedEntities","subtract","kernelProxyStub","calledOnceWith","givenAclAddress","aclAddress","notCalled","neverCalledWith","kernelAddress","appInitTestCases","forEach","testName","permissionsObj","appIds","codeAddresses","keys","proxyStub","abi","isAragonOsInternalApp","returnsArg","fetchLatestRepoContentForContract","appId","initApps","pipe","codeAddress","proxyAddress","isForwarder","setAppEventStub","Subject","next","namespace","setTimeout","updated","initAppIdentifiers","appIdentifiers","setAppIdentifier","initIdentityProviders","identityProviderRegistrar","true","Map","size","expectedAddress","identityIntents","intent","providerName","requestAddressIdentityModification","all","then","val","reject","initForwarders","forwarders","messageToSign","requestingApp","signatures","signMessage","key","initialAddress","transaction","to","Array","isArray","path","length","performTransactionPath","targetAddress","functions","sig","roles","calculateTransactionPath","catch","err","targetMethodAbiFragment","targetParams","mockPath","data","aclProxy","getTransactionPath","externalPath","getExternalTransactionPath","mockTransaction","describeTransactionPath","createDirectTransaction","getACLTransactionPath","requestsStub","method","params","messengerStub","sendResponse","requests","makeProxyFromAppABI","updateInitializationBlock","initializationBlock","connect","runApp","result","shutdown","shutdownAndClearCache","getCall","args","ReplaySubject","callCount","runningProxyAddress","getAll","every","startsWith","getApp","getPermissionManager","script","decodedScript","decodeTransactionPath","children","nestedScript","substring","nestedScriptDataLength","toString","padStart","badSpecId"],"mappings":"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","sourcesContent":["import test from 'ava'\nimport sinon from 'sinon'\nimport proxyquire from 'proxyquire'\nimport { empty, from, of, ReplaySubject, Subject } from 'rxjs'\nimport { first } from 'rxjs/operators'\nimport { signals as rpcSignals } from '@aragon/rpc-messenger'\n\nimport * as apps from './apps'\nimport * as configurationKeys from './configuration/keys'\nimport * as apm from './core/apm'\nimport { getCacheKey } from './utils'\nimport AsyncRequestCache from './utils/AsyncRequestCache'\nimport * as callscriptUtils from './utils/callscript'\nimport * as forwardingUtils from './utils/forwarding'\nimport * as transactionsUtils from './utils/transactions'\n\nconst { encodeCallScript } = callscriptUtils\n\n// soliditySha3('app')\nconst APP_NAMESPACE_HASH = '0xf1f3eb40f5bc1ad1344716ced8b8a0431d840b5783aea1fd01786bc26f35ac0f'\n// soliditySha3('core')\nconst CORE_NAMESPACE_HASH = '0xc681a85306374a5ab27f0bbc385296a54bcd314a1948b6cf61c4ea1bc44bb9f8'\n\ntest.beforeEach(t => {\n  const apmCoreStub = {\n    getApmInternalAppInfo: sinon.stub()\n  }\n  const aragonOSCoreStub = {\n    getAragonOsInternalAppInfo: sinon.stub()\n  }\n  const configurationStub = {\n    setConfiguration: sinon.stub()\n  }\n  const ensStub = {\n    resolve: sinon.stub()\n  }\n  const messengerConstructorStub = sinon.stub()\n  messengerConstructorStub.signals = rpcSignals\n  const utilsStub = {\n    AsyncRequestCache,\n    getCacheKey,\n    addressesEqual: Object.is,\n    callscript: callscriptUtils,\n    forwarding: forwardingUtils,\n    makeAddressMapProxy: sinon.fake.returns({}),\n    makeProxy: sinon.stub(),\n    transactions: transactionsUtils\n  }\n  const Aragon = proxyquire.noCallThru().load('./index', {\n    '@aragon/rpc-messenger': messengerConstructorStub,\n    './apps': apps,\n    './core/aragonOS': aragonOSCoreStub,\n    './core/apm': Object.assign(apm, apmCoreStub),\n    './configuration': configurationStub,\n    './configuration/keys': configurationKeys,\n    './ens': () => ensStub,\n    './utils': utilsStub\n  }).default\n\n  // Helper for creating Aragon class instances\n  function createAragon (daoAddress = '0x00', options) {\n    return new Aragon(daoAddress, {\n      apm: {\n        ensRegistryAddress: '0x00'\n      },\n      ...options\n    })\n  }\n\n  t.context = {\n    Aragon,\n    apmCoreStub,\n    aragonOSCoreStub,\n    createAragon,\n    configurationStub,\n    ensStub,\n    messengerConstructorStub,\n    utilsStub\n  }\n})\n\ntest.afterEach.always(() => {\n  sinon.restore()\n})\n\ntest('should create an Aragon instance with no options given', t => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // act\n  const app = createAragon()\n  // assert\n  t.not(app.apm, undefined)\n})\n\ntest('should throw on init if daoAddress is not a Kernel', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const badDaoAddress = '0xbaddao'\n  const instance = createAragon(badDaoAddress)\n  // web3 will throw if a bad address ('0x') comes back\n  const kernelProxyCallStub = sinon.stub().withArgs('acl').throws()\n  instance.kernelProxy = {\n    address: badDaoAddress,\n    call: kernelProxyCallStub\n  }\n\n  // act and assert\n  await t.throwsAsync(\n    instance.init(),\n    {\n      instanceOf: Error,\n      message: `Provided daoAddress is not a DAO`\n    }\n  )\n})\n\ntest('should set the default configuration', t => {\n  const { createAragon, configurationStub } = t.context\n\n  t.plan(4)\n  // act\n  const instance = createAragon()\n  // assert\n  t.truthy(configurationStub.setConfiguration.calledTwice)\n  t.truthy(\n    configurationStub.setConfiguration.calledWith(configurationKeys.FORCE_LOCAL_STORAGE, false)\n  )\n  t.truthy(\n    configurationStub.setConfiguration.calledWith(configurationKeys.SUBSCRIPTION_EVENT_DELAY, 0)\n  )\n  t.not(instance.apm, undefined)\n})\n\ntest('should set the given configuration', t => {\n  const { createAragon, configurationStub } = t.context\n\n  t.plan(4)\n  // act\n  const instance = createAragon('0x00', {\n    cache: { forceLocalStorage: true },\n    events: { subscriptionEventDelay: 1000 }\n  })\n  // assert\n  t.truthy(configurationStub.setConfiguration.calledTwice)\n  t.truthy(\n    configurationStub.setConfiguration.calledWith(configurationKeys.FORCE_LOCAL_STORAGE, true)\n  )\n  t.truthy(\n    configurationStub.setConfiguration.calledWith(configurationKeys.SUBSCRIPTION_EVENT_DELAY, 1000)\n  )\n  t.not(instance.apm, undefined)\n})\n\ntest(\"should set the default configuration if overriding configuration doesn't contain keys\", t => {\n  const { createAragon, configurationStub } = t.context\n\n  t.plan(4)\n  // act\n  const instance = createAragon('0x00', {\n    cache: {},\n    events: {}\n  })\n  // assert\n  t.truthy(configurationStub.setConfiguration.calledTwice)\n  t.truthy(\n    configurationStub.setConfiguration.calledWith(configurationKeys.FORCE_LOCAL_STORAGE, false)\n  )\n  t.truthy(\n    configurationStub.setConfiguration.calledWith(configurationKeys.SUBSCRIPTION_EVENT_DELAY, 0)\n  )\n  t.not(instance.apm, undefined)\n})\n\ntest('should use provided accounts', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  // act\n  await instance.initAccounts({ providedAccounts: ['0x00'] })\n  const accounts = await instance.getAccounts()\n  // assert\n  t.deepEqual(accounts, ['0x00'])\n})\n\ntest('should get the accounts from web3', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  instance.web3 = {\n    eth: {\n      getAccounts: sinon.stub().resolves(['0x01', '0x02'])\n    }\n  }\n  // act\n  await instance.initAccounts({ fetchFromWeb3: true })\n  const accounts = await instance.getAccounts()\n  // assert\n  t.deepEqual(accounts, ['0x01', '0x02'])\n})\n\ntest('should not fetch the accounts if not asked', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  instance.web3 = {\n    eth: {\n      getAccounts: sinon.stub().resolves(['0x01', '0x02'])\n    }\n  }\n  // act\n  await instance.initAccounts({ fetchFromWeb3: false })\n  const accounts = await instance.getAccounts()\n  // assert\n  t.deepEqual(accounts, [])\n})\n\ntest('should get the network details from web3', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  const testNetworkId = 4\n  const testNetworkType = 'rinkeby'\n  instance.web3 = {\n    eth: {\n      getChainId: sinon.stub().resolves(testNetworkId),\n      net: {\n        getNetworkType: sinon.stub().resolves(testNetworkType)\n      }\n    }\n  }\n  // act\n  await instance.initNetwork()\n  // assert\n  instance.network.subscribe(network => {\n    t.deepEqual(network, {\n      id: testNetworkId,\n      type: testNetworkType\n    })\n  })\n})\n\ntest('should set the GUI style', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(2)\n\n  // arrange\n  const instance1 = createAragon()\n  const instance2 = createAragon()\n  instance1.initGuiStyle()\n  instance2.initGuiStyle()\n\n  // act\n  instance1.setGuiStyle('black', { name: 'Black theme' })\n  instance2.setGuiStyle('dark')\n\n  // assert\n  t.deepEqual(instance1.guiStyle.value, {\n    appearance: 'black',\n    theme: { name: 'Black theme' }\n  })\n  t.deepEqual(instance2.guiStyle.value, {\n    appearance: 'dark',\n    theme: null\n  })\n})\n\nconst aclEvents = from([{\n  event: 'SetPermission',\n  returnValues: {\n    app: 'counter',\n    role: 'add',\n    allowed: true,\n    entity: '0x1'\n  }\n}, {\n  event: 'SetPermission',\n  returnValues: {\n    app: 'counter',\n    role: 'subtract',\n    allowed: true,\n    entity: '0x1'\n  }\n}, {\n  event: 'SetPermission',\n  returnValues: {\n    app: 'counter',\n    role: 'add',\n    allowed: true,\n    entity: '0x2'\n  }\n}, {\n  event: 'SetPermission',\n  returnValues: {\n    app: 'counter',\n    role: 'subtract',\n    allowed: true,\n    entity: '0x2'\n  }\n}, {\n  // Simulate real world mixed order of event types\n  event: 'ChangePermissionManager',\n  returnValues: {\n    app: 'counter',\n    role: 'subtract',\n    manager: 'manager'\n  }\n}, {\n  event: 'SetPermission',\n  returnValues: {\n    app: 'counter',\n    role: 'subtract',\n    allowed: false,\n    entity: '0x2'\n  }\n}, {\n  // duplicate, should not affect the final result because we use a Set\n  event: 'SetPermission',\n  returnValues: {\n    app: 'counter',\n    role: 'subtract',\n    allowed: false,\n    entity: '0x2'\n  }\n}])\n\ntest('should init the ACL correctly', async (t) => {\n  const { createAragon, utilsStub } = t.context\n\n  t.plan(1)\n\n  const instance = createAragon()\n  instance.kernelProxy = {\n    call: sinon.stub()\n  }\n  instance.cache.get = sinon.stub().returns({})\n  instance.cache.set = sinon.stub().resolves()\n\n  const aclProxyStub = {\n    events: sinon.stub().returns(aclEvents),\n    pastEvents: sinon.stub().returns(empty())\n  }\n  utilsStub.makeProxy.returns(aclProxyStub)\n  // act\n  await instance.initAcl()\n  // assert, tell ava to wait for the permissions observable to debounce\n  return new Promise(resolve => {\n    instance.permissions.subscribe(value => {\n      t.deepEqual(value, {\n        counter: {\n          add: {\n            allowedEntities: ['0x1', '0x2']\n          },\n          subtract: {\n            allowedEntities: ['0x1'],\n            manager: 'manager'\n          }\n        }\n      })\n      // The permissions observable debounces, so we should only get one value back\n      resolve()\n    })\n  })\n})\n\ntest('should init the acl with the default acl fetched from the kernel by default', async (t) => {\n  const { createAragon, utilsStub } = t.context\n\n  t.plan(2)\n  // arrange\n  const defaultAclAddress = '0x321'\n  const aclProxyStub = {\n    events: sinon.stub().returns(aclEvents),\n    pastEvents: sinon.stub().returns(empty())\n  }\n\n  const kernelProxyStub = {\n    call: sinon.stub()\n      .withArgs('acl').resolves(defaultAclAddress)\n  }\n  utilsStub.makeProxy\n    .returns(kernelProxyStub)\n    .withArgs(defaultAclAddress).returns(aclProxyStub)\n\n  const instance = createAragon()\n  instance.cache.get = sinon.stub().returns({})\n  instance.cache.set = sinon.stub().resolves()\n\n  // act\n  await instance.initAcl()\n  // assert\n  t.truthy(kernelProxyStub.call.calledOnceWith('acl'))\n  t.truthy(utilsStub.makeProxy.calledWith(defaultAclAddress))\n})\n\ntest('should init the acl with the provided acl', async (t) => {\n  const { createAragon, utilsStub } = t.context\n\n  t.plan(3)\n  // arrange\n  const defaultAclAddress = '0x321'\n  const givenAclAddress = '0x123'\n  const aclProxyStub = {\n    events: sinon.stub().returns(aclEvents),\n    pastEvents: sinon.stub().returns(empty())\n  }\n  const kernelProxyStub = {\n    call: sinon.stub()\n      .withArgs('acl').resolves(defaultAclAddress)\n  }\n  utilsStub.makeProxy\n    .returns(kernelProxyStub)\n    .withArgs(givenAclAddress).returns(aclProxyStub)\n\n  const instance = createAragon()\n  instance.cache.get = sinon.stub().returns({})\n  instance.cache.set = sinon.stub().resolves()\n\n  // act\n  await instance.initAcl({ aclAddress: givenAclAddress })\n  // assert\n  t.truthy(kernelProxyStub.call.notCalled)\n  t.truthy(utilsStub.makeProxy.neverCalledWith(defaultAclAddress))\n  t.truthy(utilsStub.makeProxy.calledWith(givenAclAddress))\n})\n\nconst kernelAddress = '0x123'\nconst appInitTestCases = [\n  [\n    'with kernel in permissions',\n    {\n      [kernelAddress]: 'some permissions',\n      '0x456': 'some permissions',\n      '0x789': 'some permissions',\n      '0xrepo': 'some permissions'\n    }\n  ],\n  [\n    'without kernel in permissions',\n    {\n      '0x456': 'some permissions',\n      '0x789': 'some permissions',\n      '0xrepo': 'some permissions'\n    }\n  ]\n]\nappInitTestCases.forEach(([testName, permissionsObj]) => {\n  test(`should init the apps correctly - ${testName}`, async (t) => {\n    const { createAragon, aragonOSCoreStub, apmCoreStub, ensStub, utilsStub } = t.context\n\n    t.plan(1)\n    // arrange\n    const kernelAddress = '0x123'\n    const appIds = {\n      [kernelAddress]: 'kernel',\n      '0x456': 'counterApp',\n      '0x789': 'votingApp',\n      '0xrepo': 'repoApp'\n    }\n    const codeAddresses = {\n      [kernelAddress]: '0xkernel',\n      '0x456': '0xcounterApp',\n      '0x789': '0xvotingApp',\n      '0xrepo': '0xrepoApp'\n    }\n    // Stub makeProxy for each app\n    Object.keys(appIds).forEach(address => {\n      const proxyStub = {\n        call: sinon.stub()\n      }\n      proxyStub.call\n        .withArgs('kernel').resolves(kernelAddress)\n        .withArgs('appId').resolves(appIds[address])\n        .withArgs('implementation').resolves(codeAddresses[address])\n        .withArgs('isForwarder').resolves(false)\n\n      utilsStub.makeProxy\n        .withArgs(address).returns(proxyStub)\n    })\n    aragonOSCoreStub.getAragonOsInternalAppInfo.withArgs(appIds[kernelAddress]).returns({\n      abi: 'abi for kernel',\n      isAragonOsInternalApp: true\n    })\n    apmCoreStub.getApmInternalAppInfo.withArgs(appIds['0xrepo']).returns({\n      abi: 'abi for repo'\n    })\n    // Mock ens resolution to just return the appId\n    ensStub.resolve = sinon.stub().returnsArg(0)\n\n    const instance = createAragon()\n    instance.apm = {\n      fetchLatestRepoContentForContract: (appId) => Promise.resolve({\n        abi: `abi for ${appId}`\n      })\n    }\n    instance.permissions = of(permissionsObj)\n    instance.kernelProxy = {\n      address: kernelAddress,\n      call: sinon.stub().withArgs('KERNEL_APP_ID').resolves('kernel'),\n      events: sinon.stub().returns(empty())\n    }\n\n    // act\n    await instance.initApps()\n\n    // assert\n    // Check value of apps\n    return new Promise(resolve => {\n      instance.apps.pipe(first()).subscribe(value => {\n        t.deepEqual(value, [\n          {\n            abi: 'abi for kernel',\n            appId: 'kernel',\n            codeAddress: '0xkernel',\n            isAragonOsInternalApp: true,\n            proxyAddress: '0x123'\n          }, {\n            abi: 'abi for counterApp',\n            appId: 'counterApp',\n            codeAddress: '0xcounterApp',\n            isForwarder: false,\n            kernelAddress: '0x123',\n            proxyAddress: '0x456'\n          }, {\n            abi: 'abi for votingApp',\n            appId: 'votingApp',\n            codeAddress: '0xvotingApp',\n            isForwarder: false,\n            kernelAddress: '0x123',\n            proxyAddress: '0x789'\n          }, {\n            abi: 'abi for repoApp',\n            appId: 'repoApp',\n            codeAddress: '0xrepoApp',\n            isForwarder: false,\n            kernelAddress: '0x123',\n            proxyAddress: '0xrepo'\n          }\n        ])\n        resolve()\n      })\n    })\n  })\n})\n\ntest('should update the apps correctly on SetApp', async (t) => {\n  const { createAragon, aragonOSCoreStub, ensStub, utilsStub } = t.context\n  const setAppEventStub = new Subject()\n\n  t.plan(4)\n  // arrange\n  const kernelAddress = '0x123'\n  const permissionsObj = {\n    '0x456': 'some permissions',\n    '0x789': 'some permissions'\n  }\n  const appIds = {\n    [kernelAddress]: 'kernel',\n    '0x456': 'counterApp',\n    '0x789': 'votingApp'\n  }\n  const codeAddresses = {\n    [kernelAddress]: '0xkernel',\n    '0x456': '0xcounterApp',\n    '0x789': '0xvotingApp'\n  }\n  // Stub makeProxy for each app\n  Object.keys(appIds).forEach(address => {\n    const proxyStub = {\n      call: sinon.stub()\n    }\n    proxyStub.call\n      .withArgs('kernel').resolves(kernelAddress)\n      .withArgs('appId').resolves(appIds[address])\n      .withArgs('implementation').resolves(codeAddresses[address])\n      .withArgs('isForwarder').resolves(false)\n\n    utilsStub.makeProxy\n      .withArgs(address).returns(proxyStub)\n  })\n  aragonOSCoreStub.getAragonOsInternalAppInfo.withArgs(appIds[kernelAddress]).returns({\n    abi: 'abi for kernel',\n    isAragonOsInternalApp: true\n  })\n  // Mock ens resolution to just return the appId\n  ensStub.resolve = sinon.stub().returnsArg(0)\n\n  const instance = createAragon()\n  instance.apm = {\n    fetchLatestRepoContentForContract: (appId) => Promise.resolve({\n      abi: `abi for ${appId}`\n    })\n  }\n  instance.permissions = of(permissionsObj)\n  instance.kernelProxy = {\n    address: kernelAddress,\n    call: sinon.stub().withArgs('KERNEL_APP_ID').resolves('kernel'),\n    events: sinon.stub()\n      .withArgs('SetApp', {})\n      .returns(setAppEventStub)\n  }\n\n  // act\n  await instance.initApps()\n\n  // assert\n  // Check initial value of apps\n  await new Promise(resolve => {\n    instance.apps.pipe(first()).subscribe(value => {\n      t.deepEqual(value, [\n        {\n          abi: 'abi for kernel',\n          appId: 'kernel',\n          codeAddress: '0xkernel',\n          isAragonOsInternalApp: true,\n          proxyAddress: '0x123'\n        }, {\n          abi: 'abi for counterApp',\n          appId: 'counterApp',\n          codeAddress: '0xcounterApp',\n          isForwarder: false,\n          kernelAddress: '0x123',\n          proxyAddress: '0x456'\n        }, {\n          abi: 'abi for votingApp',\n          appId: 'votingApp',\n          codeAddress: '0xvotingApp',\n          isForwarder: false,\n          kernelAddress: '0x123',\n          proxyAddress: '0x789'\n        }\n      ])\n      resolve()\n    })\n  })\n\n  // act\n  setAppEventStub.next({\n    returnValues: {\n      appId: 'counterApp',\n      namespace: APP_NAMESPACE_HASH\n    }\n  })\n  await new Promise(resolve => setTimeout(resolve, 100)) // let the emission propagate\n\n  // assert\n  // Check app has been updated\n  await new Promise(resolve => {\n    instance.apps.pipe(first()).subscribe(value => {\n      t.deepEqual(value, [\n        {\n          abi: 'abi for kernel',\n          appId: 'kernel',\n          codeAddress: '0xkernel',\n          isAragonOsInternalApp: true,\n          proxyAddress: '0x123'\n        }, {\n          abi: 'abi for counterApp',\n          appId: 'counterApp',\n          codeAddress: '0xcounterApp',\n          isForwarder: false,\n          kernelAddress: '0x123',\n          proxyAddress: '0x456',\n          updated: true\n        }, {\n          abi: 'abi for votingApp',\n          appId: 'votingApp',\n          codeAddress: '0xvotingApp',\n          isForwarder: false,\n          kernelAddress: '0x123',\n          proxyAddress: '0x789'\n        }\n      ])\n      resolve()\n    })\n  })\n\n  // act\n  setAppEventStub.next({\n    returnValues: {\n      appId: 'votingApp',\n      namespace: APP_NAMESPACE_HASH\n    }\n  })\n  await new Promise(resolve => setTimeout(resolve, 100)) // let the emission propagate\n\n  // assert\n  // Check correct app has been updated\n  await new Promise(resolve => {\n    instance.apps.pipe(first()).subscribe(value => {\n      t.deepEqual(value, [\n        {\n          abi: 'abi for kernel',\n          appId: 'kernel',\n          codeAddress: '0xkernel',\n          isAragonOsInternalApp: true,\n          proxyAddress: '0x123'\n        }, {\n          abi: 'abi for counterApp',\n          appId: 'counterApp',\n          codeAddress: '0xcounterApp',\n          isForwarder: false,\n          kernelAddress: '0x123',\n          proxyAddress: '0x456'\n        }, {\n          abi: 'abi for votingApp',\n          appId: 'votingApp',\n          codeAddress: '0xvotingApp',\n          isForwarder: false,\n          kernelAddress: '0x123',\n          proxyAddress: '0x789',\n          updated: true\n        }\n      ])\n      resolve()\n    })\n  })\n\n  // act\n  setAppEventStub.next({\n    returnValues: {\n      appId: 'counterApp',\n      namespace: CORE_NAMESPACE_HASH\n    }\n  })\n  await new Promise(resolve => setTimeout(resolve, 100)) // let the emission propagate\n\n  // assert\n  // Check that we filtered the last emission as it wasn't the correct namespace\n  await new Promise(resolve => {\n    instance.apps.pipe(first()).subscribe(value => {\n      t.deepEqual(value, [\n        {\n          abi: 'abi for kernel',\n          appId: 'kernel',\n          codeAddress: '0xkernel',\n          isAragonOsInternalApp: true,\n          proxyAddress: '0x123'\n        }, {\n          abi: 'abi for counterApp',\n          appId: 'counterApp',\n          codeAddress: '0xcounterApp',\n          isForwarder: false,\n          kernelAddress: '0x123',\n          proxyAddress: '0x456'\n        }, {\n          abi: 'abi for votingApp',\n          appId: 'votingApp',\n          codeAddress: '0xvotingApp',\n          isForwarder: false,\n          kernelAddress: '0x123',\n          proxyAddress: '0x789',\n          updated: true\n        }\n      ])\n      resolve()\n    })\n  })\n})\n\ntest('should init the app identifiers correctly', async (t) => {\n  t.plan(1)\n  // arrange\n  const { createAragon } = t.context\n  const instance = createAragon()\n  // act\n  await instance.initAppIdentifiers()\n  // assert\n  instance.appIdentifiers.subscribe(value => {\n    t.deepEqual(value, {})\n  })\n})\n\ntest('should emit reduced app identifiers correctly', async (t) => {\n  t.plan(3)\n  // arrange\n  const { createAragon } = t.context\n  const instance = createAragon()\n  await instance.initAppIdentifiers()\n\n  // act\n  instance.setAppIdentifier('0x123', 'ANT')\n  // assert\n  instance.appIdentifiers.pipe(first()).subscribe(value => {\n    t.deepEqual(value, {\n      '0x123': 'ANT'\n    })\n  })\n\n  // act\n  instance.setAppIdentifier('0x456', 'BNT')\n  // assert\n  instance.appIdentifiers.pipe(first()).subscribe(value => {\n    t.deepEqual(value, {\n      '0x123': 'ANT',\n      '0x456': 'BNT'\n    })\n  })\n\n  // act\n  instance.setAppIdentifier('0x123', 'CNT')\n  // assert\n  instance.appIdentifiers.pipe(first()).subscribe(value => {\n    t.deepEqual(value, {\n      '0x123': 'CNT',\n      '0x456': 'BNT'\n    })\n  })\n})\n\ntest('should init the identity providers correctly', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(3)\n  // arrange\n  const instance = createAragon()\n\n  // act\n  await instance.initIdentityProviders()\n  // assert\n  t.truthy(instance.identityProviderRegistrar)\n  t.true(instance.identityProviderRegistrar instanceof Map)\n  t.is(instance.identityProviderRegistrar.size, 1, 'Should have only one provider')\n})\n\ntest('should emit an intent when requesting address identity modification', async (t) => {\n  const { createAragon } = t.context\n  const expectedAddress = '0x123'\n\n  t.plan(2)\n  // arrange\n  const instance = createAragon()\n\n  // act\n  await instance.initIdentityProviders()\n\n  instance.identityIntents.subscribe(intent => {\n    t.is(intent.address, expectedAddress)\n    t.is(intent.providerName, 'local')\n  })\n\n  instance.requestAddressIdentityModification(expectedAddress)\n})\n\ntest('should be able to resolve intent when requesting address identity modification', async (t) => {\n  const { createAragon } = t.context\n  const expectedAddress = '0x123'\n\n  t.plan(2)\n  // arrange\n  const instance = createAragon()\n\n  // act\n  await instance.initIdentityProviders()\n\n  let counter = 0\n  instance.identityIntents.subscribe(intent => {\n    intent.resolve(counter++)\n  })\n\n  return Promise.all([\n    instance.requestAddressIdentityModification(expectedAddress).then(val => t.is(val, 0)),\n    instance.requestAddressIdentityModification(expectedAddress).then(val => t.is(val, 1))\n  ])\n})\n\ntest('should be able to reject intent when requesting address identity modification', async (t) => {\n  const { createAragon } = t.context\n  const expectedAddress = '0x123'\n\n  t.plan(2)\n  // arrange\n  const instance = createAragon()\n\n  // act\n  await instance.initIdentityProviders()\n\n  let counter = 0\n  instance.identityIntents.subscribe(intent => {\n    if (counter === 0) {\n      intent.reject()\n    } else {\n      intent.reject(new Error('custom error'))\n    }\n    counter++\n  })\n\n  return Promise.all([\n    t.throwsAsync(\n      instance.requestAddressIdentityModification(expectedAddress),\n      {\n        instanceOf: Error,\n        message: 'The identity modification was not completed'\n      }\n    ),\n    t.throwsAsync(\n      instance.requestAddressIdentityModification(expectedAddress),\n      {\n        instanceOf: Error,\n        message: 'custom error'\n      }\n    )\n  ])\n})\n\ntest('should init the forwarders correctly', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  instance.apps = of([\n    {\n      appId: 'counterApp',\n      isForwarder: true\n    }, {\n      appId: 'votingApp',\n      isForwarder: false\n    }\n  ])\n  // act\n  await instance.initForwarders()\n  // assert\n  instance.forwarders.subscribe(value => {\n    t.deepEqual(value, [\n      {\n        appId: 'counterApp',\n        isForwarder: true\n      }\n    ])\n  })\n})\n\ntest('should emit an intent when requesting message signing', async (t) => {\n  const { createAragon } = t.context\n  const messageToSign = 'test message'\n  const requestingApp = '0x123'\n\n  t.plan(2)\n  // arrange\n  const instance = createAragon()\n  instance.signatures = new Subject()\n\n  // act\n  instance.signatures.subscribe(intent => {\n    t.is(intent.message, messageToSign)\n    t.is(intent.requestingApp, requestingApp)\n  })\n\n  instance.signMessage(messageToSign, requestingApp)\n})\n\ntest('should be able to resolve intent when requesting message signing', async (t) => {\n  const { createAragon } = t.context\n  const messageToSign = 'test message'\n  const requestingApp = '0x123'\n\n  t.plan(2)\n  // arrange\n  const instance = createAragon()\n  instance.signatures = new Subject()\n\n  // act\n  let counter = 0\n  instance.signatures.subscribe(intent => {\n    intent.resolve(counter++)\n  })\n\n  return Promise.all([\n    instance.signMessage(messageToSign, requestingApp).then(val => t.is(val, 0)),\n    instance.signMessage(messageToSign, requestingApp).then(val => t.is(val, 1))\n  ])\n})\n\ntest('should be able to reject intent when requesting message signing', async (t) => {\n  const { createAragon } = t.context\n  const messageToSign = 'test message'\n  const requestingApp = '0x123'\n\n  t.plan(2)\n  // arrange\n  const instance = createAragon()\n  instance.signatures = new Subject()\n\n  // act\n  let counter = 0\n  instance.signatures.subscribe(intent => {\n    if (counter === 0) {\n      intent.reject()\n    } else {\n      intent.reject(new Error('custom error'))\n    }\n    counter++\n  })\n\n  return Promise.all([\n    t.throwsAsync(\n      instance.signMessage(messageToSign, requestingApp),\n      {\n        instanceOf: Error,\n        message: 'The message was not signed'\n      }\n    ),\n    t.throwsAsync(\n      instance.signMessage(messageToSign, requestingApp),\n      {\n        instanceOf: Error,\n        message: 'custom error'\n      }\n    )\n  ])\n})\n\ntest('should reject non-string message when requesting message signature', async (t) => {\n  const { createAragon } = t.context\n  const messageToSign = { key: 'this is not a string' }\n  const requestingApp = '0x123'\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n\n  // act\n  return t.throwsAsync(instance.signMessage(messageToSign, requestingApp),\n    {\n      instanceOf: Error,\n      message: 'Message to sign must be a string'\n    }\n  )\n})\n\ntest('should emit an intent when performing transaction path', async (t) => {\n  const { createAragon } = t.context\n  const initialAddress = '0x123'\n  const targetAddress = '0x456'\n\n  t.plan(3)\n  // arrange\n  const instance = createAragon()\n  instance.transactions = new Subject()\n\n  // act\n  instance.transactions.subscribe(intent => {\n    t.deepEqual(intent.transaction, { to: initialAddress })\n    t.true(Array.isArray(intent.path))\n    t.is(intent.path.length, 2)\n  })\n\n  instance.performTransactionPath([{ to: initialAddress }, { to: targetAddress }])\n})\n\ntest('should be able to resolve intent when performing transaction path', async (t) => {\n  const { createAragon } = t.context\n  const initialAddress = '0x123'\n  const targetAddress = '0x456'\n\n  t.plan(2)\n  // arrange\n  const instance = createAragon()\n  instance.transactions = new Subject()\n\n  // act\n  let counter = 0\n  instance.transactions.subscribe(intent => {\n    intent.resolve(counter++)\n  })\n\n  return Promise.all([\n    instance.performTransactionPath([{ to: initialAddress }, { to: targetAddress }]).then(val => t.is(val, 0)),\n    instance.performTransactionPath([{ to: initialAddress }, { to: targetAddress }]).then(val => t.is(val, 1))\n  ])\n})\n\ntest('should be able to reject intent when perform transaction path', async (t) => {\n  const { createAragon } = t.context\n  const initialAddress = '0x123'\n  const targetAddress = '0x456'\n\n  t.plan(2)\n  // arrange\n  const instance = createAragon()\n  instance.transactions = new Subject()\n\n  // act\n  let counter = 0\n  instance.transactions.subscribe(intent => {\n    if (counter === 0) {\n      intent.reject()\n    } else {\n      intent.reject(new Error('custom error'))\n    }\n    counter++\n  })\n\n  return Promise.all([\n    t.throwsAsync(\n      instance.performTransactionPath([{ to: initialAddress }, { to: targetAddress }]),\n      {\n        instanceOf: Error,\n        message: 'The transaction was not signed'\n      }\n    ),\n    t.throwsAsync(\n      instance.performTransactionPath([{ to: initialAddress }, { to: targetAddress }]),\n      {\n        instanceOf: Error,\n        message: 'custom error'\n      }\n    )\n  ])\n})\n\ntest('should throw if no functions are found, when calculating the transaction path', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  instance.permissions = of({\n    counter: {\n      add: {\n        allowedEntities: ['0x1', '0x2']\n      },\n      subtract: {\n        allowedEntities: ['0x1'],\n        manager: 'im manager'\n      }\n    }\n  })\n  instance.forwarders = of([\n    {\n      appId: 'forwarderA',\n      proxyAddress: '0x999'\n    }\n  ])\n  instance.apps = of([\n    {\n      appId: 'counterApp',\n      kernelAddress: '0x123',\n      functions: [{\n        sig: 'signature',\n        roles: []\n      }],\n      proxyAddress: '0x456'\n    }, {\n      appId: 'votingApp',\n      kernelAddress: '0x123',\n      // functions: [{\n      //   sig: 'signature',\n      //   roles: []\n      // }],\n      proxyAddress: '0x789'\n    }\n  ])\n  // act\n  return instance.calculateTransactionPath(null, '0x789', 'signature')\n    .catch(err => {\n      // assert\n      t.is(err.message, 'No method named signature on 0x789')\n      /*\n       * Note: This test also \"asserts\" that the permissions object, the app object and the\n       * forwarders array does not throw any errors when they are being extracted from their observables.\n       */\n    })\n})\n\ntest('should use normal transaction pathing when finding external transaction path for installed app', async (t) => {\n  const { createAragon } = t.context\n  const targetAddress = '0x123'\n  const targetMethodAbiFragment = [{ name: 'foo' }]\n  const targetParams = [8]\n  const mockPath = [{ to: '0x123', data: '0x456' }]\n\n  t.plan(2)\n  // arrange\n  const instance = createAragon()\n  instance.accounts = of('0x00')\n  instance.aclProxy = of({\n    address: '0x456'\n  })\n  instance.apps = of([\n    {\n      appId: 'counterApp',\n      kernelAddress: '0x789',\n      abi: 'abi for counterApp',\n      proxyAddress: targetAddress\n    }\n  ])\n  instance.getTransactionPath = sinon.stub().returns(mockPath)\n  // act\n  const externalPath = await instance.getExternalTransactionPath(targetAddress, targetMethodAbiFragment, targetParams)\n  // assert\n  t.deepEqual(externalPath, mockPath)\n  t.true(instance.getTransactionPath.calledOnceWith(targetAddress, targetMethodAbiFragment.name, targetParams))\n})\n\ntest('should be able to find external transaction path for non-installed app', async (t) => {\n  const { createAragon, utilsStub } = t.context\n  const targetAddress = '0x123'\n  const targetMethodAbiFragment = [{ name: 'foo' }]\n  const targetParams = [8]\n  const mockTransaction = { to: targetAddress, data: '0x123' }\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  instance.accounts = of('0x00')\n  instance.aclProxy = of({\n    address: '0x456'\n  })\n  instance.apps = of([\n    {\n      appId: 'counterApp',\n      kernelAddress: '0x789',\n      abi: 'abi for counterApp',\n      proxyAddress: '0x456'\n    }\n  ])\n  instance.describeTransactionPath = sinon.stub().returnsArg(0)\n  utilsStub.transactions.createDirectTransaction = sinon.stub().returns(mockTransaction)\n  // act\n  const externalPath = await instance.getExternalTransactionPath(targetAddress, targetMethodAbiFragment, targetParams)\n  // assert\n  t.deepEqual(externalPath, [mockTransaction])\n})\n\ntest('should be able to find external transaction path for ACL', async (t) => {\n  const { createAragon, utilsStub } = t.context\n  const targetAddress = '0x123'\n  const targetMethodAbiFragment = [{ name: 'foo' }]\n  const targetParams = [8]\n  const mockPath = [{ to: '0x123', data: '0x123' }]\n\n  t.plan(2)\n  // arrange\n  const instance = createAragon()\n  instance.accounts = of('0x00')\n  instance.aclProxy = of({\n    address: targetAddress\n  })\n  instance.apps = of([\n    {\n      appId: 'ACL',\n      kernelAddress: '0x789',\n      abi: 'abi for ACL',\n      proxyAddress: '0x456'\n    }\n  ])\n  utilsStub.addressesEqual = sinon.stub().returns(true)\n  instance.getACLTransactionPath = sinon.stub().returns(mockPath)\n  // act\n  const externalPath = await instance.getExternalTransactionPath(targetAddress, targetMethodAbiFragment, targetParams)\n  // assert\n  t.deepEqual(externalPath, mockPath)\n  t.true(instance.getACLTransactionPath.calledOnceWith(targetMethodAbiFragment.name, targetParams))\n})\n\ntest('should run the app and reply to a request', async (t) => {\n  const { createAragon, messengerConstructorStub, utilsStub } = t.context\n\n  // Note: This is not a \"real\" unit test because the rpc handlers are not mocked\n  t.plan(4)\n  // arrange\n  const requestsStub = of({\n    id: 'uuid1',\n    method: 'cache',\n    params: ['get', 'settings']\n  })\n  const messengerStub = {\n    sendResponse: sinon.stub(),\n    requests: () => requestsStub\n  }\n  messengerConstructorStub.withArgs('someMessageProvider').returns(messengerStub)\n\n  const instance = createAragon()\n  instance.cache.get = sinon.stub()\n    .withArgs('0x789.settings')\n    .returns(of('user settings for the voting app'))\n  instance.apps = of([\n    {\n      appId: 'some other app with a different proxy',\n      proxyAddress: '0x456'\n    }, {\n      appId: 'votingApp',\n      kernelAddress: '0x123',\n      abi: 'abi for votingApp',\n      proxyAddress: '0x789'\n    }\n  ])\n  utilsStub.makeProxyFromAppABI = (proxyAddress) => ({\n    address: proxyAddress,\n    updateInitializationBlock: () => {}\n  })\n  instance.kernelProxy = { initializationBlock: 0 }\n  // act\n  const connect = await instance.runApp('0x789')\n  const result = connect('someMessageProvider')\n  // assert\n  t.true(result.shutdown !== undefined)\n  t.true(result.shutdownAndClearCache !== undefined)\n  /**\n   * What we're testing here is that the request for getting the cache (messenger.requests())\n   * is handled by the appropriate requestHandler.\n   */\n  t.is(messengerStub.sendResponse.getCall(0).args[0], 'uuid1')\n  t.is(messengerStub.sendResponse.getCall(0).args[1], 'user settings for the voting app')\n})\n\ntest('should run the app and be able to shutdown', async (t) => {\n  const { createAragon, messengerConstructorStub, utilsStub } = t.context\n\n  // Note: This is not a \"real\" unit test because the rpc handlers are not mocked\n  t.plan(1)\n  // arrange\n  const requestsStub = new Subject()\n  const messengerStub = {\n    sendResponse: sinon.stub(),\n    requests: () => requestsStub\n  }\n  messengerConstructorStub.withArgs('someMessageProvider').returns(messengerStub)\n\n  const instance = createAragon()\n  instance.apps = of([\n    {\n      appId: 'some other app with a different proxy',\n      proxyAddress: '0x456'\n    }, {\n      appId: 'votingApp',\n      kernelAddress: '0x123',\n      abi: 'abi for votingApp',\n      proxyAddress: '0x789'\n    }\n  ])\n  // Mimic never-ending stream\n  instance.accounts = new ReplaySubject(1)\n  instance.accounts.next('0x00')\n\n  utilsStub.makeProxyFromAppABI = (proxyAddress) => ({\n    address: proxyAddress,\n    updateInitializationBlock: () => {}\n  })\n  instance.kernelProxy = { initializationBlock: 0 }\n\n  // act\n  const connect = await instance.runApp('0x789')\n  const result = connect('someMessageProvider')\n\n  // send one message\n  requestsStub.next({\n    id: 'uuid1',\n    method: 'accounts'\n  })\n\n  // shutdown\n  result.shutdown()\n\n  // should not handle message after shutdown\n  requestsStub.next({\n    id: 'uuid2',\n    method: 'accounts'\n  })\n\n  // assert\n  // test that we've only handled messages before the handlers were shutdown\n  t.is(messengerStub.sendResponse.callCount, 1)\n})\n\ntest('should run the app and be able to shutdown and clear cache', async (t) => {\n  const { createAragon, messengerConstructorStub, utilsStub } = t.context\n  const runningProxyAddress = '0x789'\n\n  // Note: This is not a \"real\" unit test because the rpc handlers are not mocked\n  t.plan(2)\n  // arrange\n  const requestsStub = new Subject()\n  const messengerStub = {\n    sendResponse: sinon.stub(),\n    requests: () => requestsStub\n  }\n  messengerConstructorStub.withArgs('someMessageProvider').returns(messengerStub)\n\n  const instance = createAragon()\n  instance.apps = of([\n    {\n      appId: 'some other app with a different proxy',\n      proxyAddress: '0x456'\n    }, {\n      appId: 'votingApp',\n      kernelAddress: '0x123',\n      abi: 'abi for votingApp',\n      proxyAddress: runningProxyAddress\n    }\n  ])\n  // Mimic never-ending stream\n  instance.accounts = new ReplaySubject(1)\n  instance.accounts.next('0x00')\n\n  utilsStub.makeProxyFromAppABI = (proxyAddress) => ({\n    address: proxyAddress,\n    updateInitializationBlock: () => {}\n  })\n  instance.kernelProxy = { initializationBlock: 0 }\n\n  // set up cache\n  await instance.cache.init()\n  await instance.cache.set(`${runningProxyAddress}.key1`, 'value1')\n  await instance.cache.set(`${runningProxyAddress}.key2`, 'value2')\n  await instance.cache.set('alternative.key', 'alternative value')\n\n  // act\n  const connect = await instance.runApp(runningProxyAddress)\n  const result = connect('someMessageProvider')\n\n  // send one message\n  requestsStub.next({\n    id: 'uuid1',\n    method: 'accounts'\n  })\n\n  // shutdown and clear cache\n  await result.shutdownAndClearCache()\n\n  // should not handle message after shutdown\n  requestsStub.next({\n    id: 'uuid2',\n    method: 'accounts'\n  })\n\n  // assert\n  // test that we've only handled messages before the handlers were shutdown\n  t.is(messengerStub.sendResponse.callCount, 1)\n  // test that we've cleared the cache for the running app\n  t.true(Object.keys(await instance.cache.getAll()).every(key => !key.startsWith(runningProxyAddress)))\n})\n\ntest('should get the app from a proxy address', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  instance.apps = of([\n    {\n      appId: 'some other app with a different proxy',\n      proxyAddress: '0x456'\n    }, {\n      appId: 'votingApp',\n      kernelAddress: '0x123',\n      abi: 'abi for votingApp',\n      proxyAddress: '0x789'\n    }\n  ])\n  // act\n  const result = await instance.getApp('0x789')\n  // assert\n  t.deepEqual(result, {\n    appId: 'votingApp',\n    kernelAddress: '0x123',\n    abi: 'abi for votingApp',\n    proxyAddress: '0x789'\n  })\n})\n\ntest('should get the permission manager', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  instance.permissions = of({\n    counter: {\n      add: {\n        allowedEntities: ['0x1', '0x2']\n      },\n      subtract: {\n        allowedEntities: ['0x1'],\n        manager: 'im manager'\n      }\n    }\n  })\n  // act\n  const result = await instance.getPermissionManager('counter', 'subtract')\n  // assert\n  t.is(result, 'im manager')\n})\n\ntest('should be able to decode an evm call script with a single transaction', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  const script = encodeCallScript([{\n    to: '0xcafe1a77e84698c83ca8931f54a755176ef75f2c',\n    data: '0xcafe'\n  }])\n  // act\n  const decodedScript = instance.decodeTransactionPath(script)\n  // assert\n  t.deepEqual(decodedScript, [\n    {\n      data: '0xcafe',\n      to: '0xcafe1a77e84698c83ca8931f54a755176ef75f2c'\n    }\n  ])\n})\n\ntest('should be able to decode an evm call script with multiple transactions', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  const script = encodeCallScript([{\n    to: '0xcafe1a77e84698c83ca8931f54a755176ef75f2c',\n    data: '0xcafe'\n  }, {\n    to: '0xbeefbeef03c7e5a1c29e0aa675f8e16aee0a5fad',\n    data: '0xbeef'\n  }, {\n    to: '0xbaaabaaa03c7e5a1c29e0aa675f8e16aee0a5fad',\n    data: '0x'\n  }])\n  // act\n  const decodedScript = instance.decodeTransactionPath(script)\n  // assert\n  t.deepEqual(decodedScript, [\n    {\n      to: '0xcafe1a77e84698c83ca8931f54a755176ef75f2c',\n      data: '0xcafe'\n    }, {\n      to: '0xbeefbeef03c7e5a1c29e0aa675f8e16aee0a5fad',\n      data: '0xbeef'\n    }, {\n      to: '0xbaaabaaa03c7e5a1c29e0aa675f8e16aee0a5fad',\n      data: '0x'\n    }\n  ])\n})\n\ntest('should be able to decode an evm call script with multiple nested transactions', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  /* eslint-disable no-multi-spaces */\n  const script = encodeCallScript([{\n    to: '0xbfd1f54dc1c3b50ddf2f1d5fe2f8a6b9c29bb598',\n    data: '0x' +\n          'd948d468' +                                                            // forward signature\n          '0000000000000000000000000000000000000000000000000000000000000020' +    // offset\n          '0000000000000000000000000000000000000000000000000000000000000060' +    // 96 data bytes length\n          '00000001' +                                                            // spec id\n          '14a3208711873b6aab2005f6cca0f91658e287ef' +                            // forward target\n          '00000044' +                                                            // 68 data bytes length\n          '40c10f19' +                                                            // mint\n          '000000000000000000000000b4124cEB3451635DAcedd11767f004d8a28c6eE7' +    // token holder\n          '0000000000000000000000000000000000000000000000003782dace9d900000'      // 4e18\n  }, {\n    to: '0x634faa183ba1f5f968cb96656d24dff66021f5a2',\n    data: '0x' +\n          'd948d468' +                                                            // forward signature\n          '0000000000000000000000000000000000000000000000000000000000000020' +    // offset\n          '00000000000000000000000000000000000000000000000000000000000000c0' +    // 192 data bytes length\n          '00000001' +                                                            // spec id\n          '14a3208711873b6aab2005f6cca0f91658e287ef' +                            // forward target\n          '000000a4' +                                                            // 164 data bytes length\n          'bfe07da6' +                                                            // deposit\n          '0000000000000000000000008401eb5ff34cc943f096a32ef3d5113febe8d4eb' +    // token holder\n          '0000000000000000000000000000000000000000000000000de0b6b3a7640000' +    // 1e18\n          '0000000000000000000000000000000000000000000000000000000000000020' +    // 1 word\n          '0000000000000000000000000000000000000000000000000000000000000004' +    // 4 bytes\n          '4141414100000000000000000000000000000000000000000000000000000000'      // \"AAAA\" encoded\n  }])\n  /* eslint-enable no-multi-spaces */\n  // act\n  const decodedScript = instance.decodeTransactionPath(script)\n  // assert\n  t.deepEqual(decodedScript, [\n    {\n      to: '0xbfd1f54dc1c3b50ddf2f1d5fe2f8a6b9c29bb598',\n      data: '0x' +\n            'd948d468' +\n            '0000000000000000000000000000000000000000000000000000000000000020' +\n            '0000000000000000000000000000000000000000000000000000000000000060' +\n            '00000001' +\n            '14a3208711873b6aab2005f6cca0f91658e287ef' +\n            '00000044' +\n            '40c10f19' +\n            '000000000000000000000000b4124cEB3451635DAcedd11767f004d8a28c6eE7' +\n            '0000000000000000000000000000000000000000000000003782dace9d900000',\n      children: [{\n        data: '0x' +\n            '40c10f19' +\n            '000000000000000000000000b4124cEB3451635DAcedd11767f004d8a28c6eE7' +\n            '0000000000000000000000000000000000000000000000003782dace9d900000',\n        to: '0x14a3208711873b6aab2005f6cca0f91658e287ef'\n      }]\n    }, {\n      to: '0x634faa183ba1f5f968cb96656d24dff66021f5a2',\n      data: '0x' +\n            'd948d468' +\n            '0000000000000000000000000000000000000000000000000000000000000020' +\n            '00000000000000000000000000000000000000000000000000000000000000c0' +\n            '00000001' +\n            '14a3208711873b6aab2005f6cca0f91658e287ef' +\n            '000000a4' +\n            'bfe07da6' +\n            '0000000000000000000000008401eb5ff34cc943f096a32ef3d5113febe8d4eb' +\n            '0000000000000000000000000000000000000000000000000de0b6b3a7640000' +\n            '0000000000000000000000000000000000000000000000000000000000000020' +\n            '0000000000000000000000000000000000000000000000000000000000000004' +\n            '4141414100000000000000000000000000000000000000000000000000000000',\n      children: [{\n        data: '0x' +\n              'bfe07da6' +\n              '0000000000000000000000008401eb5ff34cc943f096a32ef3d5113febe8d4eb' +\n              '0000000000000000000000000000000000000000000000000de0b6b3a7640000' +\n              '0000000000000000000000000000000000000000000000000000000000000020' +\n              '0000000000000000000000000000000000000000000000000000000000000004' +\n              '4141414100000000000000000000000000000000000000000000000000000000',\n        to: '0x14a3208711873b6aab2005f6cca0f91658e287ef'\n      }]\n    }\n  ])\n})\n\ntest('should be able to decode an evm call script with a complex nested transaction', async (t) => {\n  const { createAragon } = t.context\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  /* eslint-disable no-multi-spaces */\n  const nestedScript =\n    encodeCallScript([{\n      to: '0xbfd1f54dc1c3b50ddf2f1d5fe2f8a6b9c29bb598',\n      data: '0x' +\n            'd948d468' +                                                            // forward signature\n            '0000000000000000000000000000000000000000000000000000000000000020' +    // offset\n            '0000000000000000000000000000000000000000000000000000000000000060' +    // 96 data bytes length\n            '00000001' +                                                            // spec id\n            '14a3208711873b6aab2005f6cca0f91658e287ef' +                            // forward target\n            '00000044' +                                                            // 68 data bytes length\n            '40c10f19' +                                                            // mint\n            '000000000000000000000000b4124cEB3451635DAcedd11767f004d8a28c6eE7' +    // token holder\n            '0000000000000000000000000000000000000000000000003782dace9d900000'      // 4e18\n    }, {\n      to: '0x634faa183ba1f5f968cb96656d24dff66021f5a2',\n      data: '0x' +\n            'd948d468' +                                                            // forward signature\n            '0000000000000000000000000000000000000000000000000000000000000020' +    // offset\n            '00000000000000000000000000000000000000000000000000000000000000c0' +    // 192 data bytes length\n            '00000001' +                                                            // spec id\n            '14a3208711873b6aab2005f6cca0f91658e287ef' +                            // forward target\n            '000000a4' +                                                            // 164 data bytes length\n            'bfe07da6' +                                                            // deposit\n            '0000000000000000000000008401eb5ff34cc943f096a32ef3d5113febe8d4eb' +    // token holder\n            '0000000000000000000000000000000000000000000000000de0b6b3a7640000' +    // 1e18\n            '0000000000000000000000000000000000000000000000000000000000000020' +    // 1 word\n            '0000000000000000000000000000000000000000000000000000000000000004' +    // 4 bytes\n            '4141414100000000000000000000000000000000000000000000000000000000'      // \"AAAA\" encoded\n    }]).substring(2)                                                                   // cut off '0x' prefix\n  // Divide by 2 for hex, convert number into hex string, and pad for uint256\n  const nestedScriptDataLength = `${(nestedScript.length / 2).toString(16)}`.padStart(64, 0)\n  const script = encodeCallScript([{\n    to: '0x62451b8705e6691b92afaa7766c0722c93a0e204',\n    data: '0x' +\n          'd948d468' +                                                            // forward signature\n          '0000000000000000000000000000000000000000000000000000000000000020' +    // offset\n          nestedScriptDataLength +                                                // previous script data bytes length\n          nestedScript                                                            // previous script data\n  }])\n  /* eslint-enable no-multi-spaces */\n  // act\n  const decodedScript = instance.decodeTransactionPath(script)\n  // assert\n  t.deepEqual(decodedScript, [\n    {\n      to: '0x62451b8705e6691b92afaa7766c0722c93a0e204',\n      data: '0x' +\n            'd948d468' +\n            '0000000000000000000000000000000000000000000000000000000000000020' +\n            nestedScriptDataLength +\n            nestedScript,\n      children: [\n        {\n          to: '0xbfd1f54dc1c3b50ddf2f1d5fe2f8a6b9c29bb598',\n          data: '0x' +\n                'd948d468' +\n                '0000000000000000000000000000000000000000000000000000000000000020' +\n                '0000000000000000000000000000000000000000000000000000000000000060' +\n                '00000001' +\n                '14a3208711873b6aab2005f6cca0f91658e287ef' +\n                '00000044' +\n                '40c10f19' +\n                '000000000000000000000000b4124cEB3451635DAcedd11767f004d8a28c6eE7' +\n                '0000000000000000000000000000000000000000000000003782dace9d900000',\n          children: [{\n            data: '0x' +\n                '40c10f19' +\n                '000000000000000000000000b4124cEB3451635DAcedd11767f004d8a28c6eE7' +\n                '0000000000000000000000000000000000000000000000003782dace9d900000',\n            to: '0x14a3208711873b6aab2005f6cca0f91658e287ef'\n          }]\n        }, {\n          to: '0x634faa183ba1f5f968cb96656d24dff66021f5a2',\n          data: '0x' +\n                'd948d468' +\n                '0000000000000000000000000000000000000000000000000000000000000020' +\n                '00000000000000000000000000000000000000000000000000000000000000c0' +\n                '00000001' +\n                '14a3208711873b6aab2005f6cca0f91658e287ef' +\n                '000000a4' +\n                'bfe07da6' +\n                '0000000000000000000000008401eb5ff34cc943f096a32ef3d5113febe8d4eb' +\n                '0000000000000000000000000000000000000000000000000de0b6b3a7640000' +\n                '0000000000000000000000000000000000000000000000000000000000000020' +\n                '0000000000000000000000000000000000000000000000000000000000000004' +\n                '4141414100000000000000000000000000000000000000000000000000000000',\n          children: [{\n            data: '0x' +\n                  'bfe07da6' +\n                  '0000000000000000000000008401eb5ff34cc943f096a32ef3d5113febe8d4eb' +\n                  '0000000000000000000000000000000000000000000000000de0b6b3a7640000' +\n                  '0000000000000000000000000000000000000000000000000000000000000020' +\n                  '0000000000000000000000000000000000000000000000000000000000000004' +\n                  '4141414100000000000000000000000000000000000000000000000000000000',\n            to: '0x14a3208711873b6aab2005f6cca0f91658e287ef'\n          }]\n        }\n      ]\n    }\n  ])\n})\n\ntest('should not decode non-call scripts', async (t) => {\n  const { createAragon } = t.context\n  const badSpecId = '0x00000002'\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  const script = `${badSpecId}${'123'.padStart(64, 0)}`\n  // assert\n  t.throws(\n    () => instance.decodeTransactionPath(script),\n    {\n      instanceOf: Error,\n      message: `Script could not be decoded: ${script}`\n    }\n  )\n})\n\ntest('should be only able to decode call scripts when there are multiple nested transactions', async (t) => {\n  const { createAragon } = t.context\n  const badSpecId = '0x00000002'\n\n  t.plan(1)\n  // arrange\n  const instance = createAragon()\n  /* eslint-disable no-multi-spaces */\n  const script = encodeCallScript([{\n    to: '0xbfd1f54dc1c3b50ddf2f1d5fe2f8a6b9c29bb598',\n    data: '0x' +\n          'd948d468' +                                                            // forward signature\n          '0000000000000000000000000000000000000000000000000000000000000020' +    // offset\n          '0000000000000000000000000000000000000000000000000000000000000060' +    // 96 data bytes length\n          '00000001' +                                                            // spec id\n          '14a3208711873b6aab2005f6cca0f91658e287ef' +                            // forward target\n          '00000044' +                                                            // 68 data bytes length\n          '40c10f19' +                                                            // mint\n          '000000000000000000000000b4124cEB3451635DAcedd11767f004d8a28c6eE7' +    // token holder\n          '0000000000000000000000000000000000000000000000003782dace9d900000'      // 4e18\n  }, {\n    to: '0x634faa183ba1f5f968cb96656d24dff66021f5a2',\n    data: '0x' +\n          'd948d468' +                                                            // forward signature\n          '0000000000000000000000000000000000000000000000000000000000000020' +    // offset\n          '00000000000000000000000000000000000000000000000000000000000000c0' +    // 192 data bytes length\n          badSpecId.substring(2) +                                                // **BAD SPEC ID**\n          '14a3208711873b6aab2005f6cca0f91658e287ef' +                            // forward target\n          '000000a4' +                                                            // 164 data bytes length\n          'bfe07da6' +                                                            // deposit\n          '0000000000000000000000008401eb5ff34cc943f096a32ef3d5113febe8d4eb' +    // token holder\n          '0000000000000000000000000000000000000000000000000de0b6b3a7640000' +    // 1e18\n          '0000000000000000000000000000000000000000000000000000000000000020' +    // 1 word\n          '0000000000000000000000000000000000000000000000000000000000000004' +    // 4 bytes\n          '4141414100000000000000000000000000000000000000000000000000000000'      // \"AAAA\" encoded\n  }])\n  /* eslint-enable no-multi-spaces */\n  // act\n  const decodedScript = instance.decodeTransactionPath(script)\n  // assert\n  t.deepEqual(decodedScript, [\n    {\n      to: '0xbfd1f54dc1c3b50ddf2f1d5fe2f8a6b9c29bb598',\n      data: '0x' +\n            'd948d468' +\n            '0000000000000000000000000000000000000000000000000000000000000020' +\n            '0000000000000000000000000000000000000000000000000000000000000060' +\n            '00000001' +\n            '14a3208711873b6aab2005f6cca0f91658e287ef' +\n            '00000044' +\n            '40c10f19' +\n            '000000000000000000000000b4124cEB3451635DAcedd11767f004d8a28c6eE7' +\n            '0000000000000000000000000000000000000000000000003782dace9d900000',\n      children: [{\n        data: '0x' +\n            '40c10f19' +\n            '000000000000000000000000b4124cEB3451635DAcedd11767f004d8a28c6eE7' +\n            '0000000000000000000000000000000000000000000000003782dace9d900000',\n        to: '0x14a3208711873b6aab2005f6cca0f91658e287ef'\n      }]\n    },\n    {\n      to: '0x634faa183ba1f5f968cb96656d24dff66021f5a2',\n      data: '0x' +\n            'd948d468' +\n            '0000000000000000000000000000000000000000000000000000000000000020' +\n            '00000000000000000000000000000000000000000000000000000000000000c0' +\n            badSpecId.substring(2) +\n            '14a3208711873b6aab2005f6cca0f91658e287ef' +\n            '000000a4' +\n            'bfe07da6' +\n            '0000000000000000000000008401eb5ff34cc943f096a32ef3d5113febe8d4eb' +\n            '0000000000000000000000000000000000000000000000000de0b6b3a7640000' +\n            '0000000000000000000000000000000000000000000000000000000000000020' +\n            '0000000000000000000000000000000000000000000000000000000000000004' +\n            '4141414100000000000000000000000000000000000000000000000000000000'\n      // ignores the second target's children because it's not a call script forward\n    }\n  ])\n})\n"],"file":"index.test.js"}