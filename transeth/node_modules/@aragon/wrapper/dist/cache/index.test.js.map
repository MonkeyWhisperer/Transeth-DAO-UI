{"version":3,"sources":["../../src/cache/index.test.js"],"names":["test","beforeEach","t","configurationStub","getConfiguration","sinon","stub","Cache","default","context","afterEach","always","restore","plan","instance","init","is","db","driver","memoryStorageDriver","_driver","changes","subscribe","change","deepEqual","key","value","set","get","drivers","localforage","INDEXEDDB","LOCALSTORAGE","withArgs","configurationKeys","FORCE_LOCAL_STORAGE","returns","setItem","getItem","getCall","args","title","allBefore","getAll","allAfter","Object","keys","length","one","two","three","four","item","removeItem","remove","clear","observable","observe","Promise","resolve","setTimeout","emissionNumber","next"],"mappings":"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","sourcesContent":["import test from 'ava'\nimport proxyquire from 'proxyquire'\nimport sinon from 'sinon'\n\nimport localforage from 'localforage'\nimport memoryStorageDriver from 'localforage-memoryStorageDriver'\nimport * as configurationKeys from '../configuration/keys'\n\ntest.beforeEach(t => {\n  const configurationStub = {\n    getConfiguration: sinon.stub()\n  }\n  const Cache = proxyquire('./index', {\n    '../configuration': configurationStub\n  }).default\n\n  t.context = {\n    Cache,\n    configurationStub\n  }\n})\n\ntest.afterEach.always(() => {\n  sinon.restore()\n})\n\ntest('should set the cache driver to in-memory on non-browser environments', async (t) => {\n  const { Cache } = t.context\n\n  t.plan(3)\n  // arrange\n  const instance = new Cache('counterapp')\n  await instance.init()\n  // assert\n  t.is(instance.db.driver(), memoryStorageDriver._driver)\n  instance.changes.subscribe(change => {\n    t.deepEqual(change, { key: 'counter', value: 5 })\n  })\n  // act\n  await instance.set('counter', 5)\n  // assert\n  t.is(await instance.get('counter'), 5)\n})\n\ntest('should prefer indexeddb driver by default', async (t) => {\n  const { Cache } = t.context\n\n  // arrange\n  const instance = new Cache('counterapp')\n  // assert\n  t.deepEqual(\n    instance.drivers,\n    [localforage.INDEXEDDB, localforage.LOCALSTORAGE, memoryStorageDriver]\n  )\n})\n\ntest('should downgrade to localstorage driver when requested', async (t) => {\n  const { Cache, configurationStub } = t.context\n\n  // arrange\n  configurationStub.getConfiguration.withArgs(configurationKeys.FORCE_LOCAL_STORAGE).returns(true)\n  // act\n  const instance = new Cache('counterapp')\n  // assert\n  t.deepEqual(\n    instance.drivers,\n    [localforage.LOCALSTORAGE, memoryStorageDriver]\n  )\n})\n\ntest('should set to the cache and emit the change', async (t) => {\n  const { Cache } = t.context\n\n  t.plan(3)\n  // arrange\n  const instance = new Cache('counterapp')\n  await instance.init()\n  instance.db.setItem = sinon.stub()\n  instance.db.getItem = sinon.stub()\n  // assert\n  instance.changes.subscribe(change => {\n    t.deepEqual(change, { key: 'counter', value: 5 })\n    t.is(instance.db.setItem.getCall(0).args[0], 'counter')\n    t.is(instance.db.setItem.getCall(0).args[1], 5)\n  })\n  // act\n  await instance.set('counter', 5)\n})\n\ntest('should set to the cache and return all', async t => {\n  const { Cache } = t.context\n\n  t.plan(3)\n  // arrange\n  const instance = new Cache(t.title)\n  await instance.init()\n\n  const allBefore = await instance.getAll()\n  t.deepEqual(allBefore, {}, 'empty object when cache is empty')\n\n  await instance.set('one', 1)\n  await instance.set('two', 2)\n  await instance.set('three', 3)\n  await instance.set('four', 4)\n\n  const allAfter = await instance.getAll()\n  t.is(Object.keys(allAfter).length, 4)\n  t.deepEqual(allAfter, {\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4\n  })\n})\n\ntest('should return null when getting a non existant item', async t => {\n  const { Cache } = t.context\n\n  t.plan(1)\n  const instance = new Cache('counterapp')\n  await instance.init()\n\n  const item = await instance.get('nonexistant')\n  t.is(item, null)\n})\n\ntest('should remove from the cache and emit the change', async (t) => {\n  const { Cache } = t.context\n\n  t.plan(2)\n  // arrange\n  const instance = new Cache('counterapp')\n  await instance.init()\n  instance.db.removeItem = sinon.stub()\n  instance.db.getItem = sinon.stub()\n  // assert\n  instance.changes.subscribe(change => {\n    t.deepEqual(change, { key: 'counter', value: null })\n    t.is(instance.db.removeItem.getCall(0).args[0], 'counter')\n  })\n  // act\n  await instance.remove('counter')\n})\n\ntest('should clear from the cache and emit the change', async (t) => {\n  const { Cache } = t.context\n\n  t.plan(2)\n  // arrange\n  const instance = new Cache('counterapp')\n  await instance.init()\n  instance.db.clear = sinon.stub()\n  instance.db.setItem = sinon.stub()\n  instance.db.getItem = sinon.stub()\n\n  const observable = instance.observe('counter', 1)\n\n  // Make sure the get request is finished before we try to clear\n  await new Promise(resolve => setTimeout(resolve, 0))\n\n  // assert\n  let emissionNumber = 0\n  observable.subscribe(value => {\n    emissionNumber++\n    // first value should be 1 (the default) because getItem returns falsy\n    if (emissionNumber === 1) t.is(value, 1)\n    // second value should be the cache clear\n    if (emissionNumber === 2) t.is(value, null)\n  })\n\n  // act\n  await instance.clear()\n})\n\ntest('should observe the key\\'s value for changes in the correct order if getItem is fast', async (t) => {\n  const { Cache } = t.context\n\n  t.plan(4)\n  // arrange\n  const instance = new Cache()\n  await instance.init()\n  instance.db.getItem = sinon.stub().returns(\n    new Promise(resolve => setTimeout(resolve, 300))\n  )\n  // act\n  const observable = instance.observe('counter', 1)\n\n  // assert\n  let emissionNumber = 0\n  observable.subscribe(value => {\n    emissionNumber++\n    // first value should be 1 (the default) because getItem returns falsy\n    if (emissionNumber === 1) t.is(value, 1)\n    if (emissionNumber === 2) t.is(value, 10)\n    if (emissionNumber === 3) t.is(value, 11)\n    if (emissionNumber === 4) t.is(value, 12)\n  })\n\n  // these values will emit after get finishes\n  setTimeout(() => {\n    instance.changes.next({ key: 'counter', value: 10 })\n    instance.changes.next({ key: 'counter', value: 11 })\n    instance.changes.next({ key: 'somekey', value: 'hey' }) // will be ignored\n    instance.changes.next({ key: 'counter', value: 12 })\n  }, 500)\n\n  // hack so the test doesn't finish prematurely\n  await new Promise(resolve => setTimeout(resolve, 700))\n})\n\ntest('should observe the key\\'s value for changes in the correct order if getItem is slow', async (t) => {\n  const { Cache } = t.context\n\n  t.plan(5)\n  // arrange\n  const instance = new Cache()\n  await instance.init()\n  instance.db.getItem = sinon.stub().returns(\n    new Promise(resolve => setTimeout(resolve, 300))\n  )\n  // act\n  const observable = instance.observe('counter', 1)\n  // assert\n  let emissionNumber = 0\n  observable.subscribe(value => {\n    emissionNumber++\n    // first value should be 4 because new sets happen immediately\n    if (emissionNumber === 1) t.is(value, 4)\n    if (emissionNumber === 2) t.is(value, 5)\n    if (emissionNumber === 3) t.is(value, 10)\n    if (emissionNumber === 4) t.is(value, 11)\n    if (emissionNumber === 5) t.is(value, 12)\n  })\n\n  // these values will emit before `get` finishes\n  instance.changes.next({ key: 'counter', value: 4 })\n  instance.changes.next({ key: 'counter', value: 5 })\n\n  // these values will emit after get finishes\n  setTimeout(() => {\n    instance.changes.next({ key: 'counter', value: 10 })\n    instance.changes.next({ key: 'counter', value: 11 })\n    instance.changes.next({ key: 'somekey', value: 'hey' }) // will be ignored\n    instance.changes.next({ key: 'counter', value: 12 })\n  }, 500)\n\n  // hack so the test doesn't finish prematurely\n  await new Promise(resolve => setTimeout(resolve, 700))\n})\n"],"file":"index.test.js"}