"use strict";var _kernel=require("../core/aragonOS/kernel");Object.defineProperty(exports,"__esModule",{value:!0// force cache invalidation
}),exports.doIntentPathsMatch=doIntentPathsMatch,exports.filterAndDecodeAppUpgradeIntents=filterAndDecodeAppUpgradeIntents;function doIntentPathsMatch(intentPaths){const individualPaths=intentPaths// Map each path to just be an array of destination addresses
.map(path=>path.map(({to})=>to))// Ignore the final intent target, as the path is everything "before" that target
.map(path=>path.slice(0,-1))// Take each array of destination addresses and create a single string
.map(path=>path.join("."));// Check if they all match by seeing if a unique set of the individual path
// strings is a single path
// Also make sure that there was indeed an actual path found
return 1===new Set(individualPaths).size&&!!individualPaths[0]}async function filterAndDecodeAppUpgradeIntents(intents,wrapper){const kernelApp=await wrapper.getApp(wrapper.kernelProxy.address);return intents// Filter for setApp() calls to the kernel
.filter(intent=>(0,_kernel.isKernelSetAppIntent)(kernelApp,intent))// Try to decode setApp() params
.map(intent=>{try{return(0,_kernel.decodeKernelSetAppParameters)(intent.data)}catch(_){}return{}})// Filter for changes to APP_BASES_NAMESPACE
.filter(({namespace})=>(0,_kernel.isKernelAppCodeNamespace)(namespace))}
//# sourceMappingURL=intents.js.map