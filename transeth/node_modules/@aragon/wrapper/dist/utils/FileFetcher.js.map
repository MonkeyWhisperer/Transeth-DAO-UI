{"version":3,"file":"FileFetcher.js","names":["axios","require","sanitizePath","path","replace","sanitizeUrl","url","startsWith","endsWith","FileFetcher","constructor","ipfsGateway","providers","Map","set","gateway","getFullPath","provider","location","supportsProvider","Error","baseLocation","get","fetch","config","response","responseType","transformResponse","data","has"],"sources":["../../src/utils/FileFetcher.js"],"sourcesContent":["const axios = require('axios')\n\nfunction sanitizePath (path) {\n  // Disallow a path being declared for the root or navigating to sibling paths\n  return path.replace(/^[./]+/, '')\n}\n\nfunction sanitizeUrl (url) {\n  // Sanitize url to make sure it has a protocol and ends with a /\n  if (!url.startsWith('http://') && !url.startsWith('https://')) {\n    url = `http://${url}`\n  }\n  if (!url.endsWith('/')) {\n    url = `${url}/`\n  }\n\n  return url\n}\n\nexport default class FileFetcher {\n  constructor ({ ipfsGateway = '' } = {}) {\n    this.providers = new Map([['http']])\n\n    if (ipfsGateway) {\n      this.providers.set('ipfs', { gateway: sanitizeUrl(ipfsGateway) })\n    }\n  }\n\n  getFullPath (provider, location, path) {\n    if (!this.supportsProvider(provider)) {\n      throw new Error(`Provider not supported: ${provider}`)\n    }\n\n    // When IPFS is the provider, the declared location is a CID\n    const baseLocation = provider === 'ipfs'\n      ? `${this.providers.get('ipfs').gateway}${location}`\n      : location\n\n    return `${sanitizeUrl(baseLocation)}${sanitizePath(path)}`\n  }\n\n  async fetch (provider, location, path, config) {\n    const response = await axios(this.getFullPath(provider, location, path), {\n      ...config,\n      responseType: 'text',\n\n      // This is needed to disable the default behavior of axios, which\n      // always tries to use JSON.parse() even if `responseType` is \"text\".\n      //\n      // See:\n      //   https://github.com/axios/axios/issues/907#issuecomment-322054564\n      //\n      // Although the comment states that 'undefined' should work, setting 'undefined' on\n      // axios@0.19.0 does not override the default, so we have to use null\n      transformResponse: null\n    })\n    return response.data\n  }\n\n  supportsProvider (provider) {\n    return this.providers.has(provider)\n  }\n}\n"],"mappings":"kPAqeuB;uyBArevB,KAAMA,MAAK,CAAGC,OAAO,CAAC,OAAD,CAArB,CAEA,QAASC,aAAT,CAAuBC,IAAvB,CAA6B,CAC3B;AACA,MAAOA,KAAI,CAACC,OAAL,CAAa,QAAb,CAAuB,EAAvB,CACR,CAED,QAASC,YAAT,CAAsBC,GAAtB,CAA2B,CASzB,MAPKA,IAAG,CAACC,UAAJ,CAAe,SAAf,CAAD,EAA+BD,GAAG,CAACC,UAAJ,CAAe,UAAf,CAOnC,GANED,GAAG,CAAI,UAASA,GAAI,EAMtB,EAJKA,GAAG,CAACE,QAAJ,CAAa,GAAb,CAIL,GAHEF,GAAG,CAAI,GAAEA,GAAI,GAGf,EAAOA,GACR,CAEc,KAAMG,YAAY,CAC/BC,WAAW,EAA6B,IAA3B,CAAEC,WAAW,CAAG,EAAhB,CAA2B,wDAAJ,EAAI,CACtC,KAAKC,SAAL,CAAiB,GAAIC,IAAJ,CAAQ,CAAC,CAAC,MAAD,CAAD,CAAR,CADqB,CAGlCF,WAHkC,EAIpC,KAAKC,SAAL,CAAeE,GAAf,CAAmB,MAAnB,CAA2B,CAAEC,OAAO,CAAEV,WAAW,CAACM,WAAD,CAAtB,CAA3B,CAEH,CAEDK,WAAW,CAAEC,QAAF,CAAYC,QAAZ,CAAsBf,IAAtB,CAA4B,CACrC,GAAI,CAAC,KAAKgB,gBAAL,CAAsBF,QAAtB,CAAL,CACE,KAAM,IAAIG,MAAJ,CAAW,2BAA0BH,QAAS,EAA9C,CAAN,CAGF;AACA,KAAMI,aAAY,CAAgB,MAAb,GAAAJ,QAAQ,CACxB,GAAE,KAAKL,SAAL,CAAeU,GAAf,CAAmB,MAAnB,EAA2BP,OAAQ,GAAEG,QAAS,EADxB,CAEzBA,QAFJ,CAIA,MAAQ,GAAEb,WAAW,CAACgB,YAAD,CAAe,GAAEnB,YAAY,CAACC,IAAD,CAAO,EAC1D,CAEU,KAALoB,MAAK,CAAEN,QAAF,CAAYC,QAAZ,CAAsBf,IAAtB,CAA4BqB,MAA5B,CAAoC,CAC7C,KAAMC,SAAQ,CAAG,KAAMzB,MAAK,CAAC,KAAKgB,WAAL,CAAiBC,QAAjB,CAA2BC,QAA3B,CAAqCf,IAArC,CAAD,gCACvBqB,MADuB,MAE1BE,YAAY,CAAE,MAFY,CAI1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,iBAAiB,CAAE,IAZO,GAA5B,CAcA,MAAOF,SAAQ,CAACG,IACjB,CAEDT,gBAAgB,CAAEF,QAAF,CAAY,CAC1B,MAAO,MAAKL,SAAL,CAAeiB,GAAf,CAAmBZ,QAAnB,CACR,CA1C8B,C"}