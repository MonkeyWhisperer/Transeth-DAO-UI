{"version":3,"sources":["../../src/utils/index.test.js"],"names":["test","afterEach","always","sinon","restore","t","bobPermissions","permissions","utils","makeAddressMapProxy","is","dianePermissions","anniePermissions","rainiPermissions"],"mappings":"+TAIAA,aAAKC,SAAL,CAAeC,MAAf,CAAsB,IAAM,CAC1BC,eAAMC,OAAN,EACD,CAFD,C,CAIA,iBAAK,yDAAL,CAAgE,KAAOC,CAAAA,CAAP,EAAa,CAC3E;AAD2E,KAGrEC,CAAAA,cAAc,CAAG,CAAC,MAAD,CAAS,OAAT,CAHoD,CAKrEC,WAAW,CAAGC,KAAK,CAACC,mBAAN,CAA0B,EAA1B,CALuD,CAO3E;AAIA;AACA;AANAF,WAAW,8CAAX,CAA0BD,cANiD,CAQ3ED,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,CAAgED,cAAhE,CAR2E,CAS3ED,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,CAAgED,cAAhE,CAT2E,CAU3ED,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,CAAgED,cAAhE,CAV2E,CAa3ED,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,QAb2E,CAc3EF,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,QAd2E,CAe3EF,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,QACD,CAhBD,C,CAkBA,iBAAK,mFAAL,CAA0F,KAAOF,CAAAA,CAAP,EAAa,CACrG;AADqG,KAK/FM,CAAAA,gBAAgB,CAAG,CAAC,MAAD,CAAS,OAAT,CAL4E,CAM/FC,gBAAgB,CAAG,CAAC,MAAD,CAAS,MAAT,CAN4E,CAO/FC,gBAAgB,CAAG,CAAC,OAAD,CAAU,QAAV,CAP4E,CAS/FN,WAAW,CAAGC,KAAK,CAACC,mBAAN,CAA0B,CAC5C,6CAAgBE,gBAD4B,CAE5C,CARmB,4CAQnB,EAAgBC,gBAF4B,CAG5C,CARmB,4CAQnB,EAAgBC,gBAH4B,CAA1B,CATiF,CAerG;AACAR,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,CAAgEI,gBAAhE,CAhBqG,CAiBrGN,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,CAAgEI,gBAAhE,CAjBqG,CAkBrGN,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,CAAgEI,gBAAhE,CAlBqG,CAoBrGN,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,CAAgEK,gBAAhE,CApBqG,CAqBrGP,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,CAAgEK,gBAAhE,CArBqG,CAuBrGP,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,CAAgEM,gBAAhE,CAvBqG,CAwBrGR,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,CAAgEM,gBAAhE,CAxBqG,CAyBrGR,CAAC,CAACK,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,CAAgEM,gBAAhE,CACD,CA1BD,C","sourcesContent":["import test from 'ava'\nimport sinon from 'sinon'\nimport * as utils from './index'\n\ntest.afterEach.always(() => {\n  sinon.restore()\n})\n\ntest('should enhance an object to lookup eth addresses easier', async (t) => {\n  // arrange\n  const bobAddress = '0x0000000000000000000000000000000000000aBc'\n  const bobPermissions = ['read', 'write']\n  // act\n  const permissions = utils.makeAddressMapProxy({})\n  permissions[bobAddress] = bobPermissions\n  // assert\n  t.is(permissions['0x0000000000000000000000000000000000000ABC'], bobPermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000abc'], bobPermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000aBc'], bobPermissions)\n  // addresses with invalid checksums\n  // (the checksum is checked if the address has both upper and lowercase letters)\n  t.is(permissions['0x0000000000000000000000000000000000000aBC'], undefined)\n  t.is(permissions['0x0000000000000000000000000000000000000abC'], undefined)\n  t.is(permissions['0x0000000000000000000000000000000000000ABc'], undefined)\n})\n\ntest('should allow the proxy to be initialized with an object containing any cased keys', async (t) => {\n  // arrange\n  const dianeAddress = '0x0000000000000000000000000000000000000ABC'\n  const annieAddress = '0x0000000000000000000000000000000000000cde'\n  const rainiAddress = '0x0000000000000000000000000000000000000eED'\n  const dianePermissions = ['read', 'write']\n  const anniePermissions = ['read', 'sing']\n  const rainiPermissions = ['dance', 'modify']\n  // act\n  const permissions = utils.makeAddressMapProxy({\n    [dianeAddress]: dianePermissions,\n    [annieAddress]: anniePermissions,\n    [rainiAddress]: rainiPermissions\n  })\n\n  // assert\n  t.is(permissions['0x0000000000000000000000000000000000000ABC'], dianePermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000abc'], dianePermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000aBc'], dianePermissions)\n\n  t.is(permissions['0x0000000000000000000000000000000000000CDE'], anniePermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000cde'], anniePermissions)\n\n  t.is(permissions['0x0000000000000000000000000000000000000EED'], rainiPermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000eed'], rainiPermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000EeD'], rainiPermissions)\n})\n"],"file":"index.test.js"}