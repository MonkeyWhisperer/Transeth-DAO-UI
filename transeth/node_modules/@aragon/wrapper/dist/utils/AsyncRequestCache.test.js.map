{"version":3,"file":"AsyncRequestCache.test.js","names":["wait","time","Promise","resolve","setTimeout","test","t","requestFn","sinon","spy","key","cache","AsyncRequestCache","request","result","requestAgain","resultAgain","is","true","has","calledOnceWith","secondKey","requestFirst","requestSecond","resultFirst","resultSecond","resultFirstAgain","resultSecondAgain","not","callCount","requestInvalidate","Error","requestFail","throwsAsync","message","false","requestFailAgain","resultFail","resultFailAgain","requestSuccess","requestSuccessAgain","resultSuccess","resultSuccessAgain"],"sources":["../../src/utils/AsyncRequestCache.test.js"],"sourcesContent":["import test from 'ava'\nimport sinon from 'sinon'\nimport AsyncRequestCache from './AsyncRequestCache'\n\nconst wait = time =>\n  new Promise(resolve => {\n    setTimeout(resolve, time)\n  })\n\ntest('AsyncRequestCache should cache requests', async (t) => {\n  // arrange\n  const requestKey = 'key'\n  const requestFn = sinon.spy(async key => {\n    await wait(100)\n    return key\n  })\n  const cache = new AsyncRequestCache(requestFn)\n\n  // act\n  const request = cache.request(requestKey)\n  const result = await request\n\n  const requestAgain = cache.request(requestKey)\n  const resultAgain = await requestAgain\n\n  // assert\n  t.is(request, requestAgain)\n  t.is(result, resultAgain)\n  t.true(cache.has(requestKey))\n  t.true(requestFn.calledOnceWith(requestKey))\n})\n\ntest('AsyncRequestCache can cache more than one key', async (t) => {\n  // arrange\n  const firstKey = 'first'\n  const secondKey = 'second'\n  const requestFn = sinon.spy(async key => {\n    await wait(100)\n    return key\n  })\n  const cache = new AsyncRequestCache(requestFn)\n\n  // act\n  const requestFirst = cache.request(firstKey)\n  const requestSecond = cache.request(secondKey)\n  const resultFirst = await requestFirst\n  const resultSecond = await requestSecond\n  // Once first two requests have settled, re-request keys\n  const resultFirstAgain = await cache.request(firstKey)\n  const resultSecondAgain = await cache.request(secondKey)\n\n  // assert\n  t.true(cache.has(firstKey))\n  t.true(cache.has(secondKey))\n  t.is(resultFirst, resultFirstAgain)\n  t.is(resultSecond, resultSecondAgain)\n  t.not(resultFirst, resultSecond)\n  t.is(requestFn.callCount, 2)\n})\n\ntest('AsyncRequestCache should be able to force invalidate requests', async (t) => {\n  // arrange\n  const requestKey = 'key'\n  const requestFn = sinon.spy(async key => {\n    await wait(100)\n    return key\n  })\n  const cache = new AsyncRequestCache(requestFn)\n\n  // act\n  const request = cache.request(requestKey)\n  await request\n\n  const requestInvalidate = cache.request(requestKey, true)\n  await requestInvalidate\n\n  // assert\n  t.not(request, requestInvalidate)\n  t.true(cache.has(requestKey))\n  t.is(requestFn.callCount, 2)\n})\n\ntest('AsyncRequestCache does not cache result if unsuccessful', async (t) => {\n  // arrange\n  const requestKey = 'key'\n  const requestFn = sinon.spy(async key => {\n    await wait(100)\n    throw new Error('error')\n  })\n  const cache = new AsyncRequestCache(requestFn)\n\n  // act\n  const requestFail = await t.throwsAsync(cache.request(requestKey))\n\n  // assert\n  t.is(requestFail.message, 'error')\n  t.false(cache.has(requestKey))\n})\n\ntest('AsyncRequestCache deduplicates in-flight requests', async (t) => {\n  // arrange\n  const requestKey = 'key'\n  const requestFn = sinon.spy(async key => {\n    await wait(100)\n    if (requestFn.callCount === 1) {\n      throw new Error('error')\n    }\n    return key\n  })\n  const cache = new AsyncRequestCache(requestFn)\n\n  // act\n  const requestFail = cache.request(requestKey)\n  const requestFailAgain = cache.request(requestKey)\n  const resultFail = await t.throwsAsync(requestFail)\n  const resultFailAgain = await t.throwsAsync(requestFailAgain)\n\n  const requestSuccess = cache.request(requestKey)\n  const requestSuccessAgain = cache.request(requestKey)\n  const resultSuccess = await requestSuccess\n  const resultSuccessAgain = await requestSuccessAgain\n\n  // assert\n  t.is(requestFail, requestFailAgain)\n  t.is(resultFail, resultFailAgain)\n  t.not(requestFail, requestSuccess)\n  t.is(requestSuccess, requestSuccessAgain)\n  t.is(resultSuccess, resultSuccessAgain)\n  t.true(cache.has(requestKey))\n  t.is(requestFn.callCount, 2)\n})\n\ntest('AsyncRequestCache should work with non-async request functions', async (t) => {\n  // arrange\n  const requestKey = 'key'\n  const requestFn = sinon.spy(key => key)\n  const cache = new AsyncRequestCache(requestFn)\n\n  // act\n  const request = cache.request(requestKey)\n  const result = await request\n\n  const requestAgain = cache.request(requestKey)\n  const resultAgain = await requestAgain\n\n  // assert\n  t.is(request, requestAgain)\n  t.is(result, resultAgain)\n  t.true(cache.has(requestKey))\n  t.true(requestFn.calledOnceWith(requestKey))\n})\n"],"mappings":"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"}