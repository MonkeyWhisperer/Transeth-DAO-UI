{"version":3,"sources":["../../src/utils/transactions.js"],"names":["DEFAULT_GAS_FUZZ_FACTOR","PREVIOUS_BLOCK_GAS_LIMIT_FACTOR","applyPretransaction","directTransaction","web3","token","from","to","address","tokenAddress","value","tokenValue","spender","approveSpender","erc20ABI","tokenContract","eth","Contract","balance","methods","balanceOf","call","tokenValueBN","lt","Error","allowance","allowanceBN","gt","console","warn","tokenApproveTransaction","data","approve","encodeABI","pretransaction","applyForwardingFeePretransaction","forwardingTransaction","forwarder","forwardFee","feeDetails","amount","feeResult","err","toString","createDirectTransaction","sender","destination","methodAbiFragment","params","paramsIncludesTransactionOptions","type","length","inputs","transactionOptions","options","pop","abi","encodeFunctionCall","createDirectTransactionForApp","app","methodSignature","proxyAddress","createForwarderTransactionBuilder","forwardMethod","forwarderAddress","script","getRecommendedGasLimit","estimatedGasLimit","gasFuzzFactor","latestBlock","getBlock","latestBlockGasLimit","gasLimit","upperGasLimit","Math","round","bufferedGasLimit"],"mappings":"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","sourcesContent":["import { toBN } from 'web3-utils'\nimport { getAbi } from '../interfaces'\nimport { findMethodAbiFragment } from './abi'\n\nconst DEFAULT_GAS_FUZZ_FACTOR = 1.5\nconst PREVIOUS_BLOCK_GAS_LIMIT_FACTOR = 0.95\n\nexport async function applyPretransaction (directTransaction, web3) {\n  // Token allowance pretransaction\n  if (directTransaction.token) {\n    const {\n      from,\n      to,\n      token: { address: tokenAddress, value: tokenValue, spender }\n    } = directTransaction\n\n    // Approve the transaction destination unless an spender is passed to approve a different contract\n    const approveSpender = spender || to\n\n    const erc20ABI = getAbi('standard/ERC20')\n    const tokenContract = new web3.eth.Contract(erc20ABI, tokenAddress)\n    const balance = await tokenContract.methods.balanceOf(from).call()\n\n    const tokenValueBN = toBN(tokenValue)\n\n    if (toBN(balance).lt(tokenValueBN)) {\n      throw new Error(`Balance too low. ${from} balance of ${tokenAddress} token is ${balance} (attempting to send ${tokenValue})`)\n    }\n\n    const allowance = await tokenContract.methods.allowance(from, approveSpender).call()\n    const allowanceBN = toBN(allowance)\n\n    // If allowance is already greater than or equal to amount, there is no need to do an approve transaction\n    if (allowanceBN.lt(tokenValueBN)) {\n      if (allowanceBN.gt(toBN(0))) {\n        // TODO: Actually handle existing approvals (some tokens fail when the current allowance is not 0)\n        console.warn(`${from} already approved ${approveSpender}. In some tokens, approval will fail unless the allowance is reset to 0 before re-approving again.`)\n      }\n\n      const tokenApproveTransaction = {\n        // TODO: should we include transaction options?\n        from,\n        to: tokenAddress,\n        data: tokenContract.methods.approve(approveSpender, tokenValue).encodeABI()\n      }\n\n      directTransaction.pretransaction = tokenApproveTransaction\n      delete directTransaction.token\n    }\n  }\n\n  return directTransaction\n}\n\nexport async function applyForwardingFeePretransaction (forwardingTransaction, web3) {\n  const { to: forwarder, from } = forwardingTransaction\n\n  // Check if a token approval pretransaction is needed due to the forwarder requiring a fee\n  const forwardFee = new web3.eth.Contract(\n    getAbi('aragon/ForwarderFee'),\n    forwarder\n  ).methods['forwardFee']\n\n  const feeDetails = { amount: toBN(0) }\n  try {\n    // Passing the EOA as `msg.sender` to the forwardFee call is useful for use cases where the fee differs relative to the account\n    const feeResult = await forwardFee().call({ from }) // forwardFee() returns (address, uint256)\n    feeDetails.tokenAddress = feeResult[0]\n    feeDetails.amount = toBN(feeResult[1])\n  } catch (err) {\n    // Not all forwarders implement the `forwardFee()` interface\n  }\n\n  if (feeDetails.tokenAddress && feeDetails.amount.gt(toBN(0))) {\n    // Needs a token approval pretransaction\n    forwardingTransaction.token = {\n      address: feeDetails.tokenAddress,\n      spender: forwarder, // since it's a forwarding transaction, always show the real spender\n      value: feeDetails.amount.toString()\n    }\n  }\n\n  return applyPretransaction(forwardingTransaction, web3)\n}\n\nexport async function createDirectTransaction (sender, destination, methodAbiFragment, params, web3) {\n  let paramsIncludesTransactionOptions = false\n  if (methodAbiFragment.type === 'fallback') {\n    if (params.length > 1) {\n      throw new Error('Could not create transaction to fallback function due to too many parameters', params)\n    }\n\n    paramsIncludesTransactionOptions = params.length === 1\n  } else if (\n    methodAbiFragment.inputs.length + 1 === params.length &&\n    typeof params[params.length - 1] === 'object'\n  ) {\n    paramsIncludesTransactionOptions = true\n  }\n\n  let transactionOptions = {}\n  if (paramsIncludesTransactionOptions) {\n    const options = params.pop()\n    transactionOptions = { ...transactionOptions, ...options }\n  }\n\n  // The direct transaction we eventually want to perform\n  const directTransaction = {\n    ...transactionOptions, // Options are overwriten by the values below\n    from: sender,\n    to: destination,\n    data: web3.eth.abi.encodeFunctionCall(methodAbiFragment, params)\n  }\n\n  // Add any pretransactions specified\n  return applyPretransaction(directTransaction, web3)\n}\n\nexport async function createDirectTransactionForApp (sender, app, methodSignature, params, web3) {\n  if (!app) {\n    throw new Error('Could not create transaction due to missing app artifact')\n  }\n\n  const { proxyAddress: destination } = app\n\n  if (!app.abi) {\n    throw new Error(`No ABI specified in artifact for ${destination}`)\n  }\n\n  const methodAbiFragment = findMethodAbiFragment(app.abi, methodSignature)\n  if (!methodAbiFragment) {\n    throw new Error(`${methodSignature} not found on ABI for ${destination}`)\n  }\n\n  return createDirectTransaction(sender, destination, methodAbiFragment, params, web3)\n}\n\nexport function createForwarderTransactionBuilder (sender, directTransaction, web3) {\n  const forwardMethod = new web3.eth.Contract(\n    getAbi('aragon/Forwarder')\n  ).methods['forward']\n\n  return (forwarderAddress, script) => (\n    {\n      ...directTransaction, // Options are overwriten by the values below\n      from: sender,\n      to: forwarderAddress,\n      data: forwardMethod(script).encodeABI()\n    }\n  )\n}\n\nexport async function getRecommendedGasLimit (web3, estimatedGasLimit, { gasFuzzFactor = DEFAULT_GAS_FUZZ_FACTOR } = {}) {\n  const latestBlock = await web3.eth.getBlock('latest')\n  const latestBlockGasLimit = latestBlock.gasLimit\n\n  const upperGasLimit = Math.round(latestBlockGasLimit * PREVIOUS_BLOCK_GAS_LIMIT_FACTOR)\n  const bufferedGasLimit = Math.round(estimatedGasLimit * gasFuzzFactor)\n\n  if (estimatedGasLimit > upperGasLimit) {\n    // TODO: Consider whether we should throw an error rather than returning with a high gas limit\n    return estimatedGasLimit\n  } else if (bufferedGasLimit < upperGasLimit) {\n    return bufferedGasLimit\n  } else {\n    return upperGasLimit\n  }\n}\n"],"file":"transactions.js"}