{"version":3,"sources":["../../../src/core/aragonOS/kernel.test.js"],"names":["test","afterEach","always","sinon","restore","SET_APP_TX_DATA","INITIALIZE_TX_DATA","t","plan","decodedData","kernel","decodeKernelSetAppParameters","is","namespace","appId","appAddress","throws","instanceOf","Error","result","getKernelNamespace","emptyResult","hash","name","appCodeNamespace","isKernelAppCodeNamespace","true","false","kernelApp","proxyAddress","functions","sig","roles","notice","setAppResult","isKernelSetAppIntent","to","data","initializeResult","otherAppResult"],"mappings":"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","sourcesContent":["import test from 'ava'\nimport sinon from 'sinon'\nimport { soliditySha3 } from 'web3-utils'\nimport * as kernel from './kernel'\n\ntest.afterEach.always(() => {\n  sinon.restore()\n})\n\n// Kernel.setApp(APP_BASES_NAMESPACE, namehash('voting.aragonpm.eth'), '0x7FB5C052A391953De579b0ed7dC87aD59a9A5473')\nconst SET_APP_TX_DATA = '0xae5b2540f1f3eb40f5bc1ad1344716ced8b8a0431d840b5783aea1fd01786bc26f35ac0f9fa3927f639745e587912d4b0fea7ef9013bf93fb907d29faeab57417ba6e1d40000000000000000000000007fb5c052a391953de579b0ed7dc87ad59a9a5473'\n// Kernel.initialize('0xd95677b5b3bc3c89c4c2c3ab702b0aa5d5cb28af', '0x0000000000000000000000000000000000000000')\nconst INITIALIZE_TX_DATA = '0x485cc955000000000000000000000000d95677b5b3bc3c89c4c2c3ab702b0aa5d5cb28af0000000000000000000000000000000000000000000000000000000000000000'\n\ntest('aragonOS/kernel: decodeKernelSetAppParameters', async (t) => {\n  t.plan(4)\n  // arrange\n  const setAppData = SET_APP_TX_DATA\n  const notSetAppData = INITIALIZE_TX_DATA\n  // act\n  const decodedData = kernel.decodeKernelSetAppParameters(setAppData)\n  // assert\n  t.is(decodedData.namespace, '0xf1f3eb40f5bc1ad1344716ced8b8a0431d840b5783aea1fd01786bc26f35ac0f')\n  t.is(decodedData.appId, '0x9fa3927f639745e587912d4b0fea7ef9013bf93fb907d29faeab57417ba6e1d4')\n  t.is(decodedData.appAddress, '0x7FB5C052A391953De579b0ed7dC87aD59a9A5473')\n\n  t.throws(\n    () => kernel.decodeKernelSetAppParameters(notSetAppData),\n    {\n      instanceOf: Error\n    }\n  )\n})\n\ntest('aragonOS/kernel: getKernelNamespace', async (t) => {\n  t.plan(3)\n  // arrange\n  // soliditySha3('core')\n  const coreNamespaceHash = '0xc681a85306374a5ab27f0bbc385296a54bcd314a1948b6cf61c4ea1bc44bb9f8'\n  // act\n  const result = kernel.getKernelNamespace(coreNamespaceHash)\n  const emptyResult = kernel.getKernelNamespace()\n  // assert\n  t.is(result.hash, coreNamespaceHash)\n  t.is(result.name, 'Core')\n  t.is(emptyResult, null)\n})\n\ntest('aragonOS/kernel: isKernelAppCodeNamespace', async (t) => {\n  t.plan(2)\n  // arrange\n  const appCodeNamespace = soliditySha3('base')\n  // act\n  const result = kernel.isKernelAppCodeNamespace(appCodeNamespace)\n  const emptyResult = kernel.isKernelAppCodeNamespace()\n  // assert\n  t.true(result)\n  t.false(emptyResult)\n})\n\ntest('aragonOS/kernel: isKernelSetAppIntent', async (t) => {\n  t.plan(3)\n\n  // arrange\n  const kernelApp = {\n    proxyAddress: '0x123',\n    functions: [\n      {\n        sig: 'initialize(address,address)',\n        roles: [],\n        notice: 'Initializes a kernel instance along with its ACL and sets `_permissionsCreator` as the entity that can create other permissions'\n      },\n      {\n        sig: 'setApp(bytes32,bytes32,address)',\n        roles: [\n          'APP_MANAGER_ROLE'\n        ],\n        notice: 'Set the resolving address of `_appId` in namespace `_namespace` to `_app`'\n      }\n    ]\n  }\n  const setAppIntent = {\n    to: '0x123',\n    data: SET_APP_TX_DATA\n  }\n  const initializeIntent = {\n    to: '0x123',\n    data: INITIALIZE_TX_DATA\n  }\n  const otherAppIntent = {\n    to: '0x456',\n    // vote(0, true)\n    data: '0xc9d27afe00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001'\n  }\n\n  // act\n  const setAppResult = kernel.isKernelSetAppIntent(kernelApp, setAppIntent)\n  const initializeResult = kernel.isKernelSetAppIntent(kernelApp, initializeIntent)\n  const otherAppResult = kernel.isKernelSetAppIntent(kernelApp, otherAppIntent)\n\n  // assert\n  t.true(setAppResult)\n  t.false(initializeResult)\n  t.false(otherAppResult)\n})\n"],"file":"kernel.test.js"}