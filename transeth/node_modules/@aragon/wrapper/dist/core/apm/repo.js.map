{"version":3,"file":"repo.js","names":["makeRepoProxy","address","web3","options","makeProxyFromABI","getAbi","getAllRepoVersions","repoProxy","versions","versionCount","call","versionId","push","getRepoVersionById","Promise","all","getRepoLatestVersion","contentURI","contractAddress","semanticVersion","hexToAscii","version","join","getRepoLatestVersionForContract","appContractAddress","toString","fetchRepoContentURI","fileFetcher","fetchTimeout","provider","location","split","Error","supportsProvider","files","timeout","Number","isFinite","filesFetch","fetch","map","JSON","parse","err","SyntaxError","console","warn","content","manifest","artifact"],"sources":["../../../src/core/apm/repo.js"],"sourcesContent":["import { hexToAscii } from 'web3-utils'\nimport { getAbi } from '../../interfaces'\nimport { makeProxyFromABI } from '../../utils'\n\nexport function makeRepoProxy (address, web3, options) {\n  return makeProxyFromABI(address, getAbi('apm/Repo'), web3, options)\n}\n\nexport async function getAllRepoVersions (repoProxy) {\n  const versions = []\n  const versionCount = await repoProxy.call('getVersionsCount')\n\n  // Versions index starts at 1\n  for (let versionId = 1; versionId <= versionCount; ++versionId) {\n    versions.push(await getRepoVersionById(repoProxy, versionId))\n  }\n\n  return Promise.all(versions)\n}\n\nexport async function getRepoLatestVersion (repoProxy) {\n  const { contentURI, contractAddress, semanticVersion } = await repoProxy.call('getLatest')\n  return {\n    contractAddress,\n    contentURI: hexToAscii(contentURI),\n    version: semanticVersion.join('.')\n  }\n}\n\nexport async function getRepoLatestVersionForContract (repoProxy, appContractAddress) {\n  const {\n    contentURI,\n    contractAddress,\n    semanticVersion\n  } = await repoProxy.call('getLatestForContractAddress', appContractAddress)\n\n  return {\n    contractAddress,\n    contentURI: hexToAscii(contentURI),\n    version: semanticVersion.join('.')\n  }\n}\n\nexport async function getRepoVersionById (repoProxy, versionId) {\n  const { contentURI, contractAddress, semanticVersion } = await repoProxy.call('getByVersionId', versionId)\n  return {\n    contractAddress,\n    contentURI: hexToAscii(contentURI),\n    version: semanticVersion.join('.'),\n    // Keeping this as a string makes comparisons a bit easier down the line\n    versionId: versionId.toString()\n  }\n}\n\nexport async function fetchRepoContentURI (fileFetcher, contentURI, { fetchTimeout } = {}) {\n  const [provider, location] = contentURI.split(/:(.+)/)\n\n  if (!provider || !location) {\n    throw new Error(`contentURI invalid: ${contentURI}`)\n  } else if (!fileFetcher.supportsProvider(provider)) {\n    throw new Error(`Provider not supported: ${provider}`)\n  }\n\n  let files\n  try {\n    const timeout = Number.isFinite(fetchTimeout) ? fetchTimeout : 0\n    const filesFetch = Promise.all([\n      fileFetcher.fetch(provider, location, 'manifest.json', { timeout }),\n      fileFetcher.fetch(provider, location, 'artifact.json', { timeout })\n    ])\n    files = (await filesFetch).map(JSON.parse)\n  } catch (err) {\n    if (err instanceof SyntaxError) {\n      // JSON parse error\n      console.warn(`Fetch failed: ${contentURI} was not JSON-parsable`, err)\n    }\n\n    // Fetch failed or timed out\n    return {\n      content: { provider, location }\n    }\n  }\n\n  const [manifest, artifact] = files\n  return {\n    ...manifest,\n    ...artifact,\n    content: { provider, location }\n  }\n}\n"],"mappings":"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"}