{"version":3,"sources":["../../src/ens/index.js"],"names":["debug","require","resolve","nameOrNode","opts","provider","isName","includes","sendAsync","send","ens","ENS","lookup","resolveAddressForNode","registryAddress","name"],"mappings":"gGAAA,2D,wGACA,KAAMA,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,YAAjB,CAAd,CAEA;;;;;;GAOO,QAASC,CAAAA,OAAT,CAAkBC,UAAlB,CAA8BC,IAAI,CAAG,CAAEC,QAAQ,CAAE,EAAZ,CAArC,CAAuD,CAC5D,KAAMC,CAAAA,MAAM,CAAGH,UAAU,CAACI,QAAX,CAAoB,GAApB,CAAf,CAEA;AACKH,IAAI,CAACC,QAAL,CAAcG,SAJyC,GAK1DJ,IAAI,CAACC,QAAL,CAAcG,SAAd,CAA0BJ,IAAI,CAACC,QAAL,CAAcI,IALkB,EAQ5D,KAAMC,CAAAA,GAAG,CAAG,GAAIC,kBAAJ,CAAQP,IAAR,CAAZ,CAR4D,MASxDE,CAAAA,MATwD,EAU1DN,KAAK,CAAE,uBAAsBG,UAAW,EAAnC,CAVqD,CAWnDO,GAAG,CAACE,MAAJ,CAAWT,UAAX,CAXmD,GAc5DH,KAAK,CAAE,uBAAsBG,UAAW,EAAnC,CAduD,CAerDO,GAAG,CAACG,qBAAJ,CAA0BV,UAA1B,CAfqD,CAgB7D,CAEc,kBAAUE,QAAV,CAAoBS,eAApB,CAAqC,CAClD,MAAO,CACLZ,OAAO,CAAGa,IAAD,EAAUb,OAAO,CAACa,IAAD,CAAO,CAAEV,QAAF,CAAYS,eAAZ,CAAP,CADrB,CAGR","sourcesContent":["import ENS from 'ethjs-ens'\nconst debug = require('debug')('aragon.ens')\n\n/**\n * Resolve an ens name or node\n *\n * @param {string} nameOrNode\n * @param {*} opts\n * @returns {Promise<string>}\n */\nexport function resolve (nameOrNode, opts = { provider: {} }) {\n  const isName = nameOrNode.includes('.')\n\n  // Stupid hack for ethjs-ens\n  if (!opts.provider.sendAsync) {\n    opts.provider.sendAsync = opts.provider.send\n  }\n\n  const ens = new ENS(opts)\n  if (isName) {\n    debug(`Looking up ENS name ${nameOrNode}`)\n    return ens.lookup(nameOrNode)\n  }\n\n  debug(`Looking up ENS node ${nameOrNode}`)\n  return ens.resolveAddressForNode(nameOrNode)\n}\n\nexport default function (provider, registryAddress) {\n  return {\n    resolve: (name) => resolve(name, { provider, registryAddress })\n  }\n}\n"],"file":"index.js"}