{"version":3,"sources":["../../../src/rpc/handlers/external.test.js"],"names":["test","beforeEach","t","configurationStub","getConfiguration","sinon","stub","utilsStub","events","eventsUtils","external","context","afterEach","always","restore","targetAddr","targetMethodAbiFragment","name","targetParams","mockPath","to","data","plan","wrapperStub","getExternalTransactionPath","returns","performTransactionPath","Promise","resolve","requestStub","params","result","intent","notThrowsAsync","true","calledOnceWith","eventEmitter","EventEmitter","eventsStub","web3Stub","eth","Contract","allEvents","fromBlock","web3","subscribe","value","deepEqual","event","amount","emit","initBlock","initializationBlock","contract","getPastEvents","withArgs","pastEvents","toBlock","configurationKeys","SUBSCRIPTION_EVENT_DELAY","startTime","Date","now","delayTime"],"mappings":"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","sourcesContent":["import test from 'ava'\nimport proxyquire from 'proxyquire'\nimport sinon from 'sinon'\nimport { EventEmitter } from 'events'\n\nimport * as configurationKeys from '../../configuration/keys'\nimport * as eventsUtils from '../../utils/events'\n\ntest.beforeEach(t => {\n  const configurationStub = {\n    getConfiguration: sinon.stub()\n  }\n  const utilsStub = {\n    events: eventsUtils\n  }\n  const external = proxyquire('./external', {\n    '../../configuration': configurationStub,\n    '../../utils': utilsStub\n  })\n\n  t.context = {\n    external,\n    configurationStub,\n    utilsStub\n  }\n})\n\ntest.afterEach.always(() => {\n  sinon.restore()\n})\n\ntest('should return the correct tx path from external tx intent', async t => {\n  const { external } = t.context\n  const targetAddr = '0x123'\n  const targetMethodAbiFragment = [{ name: 'foo' }]\n  const targetParams = [8]\n  const mockPath = [{ to: '0x123', data: '0x456' }]\n\n  t.plan(3)\n  // arrange\n  const wrapperStub = {\n    getExternalTransactionPath: sinon.stub().returns(mockPath),\n    performTransactionPath: sinon.stub().returns(Promise.resolve())\n  }\n  const requestStub = {\n    params: [targetAddr, targetMethodAbiFragment, ...targetParams]\n  }\n  // act\n  const result = external.intent(requestStub, null, wrapperStub)\n  // assert\n  await t.notThrowsAsync(result)\n  t.true(wrapperStub.getExternalTransactionPath.calledOnceWith(targetAddr, targetMethodAbiFragment, targetParams))\n  t.true(wrapperStub.performTransactionPath.calledOnceWith(mockPath, { external: true }))\n})\n\ntest('should return an observable from the contract events', async (t) => {\n  const { external } = t.context\n\n  t.plan(2)\n  // arrange\n  const eventEmitter = new EventEmitter()\n  const proxy = {}\n  const eventsStub = sinon.stub().returns(eventEmitter)\n  const contract = {\n    events: {\n      allEvents: eventsStub\n    }\n  }\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const requestStub = {\n    params: ['addr', 'ji', 'allEvents', { fromBlock: 8 }]\n  }\n  // act\n  const events = external.events(requestStub, proxy, { web3: web3Stub })\n  // assert\n  t.true(eventsStub.calledOnceWith({ fromBlock: 8 }))\n  events.subscribe(value => {\n    t.deepEqual(value, { event: 'pay_fee', amount: 5 })\n  })\n\n  eventEmitter.emit('data', { event: 'pay_fee', amount: 5 })\n})\n\ntest(\"should default fetching contract events from app's initialization block\", async (t) => {\n  const { external } = t.context\n  const initBlock = 10\n\n  t.plan(2)\n  // arrange\n  const eventEmitter = new EventEmitter()\n  const proxy = { initializationBlock: initBlock }\n  const eventsStub = sinon.stub().returns(eventEmitter)\n  const contract = {\n    events: {\n      allEvents: eventsStub\n    }\n  }\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const requestStub = {\n    params: ['addr', 'ji', 'allEvents', {}]\n  }\n  // act\n  const events = external.events(requestStub, proxy, { web3: web3Stub })\n  // assert\n  t.true(eventsStub.calledOnceWith({ fromBlock: initBlock }))\n  events.subscribe(value => {\n    t.deepEqual(value, { event: 'pay_fee', amount: 5 })\n  })\n\n  eventEmitter.emit('data', { event: 'pay_fee', amount: 5 })\n})\n\ntest('should handle events for aragonAPIv1', async (t) => {\n  const { external } = t.context\n  const fromBlock = 10\n\n  t.plan(2)\n  // arrange\n  const eventEmitter = new EventEmitter()\n  const proxy = {}\n  const eventsStub = sinon.stub().returns(eventEmitter)\n  const contract = {\n    events: {\n      allEvents: eventsStub\n    }\n  }\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  // aragonAPIv1 only passes the fromBlock\n  const requestStub = {\n    params: ['addr', 'ji', fromBlock]\n  }\n  // act\n  const events = external.events(requestStub, proxy, { web3: web3Stub })\n  // assert\n  t.true(eventsStub.calledOnceWith({ fromBlock }))\n  events.subscribe(value => {\n    t.deepEqual(value, { event: 'pay_fee', amount: 5 })\n  })\n\n  eventEmitter.emit('data', { event: 'pay_fee', amount: 5 })\n})\n\ntest('should handle events without fromBlock for aragonAPIv1', async (t) => {\n  const { external } = t.context\n  const initBlock = 10\n\n  t.plan(2)\n  // arrange\n  const eventEmitter = new EventEmitter()\n  const proxy = { initializationBlock: initBlock }\n  const eventsStub = sinon.stub().returns(eventEmitter)\n  const contract = {\n    events: {\n      allEvents: eventsStub\n    }\n  }\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  // aragonAPIv1 does not need to pass the fromBlock\n  const requestStub = {\n    params: ['addr', 'ji']\n  }\n  // act\n  const events = external.events(requestStub, proxy, { web3: web3Stub })\n  // assert\n  t.true(eventsStub.calledOnceWith({ fromBlock: initBlock }))\n  events.subscribe(value => {\n    t.deepEqual(value, { event: 'pay_fee', amount: 5 })\n  })\n\n  eventEmitter.emit('data', { event: 'pay_fee', amount: 5 })\n})\n\ntest(\"should return an observable from the contract's past events\", async (t) => {\n  const { external } = t.context\n\n  t.plan(2)\n  // arrange\n  const proxy = {}\n  const contract = {\n    getPastEvents: sinon.stub().returns([{ event: 'pay_fee', amount: 5 }])\n  }\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().withArgs('addr', 'ji').returns(contract)\n    }\n  }\n  const requestStub = {\n    params: ['addr', 'ji', 'allEvents', { fromBlock: 8 }]\n  }\n  // act\n  const result = external.pastEvents(requestStub, proxy, { web3: web3Stub })\n  // assert\n  t.true(contract.getPastEvents.calledOnceWith('allEvents', { fromBlock: 8 }))\n  result.subscribe(value => {\n    t.deepEqual(value, { event: 'pay_fee', amount: 5 })\n  })\n})\n\ntest(\"should default fetching past events starting from app's initialization block\", async (t) => {\n  const { external } = t.context\n  const initBlock = 10\n\n  t.plan(2)\n  // arrange\n  const proxy = { initializationBlock: initBlock }\n  const contract = {\n    getPastEvents: sinon.stub().returns([{ event: 'pay_fee', amount: 5 }])\n  }\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().withArgs('addr', 'ji').returns(contract)\n    }\n  }\n  const requestStub = {\n    params: ['addr', 'ji', 'allEvents', {}]\n  }\n  // act\n  const result = external.pastEvents(requestStub, proxy, { web3: web3Stub })\n  // assert\n  t.true(contract.getPastEvents.calledOnceWith('allEvents', { fromBlock: initBlock }))\n  result.subscribe(value => {\n    t.deepEqual(value, { event: 'pay_fee', amount: 5 })\n  })\n})\n\ntest('should handle past events for aragonAPIv1', async (t) => {\n  const { external } = t.context\n  const initBlock = 10\n  const toBlock = 18\n\n  t.plan(2)\n  // arrange\n  const proxy = { initializationBlock: initBlock }\n  const contract = {\n    getPastEvents: sinon.stub().returns([{ event: 'pay_fee', amount: 5 }])\n  }\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().withArgs('addr', 'ji').returns(contract)\n    }\n  }\n  // aragonAPIv1 only passes the event options\n  const requestStub = {\n    params: ['addr', 'ji', { toBlock }]\n  }\n  // act\n  const result = external.pastEvents(requestStub, proxy, { web3: web3Stub })\n  // assert\n  t.true(contract.getPastEvents.calledOnceWith('allEvents', { fromBlock: initBlock, toBlock }))\n  result.subscribe(value => {\n    t.deepEqual(value, { event: 'pay_fee', amount: 5 })\n  })\n})\n\ntest('should not apply a delay to events if not configured', async (t) => {\n  const { external, configurationStub } = t.context\n\n  t.plan(2)\n  // arrange\n  const eventEmitter = new EventEmitter()\n  const proxy = {}\n  const contract = {\n    events: {\n      'allEvents': sinon.stub().returns(eventEmitter)\n    }\n  }\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const requestStub = {\n    params: ['addr', 'ji', 8]\n  }\n  // act\n  // Set a delay\n  configurationStub.getConfiguration.withArgs(configurationKeys.SUBSCRIPTION_EVENT_DELAY).returns(0)\n  const events = external.events(requestStub, proxy, { web3: web3Stub })\n  // assert\n  const startTime = Date.now()\n  events.subscribe(value => {\n    t.deepEqual(value, { event: 'pay_fee', amount: 5 })\n    // Hard to say exactly how much time this will take, but 20ms seems safe\n    // (this should be immediate)\n    t.true((Date.now() - startTime) < 20)\n  })\n\n  eventEmitter.emit('data', { event: 'pay_fee', amount: 5 })\n})\n\ntest('should apply a delay to events if configured', async (t) => {\n  const { external, configurationStub } = t.context\n  const delayTime = 1000\n\n  t.plan(2)\n  // arrange\n  const eventEmitter = new EventEmitter()\n  const proxy = {}\n  const contract = {\n    events: {\n      'allEvents': sinon.stub().returns(eventEmitter)\n    }\n  }\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const requestStub = {\n    params: ['addr', 'ji', 8]\n  }\n  // act\n  // Set a delay\n  configurationStub.getConfiguration.withArgs(configurationKeys.SUBSCRIPTION_EVENT_DELAY).returns(delayTime)\n  const events = external.events(requestStub, proxy, { web3: web3Stub })\n  // assert\n  // Since we've added the delay, we need to tell ava to wait until we're done subscribing\n  return new Promise(resolve => {\n    const startTime = Date.now()\n    events.subscribe(value => {\n      t.deepEqual(value, { event: 'pay_fee', amount: 5 })\n      t.true((Date.now() - startTime) > delayTime)\n      resolve()\n    })\n\n    eventEmitter.emit('data', { event: 'pay_fee', amount: 5 })\n  })\n})\n"],"file":"external.test.js"}