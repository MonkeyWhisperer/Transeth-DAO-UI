{"version":3,"sources":["../../../src/rpc/handlers/index.test.js"],"names":["test","afterEach","always","sinon","restore","t","plan","requestStub","request","id","method","params","value","foo","result","Promise","resolve","reject","Error","completed","Set","subscribe","next","payload","signals","COMPLETE","has","fail","add","is","message","true","complete","deepEqual","sort","handlerA","handlerB"],"mappings":"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","sourcesContent":["import test from 'ava'\nimport sinon from 'sinon'\nimport { of, from } from 'rxjs'\nimport { signals } from '@aragon/rpc-messenger'\n\nimport {\n  createRequestHandler,\n  combineRequestHandlers\n} from './index'\n\ntest.afterEach.always(() => {\n  sinon.restore()\n})\n\ntest('should create a request handler', async (t) => {\n  t.plan(8)\n  // arrange\n  const requestStub = from([{\n    request: {\n      id: 'uuid0',\n      // this one should get filtered away\n      method: 'accounts'\n    }\n  }, {\n    request: {\n      id: 'uuid1',\n      method: 'cache',\n      params: ['get', 'settings']\n    }\n  }, {\n    request: {\n      id: 'uuid4',\n      method: 'cache',\n      params: ['set', 'settings'],\n      value: { foo: 'bar' }\n    }\n  }, {\n    request: {\n      id: 'uuid5',\n      method: 'cache',\n      params: ['clear']\n    }\n  }, {\n    request: {\n      id: 'uuid6',\n      method: 'cache',\n      params: ['get', 'profile']\n    }\n  }, {\n    request: {\n      // this one should NOT get filtered away, but assigned a default response of null\n      id: 'uuid8',\n      method: 'cache'\n    }\n  }])\n  const handlerStub = (request) => {\n    if (request.id === 'uuid8') {\n      // undefined result, this will get converted into null so it can be transmited over JSON RPC\n      return Promise.resolve()\n    }\n\n    if (request.params[0] === 'set') {\n      return Promise.reject(new Error(`no permissions to change ${request.params[1]}!!`))\n    }\n\n    if (request.params[0] === 'clear') {\n      return Promise.reject(new Error())\n    }\n\n    return Promise.resolve(`resolved ${request.params[1]}`)\n  }\n  // act\n  const result = createRequestHandler(requestStub, 'cache', handlerStub)\n  // assert\n  const completed = new Set()\n  result.subscribe({\n    next (value) {\n      if (value.payload === signals.COMPLETE) {\n        if (completed.has(value.id)) {\n          t.fail(`request (${value.id}) completed twice`)\n        }\n        completed.add(value.id)\n        return\n      }\n\n      if (value.id === 'uuid1') {\n        return t.is(value.payload, 'resolved settings')\n      }\n      if (value.id === 'uuid4') {\n        t.is(value.payload.message, 'no permissions to change settings!!')\n        return t.true(value.payload instanceof Error)\n      }\n      if (value.id === 'uuid5') {\n        t.is(value.payload.message, '')\n        return t.true(value.payload instanceof Error)\n      }\n      if (value.id === 'uuid6') {\n        return t.is(value.payload, 'resolved profile')\n      }\n      if (value.id === 'uuid8') {\n        return t.is(value.payload, null)\n      }\n    },\n    // Check non-erroring requests completed correctly\n    complete () {\n      return t.deepEqual([...completed].sort(), ['uuid1', 'uuid6', 'uuid8'])\n    }\n  })\n})\n\ntest('should combine request handlers', async (t) => {\n  t.plan(2)\n  // arrange\n  const handlerA = of('handler for A')\n  const handlerB = of('handler for B')\n  // act\n  const result = combineRequestHandlers(handlerA, handlerB)\n  // assert\n  result.subscribe(value => {\n    t.true(value === 'handler for A' || value === 'handler for B')\n  })\n})\n"],"file":"index.test.js"}