{"version":3,"sources":["../../../src/rpc/handlers/web3-eth.js"],"names":["METHOD_WHITELIST","Set","request","proxy","wrapper","web3","method","params","has","Promise","resolve","eth","reject","Error"],"mappings":"iEA6duB;4BA7dvB,KAAMA,CAAAA,gBAAgB,CAAG,GAAIC,CAAAA,GAAJ,CAAQ,CAC/B,aAD+B,CAE/B,aAF+B,CAG/B,YAH+B,CAI/B,UAJ+B,CAK/B,gBAL+B,CAM/B,0BAN+B,CAO/B,SAP+B,CAQ/B,aAR+B,CAS/B,cAT+B,CAU/B,aAV+B,CAW/B,aAX+B,CAY/B,aAZ+B,CAa/B,oBAb+B,CAc/B,cAd+B,CAe/B,gBAf+B,CAgB/B,qBAhB+B,CAiB/B,yBAjB+B,CAkB/B,uBAlB+B,CAmB/B,SAnB+B,CAoB/B,UApB+B,CAqB/B,UArB+B,CAsB/B,WAtB+B,CAAR,CAAzB,CAyBe,wBAAgBC,OAAhB,CAAyBC,KAAzB,CAAgCC,OAAhC,CAAyC,MAChDC,CAAAA,IAAI,CAAGD,OAAO,CAACC,IADiC,CAEhD,CACJC,MADI,CAEJ,GAAGC,MAFC,EAGFL,OAAO,CAACK,MAL0C,CAOtD,MAAOP,CAAAA,gBAAgB,CAACQ,GAAjB,CAAqBF,MAArB,EACHG,OAAO,CAACC,OAAR,CAAgBL,IAAI,CAACM,GAAL,CAASL,MAAT,EAAiB,GAAGC,MAApB,CAAhB,CADG,CAEHE,OAAO,CAACG,MAAR,CACA,GAAIC,CAAAA,KAAJ,CAAW,0BAAyBP,MAAO,sBAA3C,CADA,CAGL","sourcesContent":["const METHOD_WHITELIST = new Set([\n  'estimateGas',\n  'getAccounts',\n  'getBalance',\n  'getBlock',\n  'getBlockNumber',\n  'getBlockTransactionCount',\n  'getCode',\n  'getCoinbase',\n  'getCompilers',\n  'getGasPrice',\n  'getHashrate',\n  'getPastLogs',\n  'getProtocolVersion',\n  'getStorageAt',\n  'getTransaction',\n  'getTransactionCount',\n  'getTransactionFromBlock',\n  'getTransactionReceipt',\n  'getWork',\n  'getUncle',\n  'isMining',\n  'isSyncing'\n])\n\nexport default async function (request, proxy, wrapper) {\n  const web3 = wrapper.web3\n  const [\n    method,\n    ...params\n  ] = request.params\n\n  return METHOD_WHITELIST.has(method)\n    ? Promise.resolve(web3.eth[method](...params))\n    : Promise.reject(\n      new Error(`Given web3.eth method (${method}) is not whitelisted`)\n    )\n}\n"],"file":"web3-eth.js"}