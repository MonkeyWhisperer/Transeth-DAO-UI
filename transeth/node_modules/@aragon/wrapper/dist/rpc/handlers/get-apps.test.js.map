{"version":3,"file":"get-apps.test.js","names":["test","afterEach","always","sinon","restore","t","plan","initialApps","appId","kernelAddress","contractAddress","abi","roles","isForwarder","name","proxyAddress","icons","src","appsMock","BehaviorSubject","identifiersMock","of","result","getApps","params","apm","getContentPath","content","path","apps","appIdentifiers","expectedInitialApps","appAddress","appImplementationAddress","identifier","expectedEndApps","concat","emitIndex","subscribe","value","deepEqual","fail","endApps","next","icon","expectedApps","currentAppAddress","initialApp","address","endApp"],"sources":["../../../src/rpc/handlers/get-apps.test.js"],"sourcesContent":["import test from 'ava'\nimport sinon from 'sinon'\nimport { of, BehaviorSubject } from 'rxjs'\n\nimport getApps from './get-apps'\n\ntest.afterEach.always(() => {\n  sinon.restore()\n})\n\ntest('should return a subscription for the entire app list if observing all', async (t) => {\n  t.plan(2)\n\n  // arrange\n  const initialApps = [{\n    appId: 'coolApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xcoolApp',\n    abi: 'abi for coolApp',\n    roles: 'roles for coolApp',\n    isForwarder: false,\n    name: 'Cool App',\n    proxyAddress: '0x456',\n    icons: [{ src: 'icon_link' }]\n  }]\n  const appsMock = new BehaviorSubject(initialApps)\n  const identifiersMock = of({\n    '0x456': 'cool identifier',\n    '0x789': 'voting identifier'\n  })\n\n  const requestStub = {\n    params: ['observe', 'all']\n  }\n  const proxyStub = {}\n  const wrapperStub = {\n    apm: {\n      getContentPath: (content, path) => `url/${path}`\n    },\n    apps: appsMock,\n    appIdentifiers: identifiersMock\n  }\n\n  // act\n  const result = await getApps(requestStub, proxyStub, wrapperStub)\n\n  // assert\n  const expectedInitialApps = [{\n    abi: 'abi for coolApp',\n    appAddress: '0x456',\n    appId: 'coolApp',\n    appImplementationAddress: '0xcoolApp',\n    identifier: 'cool identifier',\n    isForwarder: false,\n    kernelAddress: '0x123',\n    name: 'Cool App',\n    icons: [{ src: 'url/icon_link' }],\n    roles: 'roles for coolApp'\n  }]\n  const expectedEndApps = [].concat(expectedInitialApps, {\n    abi: 'abi for votingApp',\n    appAddress: '0x789',\n    appId: 'votingApp',\n    appImplementationAddress: '0xvotingApp',\n    identifier: 'voting identifier',\n    isForwarder: true,\n    kernelAddress: '0x123',\n    name: 'Voting App',\n    icons: [{ src: 'url/icon_link' }],\n    roles: 'roles for votingApp'\n  })\n  let emitIndex = 0\n  result.subscribe(value => {\n    if (emitIndex === 0) {\n      t.deepEqual(value, expectedInitialApps)\n    } else if (emitIndex === 1) {\n      t.deepEqual(value, expectedEndApps)\n    } else {\n      t.fail('too many emissions')\n    }\n\n    emitIndex++\n  })\n\n  // We need apps' second emission to fire after the identifiers have emitted,\n  // so that the combineLatest doesn't skip the initial value\n  const endApps = [].concat(initialApps, {\n    appId: 'votingApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xvotingApp',\n    abi: 'abi for votingApp',\n    roles: 'roles for votingApp',\n    isForwarder: true,\n    name: 'Voting App',\n    proxyAddress: '0x789',\n    icons: [{ src: 'icon_link' }]\n  })\n  appsMock.next(endApps)\n})\n\n// Test backwards compatibility with initial RPC API (no parameters passed)\ntest('should return a subscription for the entire unmodified app list via initial RPC API', async (t) => {\n  t.plan(2)\n\n  // arrange\n  const initialApps = [{\n    appId: 'coolApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xcoolApp',\n    abi: 'abi for coolApp',\n    roles: 'roles for coolApp',\n    isForwarder: false,\n    name: 'Cool App',\n    icon: 'icon link',\n    proxyAddress: '0x456'\n  }]\n  const endApps = [].concat(initialApps, {\n    appId: 'votingApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xvotingApp',\n    abi: 'abi for votingApp',\n    roles: 'roles for votingApp',\n    isForwarder: true,\n    name: 'Voting App',\n    icon: 'icon link',\n    proxyAddress: '0x789'\n  })\n  const appsMock = of(initialApps, endApps)\n\n  const requestStub = {\n    params: []\n  }\n  const proxyStub = {}\n  const wrapperStub = {\n    apps: appsMock\n  }\n\n  // act\n  const result = await getApps(requestStub, proxyStub, wrapperStub)\n  // assert\n  let emitIndex = 0\n  result.subscribe(value => {\n    if (emitIndex === 0) {\n      t.deepEqual(value, initialApps)\n    } else if (emitIndex === 1) {\n      t.deepEqual(value, endApps)\n    } else {\n      t.fail('too many emissions')\n    }\n\n    emitIndex++\n  })\n})\n\ntest('should return the initial value for the entire app list if getting all', async (t) => {\n  t.plan(1)\n\n  // arrange\n  const initialApps = [{\n    appId: 'coolApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xcoolApp',\n    abi: 'abi for coolApp',\n    roles: 'roles for coolApp',\n    isForwarder: false,\n    name: 'Cool App',\n    proxyAddress: '0x456',\n    icons: [{ src: 'icon_link' }]\n  }]\n  const appsMock = new BehaviorSubject(initialApps)\n  const identifiersMock = of({\n    '0x456': 'cool identifier',\n    '0x789': 'voting identifier'\n  })\n\n  const requestStub = {\n    params: ['get', 'all']\n  }\n  const proxyStub = {}\n  const wrapperStub = {\n    apm: {\n      getContentPath: (content, path) => `url/${path}`\n    },\n    apps: appsMock,\n    appIdentifiers: identifiersMock\n  }\n\n  // act\n  const result = await getApps(requestStub, proxyStub, wrapperStub)\n\n  // assert\n  const expectedApps = [{\n    abi: 'abi for coolApp',\n    appAddress: '0x456',\n    appId: 'coolApp',\n    appImplementationAddress: '0xcoolApp',\n    identifier: 'cool identifier',\n    isForwarder: false,\n    kernelAddress: '0x123',\n    name: 'Cool App',\n    icons: [{ src: 'url/icon_link' }],\n    roles: 'roles for coolApp'\n  }]\n  let emitIndex = 0\n  result.subscribe(value => {\n    if (emitIndex === 0) {\n      t.deepEqual(value, expectedApps)\n    } else {\n      t.fail('too many emissions')\n    }\n\n    emitIndex++\n  })\n\n  // Even though this is filtered out, we need apps' second emission to fire after the identifiers\n  // have emitted, so that the combineLatest doesn't skip the initial value\n  const endApps = [].concat(initialApps, {\n    appId: 'votingApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xvotingApp',\n    abi: 'abi for votingApp',\n    roles: 'roles for votingApp',\n    isForwarder: true,\n    name: 'Voting App',\n    proxyAddress: '0x789',\n    icons: [{ src: 'icon_link' }]\n  })\n  appsMock.next(endApps)\n})\n\ntest('should return a subscription for just the current app if observing current', async (t) => {\n  t.plan(2)\n\n  // arrange\n  const currentAppAddress = '0x456'\n  const initialApp = {\n    appId: 'coolApp',\n    contractAddress: '0xcoolApp',\n    kernelAddress: '0x123',\n    abi: 'abi for coolApp',\n    roles: 'roles for coolApp',\n    isForwarder: false,\n    name: 'Cool App',\n    proxyAddress: currentAppAddress,\n    icons: [{ src: 'icon_link' }]\n  }\n  const appsMock = new BehaviorSubject([initialApp])\n  const identifiersMock = of({\n    '0x456': 'cool identifier'\n  })\n\n  const requestStub = {\n    params: ['observe', 'current']\n  }\n  const proxyStub = {\n    address: currentAppAddress\n  }\n  const wrapperStub = {\n    apm: {\n      getContentPath: (content, path) => `url/${path}`\n    },\n    apps: appsMock,\n    appIdentifiers: identifiersMock\n  }\n\n  // act\n  const result = await getApps(requestStub, proxyStub, wrapperStub)\n\n  // assert\n  let emitIndex = 0\n  result.subscribe(value => {\n    if (emitIndex === 0) {\n      t.deepEqual(value, {\n        abi: 'abi for coolApp',\n        appAddress: currentAppAddress,\n        appId: 'coolApp',\n        appImplementationAddress: '0xcoolApp',\n        identifier: 'cool identifier',\n        isForwarder: false,\n        kernelAddress: '0x123',\n        name: 'Cool App',\n        icons: [{ src: 'url/icon_link' }],\n        roles: 'roles for coolApp'\n      })\n    } else if (emitIndex === 1) {\n      t.deepEqual(value, {\n        abi: 'abi for coolApp',\n        appAddress: currentAppAddress,\n        appId: 'new coolApp',\n        appImplementationAddress: '0xcoolApp',\n        identifier: 'cool identifier',\n        isForwarder: false,\n        kernelAddress: '0x123',\n        name: 'Cool App',\n        icons: [{ src: 'url/icon_link' }],\n        roles: 'roles for coolApp'\n      })\n    } else {\n      t.fail('too many emissions')\n    }\n\n    emitIndex++\n  })\n\n  // We need apps' second emission to fire after the identifiers have emitted,\n  // so that the combineLatest doesn't skip the initial value\n  const endApp = {\n    ...initialApp,\n    appId: 'new coolApp'\n  }\n  appsMock.next([\n    // This extra app should be filtered out\n    {\n      appId: 'votingApp',\n      kernelAddress: '0x123',\n      contractAddress: '0xvotingApp',\n      abi: 'abi for votingApp',\n      roles: 'roles for votingApp',\n      isForwarder: true,\n      name: 'Voting App',\n      proxyAddress: '0x789',\n      icons: [{ src: 'icon_link' }]\n    },\n    endApp\n  ])\n})\n\ntest('should return the initial value for just the current app if getting current', async (t) => {\n  t.plan(1)\n\n  // arrange\n  const currentAppAddress = '0x456'\n  const initialApp = {\n    appId: 'coolApp',\n    contractAddress: '0xcoolApp',\n    kernelAddress: '0x123',\n    abi: 'abi for coolApp',\n    roles: 'roles for coolApp',\n    isForwarder: false,\n    name: 'Cool App',\n    proxyAddress: currentAppAddress,\n    icons: [{ src: 'icon_link' }]\n  }\n  const endApp = {\n    ...initialApp,\n    appId: 'new coolApp'\n  }\n  const appsMock = new BehaviorSubject([initialApp])\n  const identifiersMock = of({\n    '0x456': 'cool identifier'\n  })\n\n  const requestStub = {\n    params: ['get', 'current']\n  }\n  const proxyStub = {\n    address: currentAppAddress\n  }\n  const wrapperStub = {\n    apm: {\n      getContentPath: (content, path) => `url/${path}`\n    },\n    apps: appsMock,\n    appIdentifiers: identifiersMock\n  }\n\n  // act\n  const result = await getApps(requestStub, proxyStub, wrapperStub)\n\n  // assert\n  let emitIndex = 0\n  result.subscribe(value => {\n    if (emitIndex === 0) {\n      t.deepEqual(value, {\n        abi: 'abi for coolApp',\n        appAddress: currentAppAddress,\n        appId: 'coolApp',\n        appImplementationAddress: '0xcoolApp',\n        identifier: 'cool identifier',\n        isForwarder: false,\n        kernelAddress: '0x123',\n        name: 'Cool App',\n        icons: [{ src: 'url/icon_link' }],\n        roles: 'roles for coolApp'\n      })\n    } else {\n      t.fail('too many emissions')\n    }\n\n    emitIndex++\n  })\n\n  // Even though this is filtered out, we need apps' second emission to fire after the identifiers\n  // have emitted, so that the combineLatest doesn't skip the initial value\n  appsMock.next([endApp])\n})\n"],"mappings":"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"}