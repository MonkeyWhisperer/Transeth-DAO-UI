{"version":3,"sources":["../../../src/rpc/handlers/external.js"],"names":["call","request","proxy","wrapper","web3","address","methodAbiFragment","params","contract","eth","Contract","methods","name","intent","transactionPath","getExternalTransactionPath","performTransactionPath","external","events","jsonInterface","eventNames","eventOptions","length","fromBlock","initializationBlock","eventSource","allEvents","pipe","event","includes","eventDelay","configurationKeys","SUBSCRIPTION_EVENT_DELAY","pastEvents","getPastEvents","then","filter"],"mappings":"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","sourcesContent":["import { fromEvent, from } from 'rxjs'\nimport { delay, filter } from 'rxjs/operators'\nimport { getConfiguration } from '../../configuration'\nimport * as configurationKeys from '../../configuration/keys'\nimport { getEventNames } from '../../utils/events'\n\nexport function call (request, proxy, wrapper) {\n  const web3 = wrapper.web3\n  const [\n    address,\n    methodAbiFragment,\n    ...params\n  ] = request.params\n\n  const contract = new web3.eth.Contract(\n    [methodAbiFragment],\n    address\n  )\n\n  return contract.methods[methodAbiFragment.name](...params).call()\n}\n\nexport async function intent (request, proxy, wrapper) {\n  const [\n    address,\n    methodAbiFragment,\n    ...params\n  ] = request.params\n\n  const transactionPath = await wrapper.getExternalTransactionPath(\n    address,\n    methodAbiFragment,\n    params\n  )\n\n  return wrapper.performTransactionPath(transactionPath, { external: true })\n}\n\nexport function events (request, proxy, wrapper) {\n  const web3 = wrapper.web3\n  const [\n    address,\n    jsonInterface\n  ] = request.params\n\n  const contract = new web3.eth.Contract(\n    jsonInterface,\n    address\n  )\n\n  // `external_events` RPC compatibility with aragonAPI versions:\n  //   - aragonAPIv2: `'external_events', [address, jsonInterface, eventNames, eventOptions]`\n  //   - aragonAPIv1: `'external_events', [address, jsonInterface, fromBlock (optional)]`\n  let eventNames\n  let eventOptions\n  if (request.params.length === 4) {\n    // aragonAPIv2\n    eventNames = getEventNames(request.params[2])\n    eventOptions = request.params[3]\n  } else if (request.params.length <= 3) {\n    // aragonAPIv1\n    eventNames = ['allEvents']\n    eventOptions = { fromBlock: request.params[2] }\n  }\n  // Use the app proxy's initialization block by default\n  if (eventOptions.fromBlock == null) {\n    eventOptions.fromBlock = proxy.initializationBlock\n  }\n\n  let eventSource\n  if (eventNames.length === 1) {\n    // Get a specific event or all events unfiltered\n    eventSource = fromEvent(\n      contract.events[eventNames[0]](eventOptions),\n      'data'\n    )\n  } else {\n    // Get all events and filter ourselves\n    eventSource = fromEvent(\n      this.contract.events.allEvents(eventOptions),\n      'data'\n    ).pipe(\n      filter((event) => eventNames.includes(event.event))\n    )\n  }\n\n  const eventDelay = getConfiguration(configurationKeys.SUBSCRIPTION_EVENT_DELAY) || 0\n  // Small optimization: don't pipe a delay if we don't have to\n  return eventDelay ? eventSource.pipe(delay(eventDelay)) : eventSource\n}\n\nexport function pastEvents (request, proxy, wrapper) {\n  const web3 = wrapper.web3\n  const [\n    address,\n    jsonInterface\n  ] = request.params\n\n  const contract = new web3.eth.Contract(\n    jsonInterface,\n    address\n  )\n\n  // `external_past_events` RPC compatibility with aragonAPI versions:\n  //   - aragonAPIv2: `'external_past_events', [address, jsonInterface, eventNames, eventOptions]`\n  //   - aragonAPIv1: `'external_past_events', [address, jsonInterface, eventOptions]`\n  let eventNames\n  let eventOptions\n  if (request.params.length === 4) {\n    // aragonAPIv2\n    eventNames = getEventNames(request.params[2])\n    eventOptions = request.params[3]\n  } else if (request.params.length === 3) {\n    // aragonAPIv1\n    eventNames = ['allEvents']\n    eventOptions = request.params[2]\n  }\n  // Use the app proxy's initialization block by default\n  if (eventOptions.fromBlock == null) {\n    eventOptions.fromBlock = proxy.initializationBlock\n  }\n\n  // The `from`s only unpack the returned Promises (and not the array inside them!)\n  if (eventNames.length === 1) {\n    // Get a specific event or all events unfiltered\n    return from(\n      contract.getPastEvents(eventNames[0], eventOptions)\n    )\n  } else {\n    // Get all events and filter ourselves\n    return from(\n      contract.getPastEvents('allEvents', eventOptions)\n        .then(events => events.filter(event => eventNames.includes(event.event)))\n    )\n  }\n}\n"],"file":"external.js"}