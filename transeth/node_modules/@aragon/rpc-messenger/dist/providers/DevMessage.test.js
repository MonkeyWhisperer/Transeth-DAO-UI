"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_ava=_interopRequireDefault(require("ava")),_rxjs=require("rxjs"),_DevMessage=_interopRequireDefault(require("./DevMessage")),_Provider=_interopRequireDefault(require("./Provider"));(0,_ava.default)("should extend Provider",t=>{t.true(_DevMessage.default.prototype instanceof _Provider.default)}),(0,_ava.default)("should filter the incoming messages from the bus by target",t=>{// arrange
const busMock=new _rxjs.Subject,instance=new _DevMessage.default("id",null,busMock);t.plan(2);// act
const messages=instance.messages();messages.subscribe(value=>t.is(value.data,"pass")),busMock.next({data:"pass",target:"id"}),busMock.next({data:"fail"}),busMock.next({data:"pass",target:"id"})}),(0,_ava.default)("should attach the target and send via the bus",t=>{// arrange
const busMock=new _rxjs.Subject,instance=new _DevMessage.default(null,"target",busMock);// assert
// act
t.plan(2),busMock.subscribe(value=>{// assert
t.is(value.data,"what-up"),t.is(value.target,"target")}),instance.send({data:"what-up"})});
//# sourceMappingURL=DevMessage.test.js.map