"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _Provider=_interopRequireDefault(require("./Provider")),_rxjs=require("rxjs"),_operators=require("rxjs/operators");/**
 * A provider that communicates through the [MessageChannel PostMessage API](https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/postMessage).
 *
 * @class MessagePortMessage
 * @extends {Provider}
 */class MessagePortMessage extends _Provider.default{/**
   * Create a new message provider for use with MessageChannels.
   *
   * @param {Object} [target=self] The object (that implements the
   * [MessageChannel PostMessage API](https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/postMessage)) to send messages to.
   * Example: a WebWorker instance.
   */ // eslint-disable-next-line no-undef
constructor(target=self){super(),this.target=target,this.messages$=(0,_rxjs.fromEvent)(this.target,"message",!1).pipe(// We can't use event.source in WebWorker messages as it seems to be null
// However, the fallback to check the target should always be true
(0,_operators.filter)(event=>(event.source||event.target)===this.target),(0,_operators.pluck)("data"),(0,_operators.publish)()),this.messages$.connect()}/**
   * An observable of messages being sent to this provider.
   *
   * @returns {Observable} An [RxJS observable](http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html)
   */messages(){return this.messages$}/**
   * Send a payload to the underlying target of this provider.
   *
   * @param {Object} payload
   */send(payload){this.target.postMessage(payload)}}exports.default=MessagePortMessage;
//# sourceMappingURL=MessagePortMessage.js.map