{"version":3,"file":"index.js","sources":["../../node_modules/regenerator-runtime/runtime.js","../../src/errors.ts","../../src/connectors/ConnectorFortmatic.ts","../../src/connectors/ConnectorFrame.ts","../../src/connectors/ConnectorInjected.ts","../../src/connectors/ConnectorPortis.ts","../../src/connectors/ConnectorProvided.ts","../../src/connectors/ConnectorTorus.ts","../../src/connectors/ConnectorWalletConnect.ts","../../src/connectors/ConnectorWalletLink.ts","../../src/connectors/ConnectorLedger.ts","../../src/utils.ts","../../src/chains.ts","../../src/providers/index.tsx","../../src/index.tsx","../../src/connectors.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export class ChainUnsupportedError extends Error {\n  constructor(message: string, ...params: any[]) {\n    super(...params)\n    this.name = 'ChainUnsupportedError'\n    this.message = message\n  }\n}\n\nexport class ConnectorUnsupportedError extends Error {\n  constructor(connectorId: string, ...params: any[]) {\n    super(...params)\n    this.name = 'ConnectorUnsupportedError'\n    this.message = `Unsupported connector: ${connectorId}.`\n  }\n}\n\nexport class ConnectionRejectedError extends Error {\n  constructor(...params: any[]) {\n    super(...params)\n    this.name = 'ConnectionRejectedError'\n    this.message = `The activation has been rejected by the provider.`\n  }\n}\n\nexport class ConnectorConfigError extends Error {\n  constructor(...params: any[]) {\n    super(...params)\n    this.name = 'ConnectorConfigError'\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { FortmaticConnector } = await import('@web3-react/fortmatic-connector')\n  return {\n    web3ReactConnector({\n      chainId,\n      apiKey,\n    }: {\n      chainId: number\n      apiKey: string\n    }) {\n      if (!apiKey) {\n        throw new ConnectorConfigError(\n          'The Fortmatic connector requires apiKey to be set.'\n        )\n      }\n      return new FortmaticConnector({ apiKey, chainId })\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectionRejectedError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { FrameConnector, UserRejectedRequestError } = await import(\n    '@web3-react/frame-connector'\n  )\n  return {\n    web3ReactConnector({ chainId }: { chainId: number }) {\n      return new FrameConnector({ supportedChainIds: [chainId] })\n    },\n    handleActivationError(err: Error) {\n      if (err instanceof UserRejectedRequestError) {\n        return new ConnectionRejectedError()\n      }\n      if (err.message.startsWith('JSON.parse')) {\n        return new Error(\n          'There seems to be an issue when trying to connect to Frame.'\n        )\n      }\n      return null\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectionRejectedError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { InjectedConnector, UserRejectedRequestError } = await import(\n    '@web3-react/injected-connector'\n  )\n  return {\n    web3ReactConnector({ chainId }: { chainId: number[] }) {\n      return new InjectedConnector({ supportedChainIds: chainId })\n    },\n    handleActivationError(err: Error) {\n      return err instanceof UserRejectedRequestError\n        ? new ConnectionRejectedError()\n        : null\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { PortisConnector } = await import('@web3-react/portis-connector')\n  return {\n    web3ReactConnector({\n      chainId,\n      dAppId,\n    }: {\n      chainId: number[]\n      dAppId: string\n    }) {\n      if (!dAppId) {\n        throw new ConnectorConfigError(\n          'The Portis connector requires dAppId to be set.'\n        )\n      }\n      return new PortisConnector({ dAppId, networks: chainId })\n    },\n  }\n}\n","import { Connector, EthereumProvider } from '../types'\nimport { ConnectionRejectedError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { ProvidedConnector, UserRejectedRequestError } = await import(\n    '@aragon/provided-connector'\n  )\n  return {\n    web3ReactConnector({\n      chainId,\n      provider,\n    }: {\n      chainId: number[]\n      provider: EthereumProvider\n    }) {\n      return new ProvidedConnector({\n        provider,\n        supportedChainIds: chainId,\n      })\n    },\n    handleActivationError(err: Error) {\n      return err instanceof UserRejectedRequestError\n        ? new ConnectionRejectedError()\n        : null\n    },\n  }\n}\n","import { Connector } from '../types'\n\nexport default async function init(): Promise<Connector> {\n  const { TorusConnector } = await import('@web3-react/torus-connector')\n  return {\n    web3ReactConnector({\n      chainId,\n      initOptions,\n      constructorOptions,\n    }: {\n      chainId: number\n      initOptions: any\n      constructorOptions: any\n    }) {\n      return new TorusConnector({ chainId, constructorOptions, initOptions })\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectionRejectedError, ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { UserRejectedRequestError, WalletConnectConnector } = await import(\n    '@web3-react/walletconnect-connector'\n  )\n  return {\n    web3ReactConnector({\n      chainId,\n      rpcUrl,\n      bridge,\n      pollingInterval,\n    }: {\n      chainId: number\n      rpcUrl: string\n      bridge: any\n      pollingInterval: number\n    }) {\n      if (!rpcUrl) {\n        throw new ConnectorConfigError(\n          'The WalletConnect connector requires rpcUrl to be set.'\n        )\n      }\n      if (!/^https?:\\/\\//.test(rpcUrl)) {\n        throw new ConnectorConfigError(\n          'The WalletConnect connector requires rpcUrl to be an HTTP URL.'\n        )\n      }\n      return new WalletConnectConnector({\n        bridge,\n        pollingInterval,\n        qrcode: true,\n        rpc: { [chainId]: rpcUrl },\n      })\n    },\n    handleActivationError(err: Error) {\n      return err instanceof UserRejectedRequestError\n        ? new ConnectionRejectedError()\n        : null\n    },\n  }\n}\n","import 'regenerator-runtime/runtime.js'\nimport { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { WalletLinkConnector } = await import(\n    '@web3-react/walletlink-connector'\n  )\n  return {\n    web3ReactConnector({\n      chainId,\n      url,\n      appName,\n      appLogoUrl,\n    }: {\n      chainId: number\n      url: string\n      appName: string\n      appLogoUrl: string\n    }) {\n      if (chainId !== 1) {\n        throw new ConnectorConfigError(\n          'The WalletLink connector requires chainId to be 1.'\n        )\n      }\n      if (!/^https?:\\/\\//.test(url)) {\n        throw new ConnectorConfigError(\n          'The WalletLink connector requires url to be an HTTP URL.'\n        )\n      }\n      return new WalletLinkConnector({ url, appName, appLogoUrl })\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\n// NOTE: The ledger live path specify which chain and which account is used\n// on the hardware wallet. This should eventually be made dynamic.\nconst LEDGER_LIVE_PATH = \"m/44'/60'/0'/0\"\nconst POLLING_INTERVAL = 12000\n\nexport default async function init(): Promise<Connector> {\n  const { LedgerConnector } = await import('@web3-react/ledger-connector')\n  return {\n    web3ReactConnector({ chainId, url }: { chainId: number; url: string }) {\n      if (!url) {\n        throw new ConnectorConfigError(\n          'The Ledger connector requires url to be set.'\n        )\n      }\n      return new LedgerConnector({\n        url,\n        chainId,\n        pollingInterval: POLLING_INTERVAL,\n        baseDerivationPath: LEDGER_LIVE_PATH,\n      })\n    },\n  }\n}\n","import { Account, EthereumProvider } from './types'\n\nfunction isUnwrappedRpcResult(response: unknown): response is {\n  error?: string\n  result?: unknown\n} {\n  return (\n    typeof response === 'object' && response !== null && 'jsonrpc' in response\n  )\n}\n\nexport function rpcResult(response: unknown): unknown | null {\n  // Some providers don’t wrap the response\n  if (isUnwrappedRpcResult(response)) {\n    if (response.error) {\n      throw new Error(response.error)\n    }\n    return response.result || null\n  }\n\n  return response || null\n}\n\nasync function ethereumRequest(\n  ethereum: EthereumProvider,\n  method: string,\n  params: string[]\n): Promise<any> {\n  // If ethereum.request() exists, the provider is probably EIP-1193 compliant.\n  if (ethereum.request) {\n    return ethereum.request({ method, params }).then(rpcResult)\n  }\n\n  // This is specific to some older versions of MetaMask combined with Web3.js.\n  if (ethereum.sendAsync && ethereum.selectedAddress) {\n    return new Promise((resolve, reject) => {\n      ethereum.sendAsync(\n        {\n          method,\n          params,\n          from: ethereum.selectedAddress,\n          jsonrpc: '2.0',\n          id: 0,\n        },\n        (err: Error, result: any) => {\n          if (err) {\n            reject(err)\n          } else {\n            resolve(result)\n          }\n        }\n      )\n    }).then(rpcResult)\n  }\n\n  // If none of the previous two exist, we assume the provider is pre EIP-1193,\n  // using .send() rather than .request().\n  if (ethereum.send) {\n    return ethereum.send(method, params).then(rpcResult)\n  }\n\n  throw new Error(\n    'The Ethereum provider doesn’t seem to provide a request method.'\n  )\n}\n\nexport async function getAccountIsContract(\n  ethereum: EthereumProvider,\n  account: Account\n): Promise<boolean> {\n  try {\n    const code = await ethereumRequest(ethereum, 'eth_getCode', [account])\n    return code !== '0x'\n  } catch (err) {\n    return false\n  }\n}\n\nexport async function getAccountBalance(\n  ethereum: EthereumProvider,\n  account: Account\n) {\n  return ethereumRequest(ethereum, 'eth_getBalance', [account, 'latest'])\n}\n\nexport async function getBlockNumber(ethereum: EthereumProvider) {\n  return ethereumRequest(ethereum, 'eth_blockNumber', [])\n}\n\nexport function pollEvery<R, T>(\n  fn: (\n    // As of TS 3.9, it doesn’t seem possible to specify dynamic params\n    // as a generic type (e.g. using `T` here). Instead, we have to specify an\n    // array in place (`T[]`), making it impossible to type params independently.\n    ...params: T[]\n  ) => {\n    request: () => Promise<R>\n    onResult: (result: R) => void\n  },\n  delay: number\n) {\n  let timer: any // can be TimeOut (Node) or number (web)\n  let stop = false\n  const poll = async (\n    request: () => Promise<R>,\n    onResult: (result: R) => void\n  ) => {\n    const result = await request()\n    if (!stop) {\n      onResult(result)\n      timer = setTimeout(poll.bind(null, request, onResult), delay)\n    }\n  }\n  return (...params: T[]) => {\n    const { request, onResult } = fn(...params)\n    stop = false\n    poll(request, onResult)\n    return () => {\n      stop = true\n      clearTimeout(timer)\n    }\n  }\n}\n","import { ChainInformation, chainNameOnly } from './types'\n\nconst ETH = {\n  name: 'Ether',\n  symbol: 'ETH',\n  decimals: 18,\n}\n\nconst MATIC = {\n  name: 'Matic Token',\n  symbol: 'MATIC',\n  decimals: 18,\n}\n\nexport const KNOWN_CHAINS = new Map<number, ChainInformation | chainNameOnly>([\n  [\n    1,\n    {\n      id: 1,\n      nativeCurrency: ETH,\n      type: 'main',\n      fullName: 'Ethereum Mainnet',\n      shortName: 'Mainnet',\n      explorerUrl: `https://etherscan.io`,\n    },\n  ],\n  [\n    2,\n    {\n      id: 2,\n      type: 'expanse',\n    },\n  ],\n  [\n    3,\n    {\n      id: 3,\n      nativeCurrency: ETH,\n      type: 'ropsten',\n      fullName: 'Ethereum Ropsten',\n      shortName: 'Ropsten',\n      explorerUrl: `https://ropsten.etherscan.io`,\n    },\n  ],\n  [\n    4,\n    {\n      id: 4,\n      nativeCurrency: ETH,\n      type: 'rinkeby',\n      fullName: 'Ethereum Rinkeby',\n      shortName: 'Rinkeby',\n      explorerUrl: `https://rinkeby.etherscan.io`,\n    },\n  ],\n  [\n    5,\n    {\n      id: 5,\n      nativeCurrency: ETH,\n      type: 'goerli',\n      fullName: 'Ethereum Goerli',\n      shortName: 'Goerli',\n      explorerUrl: `https://goerli.etherscan.io`,\n    },\n  ],\n  [\n    8,\n    {\n      id: 8,\n      type: 'ubiq',\n    },\n  ],\n  [\n    42,\n    {\n      id: 42,\n      nativeCurrency: ETH,\n      type: 'kovan',\n      fullName: 'Ethereum Kovan',\n      shortName: 'Kovan',\n      explorerUrl: `https://kovan.etherscan.io`,\n    },\n  ],\n  [\n    100,\n    {\n      id: 100,\n      type: 'xdai',\n    },\n  ],\n  [\n    137,\n    {\n      id: 137,\n      nativeCurrency: MATIC,\n      type: 'matic',\n      fullName: 'Polygon Mainnet',\n      shortName: 'Matic',\n      explorerUrl: `https://polygonscan.com`,\n    },\n  ],\n  [\n    80001,\n    {\n      id: 80001,\n      nativeCurrency: MATIC,\n      type: 'mumbai',\n      fullName: 'Polygon Testnet',\n      shortName: 'Mumbai',\n      explorerUrl: `https://mumbai.polygonscan.com`,\n    },\n  ],\n  [\n    1337,\n    {\n      id: 1337,\n      type: 'local',\n    },\n  ],\n  [\n    5777,\n    {\n      id: 5777,\n      type: 'ganache',\n    },\n  ],\n])\n","import { Provider } from '../types'\n\ndeclare global {\n  interface Window {\n    ethereum: any\n  }\n}\n\nfunction isElectron() {\n  // See https://github.com/electron/electron/issues/2288\n  return (\n    typeof navigator === 'object' &&\n    typeof navigator.userAgent === 'string' &&\n    navigator.userAgent.indexOf('Electron') >= 0\n  )\n}\n\nconst BASE_URL =\n  'https://storageapi.fleek.co/aragonone-team-bucket/wallet-icons'\n\n// See the corresponding prop type, EthereumProviderType, in prop-types.js.\nconst PROVIDERS = new Map<string, Provider>(\n  [\n    {\n      id: 'frame',\n      name: 'Frame',\n      type: 'Desktop',\n      image: `${BASE_URL}/Frame.png`,\n      strings: {\n        'your Ethereum wallet': 'Frame',\n      },\n    },\n    {\n      id: 'metamask',\n      name: 'Metamask',\n      type: 'Desktop',\n      image: `${BASE_URL}/Metamask.png`,\n      strings: {\n        'your Ethereum wallet': 'Metamask',\n      },\n    },\n    {\n      id: 'status',\n      name: 'Status',\n      type: 'Mobile',\n      image: `${BASE_URL}/Status.png`,\n      strings: {\n        'your Ethereum wallet': 'Status',\n      },\n    },\n    {\n      id: 'cipher',\n      name: 'Cipher',\n      type: 'Mobile',\n      image: `${BASE_URL}/Cipher.png`,\n      strings: {\n        'your Ethereum wallet': 'Cipher',\n      },\n    },\n    {\n      id: 'fortmatic',\n      name: 'Fortmatic',\n      type: 'Any',\n      image: `${BASE_URL}/Fortmatic.svg`,\n      strings: {\n        'your Ethereum wallet': 'Fortmatic',\n      },\n    },\n    {\n      id: 'portis',\n      name: 'Portis',\n      type: 'Any',\n      image: `${BASE_URL}/Portis.svg`,\n      strings: {\n        'your Ethereum wallet': 'Portis',\n      },\n    },\n    {\n      id: 'unknown',\n      name: 'Unknown',\n      type: 'Desktop',\n      image: `${BASE_URL}/wallet.svg`,\n      strings: {\n        'your Ethereum wallet': 'your wallet',\n      },\n    },\n  ].map((provider) => [provider.id, provider])\n)\n\n// Get a providers object for a given ID.\nfunction getProvider(providerId: string): Provider | undefined {\n  return PROVIDERS.get(providerId)\n}\n\n// Get a string that depends on the current Ethereum provider.\n// The default string is used as an identifier (à la gettext).\nfunction getProviderString(string: string, providerId = 'unknown'): string {\n  const provider = getProvider(providerId)\n  return (provider && provider.strings[string]) || string\n}\n\n// Get an identifier for the provider, if it can be detected.\nfunction identifyProvider(provider: any) {\n  if (provider && isElectron()) {\n    return 'frame'\n  }\n  if (provider && provider.isMetaMask) {\n    return 'metamask'\n  }\n  return 'unknown'\n}\n\n// Get a provider from its useWallet() identifier.\nfunction getProviderFromUseWalletId(id: string) {\n  if (id === 'injected' || id === 'provided') {\n    return (\n      getProvider(identifyProvider(window.ethereum)) || getProvider('unknown')\n    )\n  }\n  return getProvider(id) || getProvider('unknown')\n}\n\nexport {\n  getProvider,\n  identifyProvider,\n  getProviderString,\n  getProviderFromUseWalletId,\n}\nexport default PROVIDERS\n","import type { ReactNode } from 'react'\nimport * as PropTypes from 'prop-types'\nimport * as React from 'react'\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  UnsupportedChainIdError,\n  Web3ReactProvider,\n  useWeb3React,\n} from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport {\n  Account,\n  AccountType,\n  Balance,\n  Connector,\n  ConnectorConfig,\n  EthereumProvider,\n  Status,\n  Wallet,\n} from './types'\nimport { getConnectors } from './connectors'\nimport {\n  ConnectionRejectedError,\n  ChainUnsupportedError,\n  ConnectorUnsupportedError,\n} from './errors'\nimport {\n  getAccountBalance,\n  getAccountIsContract,\n  getBlockNumber,\n  pollEvery,\n} from './utils'\n\nimport { KNOWN_CHAINS } from './chains'\n\nimport {\n  getProviderFromUseWalletId,\n  getProviderString,\n} from './providers/index'\n\nconst NO_BALANCE = '-1'\n\nconst UseWalletContext = React.createContext<WalletContext>(null)\n\ntype WalletContext = {\n  addBlockNumberListener: (callback: (blockNumber: number) => void) => void\n  pollBalanceInterval: number\n  pollBlockNumberInterval: number\n  removeBlockNumberListener: (callback: (blockNumber: number) => void) => void\n  wallet: Wallet\n} | null\n\ntype UseWalletProviderProps = {\n  children: ReactNode\n  connectors: { [key: string]: Connector | ConnectorConfig }\n  pollBalanceInterval: number\n  pollBlockNumberInterval: number\n}\n\nfunction useWallet(): Wallet {\n  const walletContext = useContext(UseWalletContext)\n\n  if (walletContext === null) {\n    throw new Error(\n      'useWallet() can only be used inside of <UseWalletProvider />, ' +\n        'please declare it at a higher level.'\n    )\n  }\n\n  const getBlockNumber = useGetBlockNumber()\n  const { wallet } = walletContext\n\n  return useMemo(() => {\n    return { ...wallet, getBlockNumber }\n  }, [getBlockNumber, wallet])\n}\n\nfunction useGetBlockNumber(): () => number | null {\n  const walletContext = useContext(UseWalletContext)\n  const [blockNumber, setBlockNumber] = useState<number | null>(null)\n  const requestedBlockNumber = useRef<boolean>(false)\n\n  const getBlockNumber = useCallback<() => number | null>(() => {\n    if (walletContext === null) {\n      return null\n    }\n\n    requestedBlockNumber.current = true\n    walletContext.addBlockNumberListener(setBlockNumber)\n\n    return blockNumber\n  }, [walletContext, blockNumber])\n\n  useEffect(() => {\n    if (!requestedBlockNumber.current || walletContext === null) {\n      return\n    }\n\n    walletContext.addBlockNumberListener(setBlockNumber)\n    return () => {\n      walletContext.removeBlockNumberListener(setBlockNumber)\n    }\n  }, [requestedBlockNumber, walletContext])\n\n  return getBlockNumber\n}\n\nfunction useWalletBalance({\n  account,\n  ethereum,\n  pollBalanceInterval,\n}: {\n  account?: Account | null\n  ethereum?: EthereumProvider\n  pollBalanceInterval: number\n}) {\n  const [balance, setBalance] = useState<Balance>(NO_BALANCE)\n\n  useEffect(() => {\n    if (!account || !ethereum) {\n      return\n    }\n\n    let cancel = false\n\n    // Poll wallet balance\n    const pollBalance = pollEvery<Balance, any>(\n      (\n        account: Account,\n        ethereum: EthereumProvider,\n        onUpdate: (balance: Balance) => void\n      ) => {\n        let lastBalance = NO_BALANCE\n        return {\n          async request() {\n            return getAccountBalance(ethereum, account)\n              .then((value) => {\n                return value ? JSBI.BigInt(value).toString() : NO_BALANCE\n              })\n              .catch(() => NO_BALANCE)\n          },\n          onResult(balance: Balance) {\n            if (!cancel && balance !== lastBalance) {\n              lastBalance = balance\n              onUpdate(balance)\n            }\n          },\n        }\n      },\n      pollBalanceInterval\n    )\n\n    // start polling balance every x time\n    const stopPollingBalance = pollBalance(account, ethereum, setBalance)\n\n    return () => {\n      cancel = true\n      stopPollingBalance()\n      setBalance(NO_BALANCE)\n    }\n  }, [account, ethereum, pollBalanceInterval])\n\n  return balance\n}\n\n// Only watch block numbers, and return functions allowing to subscribe to it.\nfunction useWatchBlockNumber({\n  ethereum,\n  pollBlockNumberInterval,\n}: {\n  ethereum: EthereumProvider\n  pollBlockNumberInterval: number\n}) {\n  const lastBlockNumber = useRef<number | null>(null)\n\n  // Using listeners lets useWallet() decide if it wants to expose the block\n  // number, which implies to re-render whenever the block number updates.\n  const blockNumberListeners = useRef<Set<(blockNumber: number) => void>>(\n    new Set()\n  )\n\n  const addBlockNumberListener = useCallback((cb) => {\n    if (blockNumberListeners.current.has(cb)) {\n      return\n    }\n\n    // Immediately send the block number to the new listener\n    cb(lastBlockNumber.current)\n\n    // Add the listener\n    blockNumberListeners.current.add(cb)\n  }, [])\n\n  const removeBlockNumberListener = useCallback((cb) => {\n    blockNumberListeners.current.delete(cb)\n  }, [])\n\n  // Update the block number and broadcast it to the listeners\n  const updateBlockNumber = useCallback((blockNumber) => {\n    if (lastBlockNumber.current === blockNumber) {\n      return\n    }\n\n    lastBlockNumber.current = blockNumber\n    blockNumberListeners.current.forEach((cb) => cb(blockNumber))\n  }, [])\n\n  useEffect(() => {\n    if (!ethereum) {\n      updateBlockNumber(null)\n      return\n    }\n\n    let cancel = false\n\n    const pollBlockNumber = pollEvery(() => {\n      return {\n        request: () => getBlockNumber(ethereum),\n        onResult: (latestBlockNumber: number) => {\n          if (!cancel) {\n            updateBlockNumber(\n              latestBlockNumber === null\n                ? null\n                : JSBI.BigInt(latestBlockNumber).toString()\n            )\n          }\n        },\n      }\n    }, pollBlockNumberInterval)\n\n    const stopPollingBlockNumber = pollBlockNumber()\n\n    return () => {\n      cancel = true\n      stopPollingBlockNumber()\n    }\n  }, [ethereum, pollBlockNumberInterval, updateBlockNumber])\n\n  return { addBlockNumberListener, removeBlockNumberListener }\n}\n\nfunction UseWalletProvider({\n  children,\n  // connectors contains init functions and/or connector configs.\n  connectors: connectorsInitsOrConfigs,\n  pollBalanceInterval,\n  pollBlockNumberInterval,\n}: UseWalletProviderProps) {\n  const walletContext = useContext(UseWalletContext)\n\n  if (walletContext !== null) {\n    throw new Error('<UseWalletProvider /> has already been declared.')\n  }\n\n  const [connector, setConnector] = useState<string | null>(null)\n  const [error, setError] = useState<Error | null>(null)\n  const [type, setType] = useState<AccountType | null>(null)\n  const [status, setStatus] = useState<Status>('disconnected')\n  const web3ReactContext = useWeb3React()\n  const activationId = useRef<number>(0)\n  const {\n    account,\n    chainId,\n    library: ethereum,\n    error: web3Error,\n  } = web3ReactContext\n  const balance = useWalletBalance({ account, ethereum, pollBalanceInterval })\n  const { addBlockNumberListener, removeBlockNumberListener } =\n    useWatchBlockNumber({ ethereum, pollBlockNumberInterval })\n\n  // Combine the user-provided connectors with the default ones (see connectors.js).\n  const connectors = useMemo(\n    () => getConnectors(connectorsInitsOrConfigs),\n    [connectorsInitsOrConfigs]\n  )\n\n  const reset = useCallback(() => {\n    if (web3ReactContext.active) {\n      web3ReactContext.deactivate()\n    }\n    setConnector(null)\n    setError(null)\n    setStatus('disconnected')\n  }, [web3ReactContext])\n\n  // if the user switched networks on the wallet itself\n  // return unsupported error.\n  useMemo(() => {\n    if (web3Error instanceof UnsupportedChainIdError) {\n      setStatus('error')\n      setError(new ChainUnsupportedError(web3Error.message))\n    }\n  }, [web3Error])\n\n  const connect = useCallback(\n    async (connectorId = 'injected') => {\n      // Prevent race conditions between connections by using an external ID.\n      const id = ++activationId.current\n\n      reset()\n\n      // Check if another connection has happened right after deactivate().\n      if (id !== activationId.current) {\n        return\n      }\n\n      if (!connectors[connectorId]) {\n        setStatus('error')\n        setError(new ConnectorUnsupportedError(connectorId))\n        return\n      }\n\n      // If no connection happens, we're in the right context and can safely update\n      // the connection stage status\n      setStatus('connecting')\n\n      const [connectorInit, connectorConfig] = connectors[connectorId] || []\n\n      // Initialize the (useWallet) connector if it exists.\n      const connector = await connectorInit?.()\n\n      // Initialize the web3-react connector if it exists.\n      const web3ReactConnector = connector?.web3ReactConnector?.({\n        ...(connectorConfig || {}),\n      })\n\n      if (!web3ReactConnector) {\n        setStatus('error')\n        setError(new ConnectorUnsupportedError(connectorId))\n        return\n      }\n\n      try {\n        // TODO: there is no way to prevent an activation to complete, but we\n        // could reconnect to the last provider the user tried to connect to.\n        setConnector(connectorId)\n        await web3ReactContext.activate(web3ReactConnector, undefined, true)\n        setStatus('connected')\n      } catch (err) {\n        // Don’t throw if another connection has happened in the meantime.\n        if (id !== activationId.current) {\n          return\n        }\n\n        // If not, the error has been thrown during the current connection attempt,\n        // so it's correct to indicate that there has been an error\n        setConnector(null)\n        setStatus('error')\n\n        if (err instanceof UnsupportedChainIdError) {\n          setError(new ChainUnsupportedError(err.message))\n          return\n        }\n        // It might have thrown with an error known by the connector\n        if (connector.handleActivationError) {\n          const handledError = connector.handleActivationError(err)\n          if (handledError) {\n            setError(handledError)\n            return\n          }\n        }\n        // Otherwise, set to state the received error\n        setError(err)\n      }\n    },\n    [connectors, reset, web3ReactContext]\n  )\n\n  useEffect(() => {\n    if (!account || !ethereum) {\n      return\n    }\n\n    let cancel = false\n\n    setType(null)\n\n    getAccountIsContract(ethereum, account).then((isContract) => {\n      if (!cancel) {\n        setStatus('connected')\n        setType(isContract ? 'contract' : 'normal')\n      }\n    })\n\n    return () => {\n      cancel = true\n      setStatus('disconnected')\n      setType(null)\n    }\n  }, [account, ethereum])\n\n  const wallet = useMemo(\n    () => ({\n      _web3ReactContext: web3ReactContext,\n      account: account || null,\n      balance,\n      chainId,\n      connect,\n      connector,\n      connectors,\n      error,\n      ethereum,\n      networkName: chainId\n        ? KNOWN_CHAINS.get(chainId)?.type || 'unknown'\n        : null,\n      providerInfo: connector\n        ? getProviderFromUseWalletId(connector)\n        : getProviderFromUseWalletId('unknown'),\n      reset,\n      status,\n      type,\n    }),\n    [\n      account,\n      balance,\n      chainId,\n      connect,\n      connector,\n      connectors,\n      error,\n      ethereum,\n      type,\n      reset,\n      status,\n      web3ReactContext,\n    ]\n  )\n\n  return (\n    <UseWalletContext.Provider\n      value={{\n        addBlockNumberListener,\n        pollBalanceInterval,\n        pollBlockNumberInterval,\n        removeBlockNumberListener,\n        wallet,\n      }}\n    >\n      {children}\n    </UseWalletContext.Provider>\n  )\n}\n\nUseWalletProvider.propTypes = {\n  children: PropTypes.node,\n  connectors: PropTypes.objectOf(PropTypes.object),\n  pollBalanceInterval: PropTypes.number,\n  pollBlockNumberInterval: PropTypes.number,\n}\n\nUseWalletProvider.defaultProps = {\n  connectors: {},\n  pollBalanceInterval: 2000,\n  pollBlockNumberInterval: 5000,\n}\n\nfunction UseWalletProviderWrapper(props: UseWalletProviderProps) {\n  return (\n    <Web3ReactProvider getLibrary={(ethereum) => ethereum}>\n      <UseWalletProvider {...props} />\n    </Web3ReactProvider>\n  )\n}\n\nUseWalletProviderWrapper.propTypes = UseWalletProvider.propTypes\nUseWalletProviderWrapper.defaultProps = UseWalletProvider.defaultProps\n\nexport {\n  ConnectionRejectedError,\n  ChainUnsupportedError,\n  ConnectorUnsupportedError,\n  UseWalletProviderWrapper as UseWalletProvider,\n  useWallet,\n  getProviderString,\n  getProviderFromUseWalletId,\n  KNOWN_CHAINS,\n}\n\nexport default useWallet\n","import { ConnectorConfig, ConnectorInit } from './types'\nimport initFortmatic from './connectors/ConnectorFortmatic'\nimport initFrame from './connectors/ConnectorFrame'\nimport initInjected from './connectors/ConnectorInjected'\nimport initPortis from './connectors/ConnectorPortis'\nimport initProvided from './connectors/ConnectorProvided'\nimport initTorus from './connectors/ConnectorTorus'\nimport initWalletConnect from './connectors/ConnectorWalletConnect'\nimport initWalletLink from './connectors/ConnectorWalletLink'\nimport initLedger from './connectors/ConnectorLedger'\n\nexport function getConnectors(\n  initsOrConfigs: { [key: string]: ConnectorInit | ConnectorConfig } = {}\n) {\n  const connectors: {\n    [key: string]: [ConnectorInit, ConnectorConfig | null]\n  } = {\n    fortmatic: [initFortmatic, null],\n    frame: [initFrame, null],\n    injected: [initInjected, null],\n    portis: [initPortis, null],\n    provided: [initProvided, null],\n    torus: [initTorus, null],\n    walletconnect: [initWalletConnect, null],\n    walletlink: [initWalletLink, null],\n    ledger: [initLedger, null],\n  }\n\n  for (const [id, initOrConfig] of Object.entries(initsOrConfigs)) {\n    // If initOrConfig is a function, it is an initializer.\n    if (typeof initOrConfig === 'function') {\n      connectors[id] = [initOrConfig as ConnectorInit, null]\n      continue\n    }\n\n    // Otherwise it is a config\n    if (connectors[id]) {\n      connectors[id][1] = initOrConfig as ConnectorConfig\n    }\n  }\n\n  return connectors\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","ChainUnsupportedError","message","params","ConnectorUnsupportedError","connectorId","ConnectionRejectedError","ConnectorConfigError","init","FortmaticConnector","web3ReactConnector","chainId","apiKey","FrameConnector","UserRejectedRequestError","supportedChainIds","handleActivationError","startsWith","InjectedConnector","PortisConnector","dAppId","networks","ProvidedConnector","provider","TorusConnector","constructorOptions","initOptions","WalletConnectConnector","rpcUrl","bridge","pollingInterval","test","qrcode","rpc","WalletLinkConnector","url","appName","appLogoUrl","LedgerConnector","baseDerivationPath","rpcResult","response","isUnwrappedRpcResult","ethereumRequest","ethereum","request","sendAsync","selectedAddress","from","jsonrpc","id","send","account","getAccountBalance","pollEvery","delay","timer","poll","onResult","setTimeout","bind","clearTimeout","ETH","symbol","decimals","MATIC","KNOWN_CHAINS","Map","nativeCurrency","fullName","shortName","explorerUrl","BASE_URL","PROVIDERS","image","strings","map","getProvider","providerId","get","getProviderFromUseWalletId","window","navigator","userAgent","indexOf","isMetaMask","UseWalletContext","React","useWallet","walletContext","useContext","getBlockNumber","useState","blockNumber","setBlockNumber","requestedBlockNumber","useRef","useCallback","current","addBlockNumberListener","useEffect","removeBlockNumberListener","useGetBlockNumber","wallet","useMemo","UseWalletProvider","children","connectorsInitsOrConfigs","connectors","pollBalanceInterval","pollBlockNumberInterval","connector","setConnector","setError","setType","status","setStatus","web3ReactContext","useWeb3React","activationId","library","web3Error","balance","setBalance","cancel","stopPollingBalance","onUpdate","lastBalance","JSBI","BigInt","pollBalance","useWalletBalance","lastBlockNumber","blockNumberListeners","Set","cb","has","add","updateBlockNumber","stopPollingBlockNumber","latestBlockNumber","pollBlockNumber","useWatchBlockNumber","initsOrConfigs","fortmatic","initFortmatic","frame","initFrame","injected","initInjected","portis","initPortis","provided","initProvided","torus","initTorus","walletconnect","initWalletConnect","walletlink","initWalletLink","ledger","initLedger","entries","initOrConfig","getConnectors","active","deactivate","UnsupportedChainIdError","connect","connectorInit","connectorConfig","activate","_context2","handledError","getAccountIsContract","isContract","_web3ReactContext","networkName","providerInfo","Provider","UseWalletProviderWrapper","props","Web3ReactProvider","getLibrary","propTypes","PropTypes","defaultProps","string"],"mappings":"koEAOA,IAAIA,EAAW,SAAUC,GAGvB,IAAIC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKC,EAAKC,GAOxB,OANAf,OAAOgB,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELN,EAAIC,GAEb,IAEEF,EAAO,GAAI,IACX,MAAOQ,GACPR,EAAS,SAASC,EAAKC,EAAKC,GAC1B,OAAOF,EAAIC,GAAOC,GAItB,SAASM,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IACIC,EAAY1B,OAAO2B,QADFJ,GAAWA,EAAQtB,qBAAqB2B,EAAYL,EAAUK,GACtC3B,WACzC4B,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAC,EAAUK,QAsMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EA/KuB,iBAiL3B,OAAO,SAAgBC,EAAQC,GAC7B,GAhLoB,cAgLhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GAnLoB,cAmLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,MAoQG,CAAEnB,WAzfPqB,EAyfyBC,MAAM,GA9P/B,IAHAR,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAII,EAAWT,EAAQS,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUT,GACnD,GAAIU,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBV,EAAQI,OAGVJ,EAAQa,KAAOb,EAAQc,MAAQd,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GAnNqB,mBAmNjBD,EAEF,MADAA,EAjNc,YAkNRH,EAAQK,IAGhBL,EAAQe,kBAAkBf,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQgB,OAAO,SAAUhB,EAAQK,KAGnCF,EA5NkB,YA8NlB,IAAIc,EAASC,EAASzB,EAASE,EAAMK,GACrC,GAAoB,WAAhBiB,EAAOE,KAAmB,CAO5B,GAJAhB,EAAQH,EAAQQ,KAjOA,YAFK,iBAuOjBS,EAAOZ,MAAQO,EACjB,SAGF,MAAO,CACL1B,MAAO+B,EAAOZ,IACdG,KAAMR,EAAQQ,MAGS,UAAhBS,EAAOE,OAChBhB,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,OA9QPe,CAAiB3B,EAASE,EAAMK,GAE7CH,EAcT,SAASqB,EAASG,EAAIrC,EAAKqB,GACzB,IACE,MAAO,CAAEc,KAAM,SAAUd,IAAKgB,EAAGC,KAAKtC,EAAKqB,IAC3C,MAAOd,GACP,MAAO,CAAE4B,KAAM,QAASd,IAAKd,IAhBjCtB,EAAQuB,KAAOA,EAoBf,IAOIoB,EAAmB,GAMvB,SAASb,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBhD,GAAkB,WAClC,OAAOiD,MAGT,IAAIC,EAAWxD,OAAOyD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B3D,GAC5BG,EAAOiD,KAAKO,EAAyBpD,KAGvCgD,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2BpD,UAClC2B,EAAU3B,UAAYD,OAAO2B,OAAO2B,GAWtC,SAASO,EAAsB5D,GAC7B,CAAC,OAAQ,QAAS,UAAU6D,SAAQ,SAAS7B,GAC3CrB,EAAOX,EAAWgC,GAAQ,SAASC,GACjC,OAAOqB,KAAKxB,QAAQE,EAAQC,SAkClC,SAAS6B,EAAcrC,EAAWsC,GAgChC,IAAIC,EAgCJV,KAAKxB,QA9BL,SAAiBE,EAAQC,GACvB,SAASgC,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOpC,EAAQC,EAAKiC,EAASC,GACpC,IAAItB,EAASC,EAASrB,EAAUO,GAASP,EAAWQ,GACpD,GAAoB,UAAhBY,EAAOE,KAEJ,CACL,IAAIsB,EAASxB,EAAOZ,IAChBnB,EAAQuD,EAAOvD,MACnB,OAAIA,GACiB,iBAAVA,GACPb,EAAOiD,KAAKpC,EAAO,WACdiD,EAAYG,QAAQpD,EAAMwD,SAASC,MAAK,SAASzD,GACtDsD,EAAO,OAAQtD,EAAOoD,EAASC,MAC9B,SAAShD,GACViD,EAAO,QAASjD,EAAK+C,EAASC,MAI3BJ,EAAYG,QAAQpD,GAAOyD,MAAK,SAASC,GAI9CH,EAAOvD,MAAQ0D,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOtB,EAAOZ,KAiCZmC,CAAOpC,EAAQC,EAAKiC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAUT,GACrC,IAAII,EAASK,EAAS/B,SAASsB,EAAQI,QACvC,QA1TEG,IA0TEH,EAAsB,CAKxB,GAFAJ,EAAQS,SAAW,KAEI,UAAnBT,EAAQI,OAAoB,CAE9B,GAAIK,EAAS/B,SAAiB,SAG5BsB,EAAQI,OAAS,SACjBJ,EAAQK,SArUZE,EAsUII,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQI,QAGV,OAAOQ,EAIXZ,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAChB,kDAGJ,OAAOlC,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS/B,SAAUsB,EAAQK,KAEzD,GAAoB,UAAhBY,EAAOE,KAIT,OAHAnB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,IACrBL,EAAQS,SAAW,KACZG,EAGT,IAAImC,EAAO9B,EAAOZ,IAElB,OAAM0C,EAOFA,EAAKvC,MAGPR,EAAQS,EAASuC,YAAcD,EAAK7D,MAGpCc,EAAQiD,KAAOxC,EAASyC,QAQD,WAAnBlD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAzXVE,GAmYFP,EAAQS,SAAW,KACZG,GANEmC,GA3BP/C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAAU,oCAC5B9C,EAAQS,SAAW,KACZG,GAoDX,SAASuC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB1B,KAAKgC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIpC,EAASoC,EAAMQ,YAAc,GACjC5C,EAAOE,KAAO,gBACPF,EAAOZ,IACdgD,EAAMQ,WAAa5C,EAGrB,SAAShB,EAAQL,GAIf8B,KAAKgC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYqC,QAAQkB,EAAczB,MAClCA,KAAKoC,OAAM,GA8Bb,SAAShC,EAAOiC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAStF,GAC9B,GAAIuF,EACF,OAAOA,EAAe1C,KAAKyC,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,OAASkB,EAAIJ,EAASG,QACpB,GAAI7F,EAAOiD,KAAKyC,EAAUI,GAGxB,OAFAlB,EAAK/D,MAAQ6E,EAASI,GACtBlB,EAAKzC,MAAO,EACLyC,EAOX,OAHAA,EAAK/D,WAzeTqB,EA0eI0C,EAAKzC,MAAO,EAELyC,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMmB,GAIjB,SAASA,IACP,MAAO,CAAElF,WAzfPqB,EAyfyBC,MAAM,GA+MnC,OA5mBAe,EAAkBnD,UAAY2D,EAAGsC,YAAc7C,EAC/CA,EAA2B6C,YAAc9C,EACzCA,EAAkB+C,YAAcvF,EAC9ByC,EACA3C,EACA,qBAaFZ,EAAQsG,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASlD,GAG2B,uBAAnCkD,EAAKH,aAAeG,EAAKC,QAIhCzG,EAAQ0G,KAAO,SAASH,GAQtB,OAPIrG,OAAOyG,eACTzG,OAAOyG,eAAeJ,EAAQhD,IAE9BgD,EAAOK,UAAYrD,EACnBzC,EAAOyF,EAAQ3F,EAAmB,sBAEpC2F,EAAOpG,UAAYD,OAAO2B,OAAOiC,GAC1ByC,GAOTvG,EAAQ6G,MAAQ,SAASzE,GACvB,MAAO,CAAEqC,QAASrC,IAsEpB2B,EAAsBE,EAAc9D,WACpC8D,EAAc9D,UAAUO,GAAuB,WAC7C,OAAO+C,MAETzD,EAAQiE,cAAgBA,EAKxBjE,EAAQ8G,MAAQ,SAAStF,EAASC,EAASC,EAAMC,EAAauC,QACxC,IAAhBA,IAAwBA,EAAc6C,SAE1C,IAAIC,EAAO,IAAI/C,EACb1C,EAAKC,EAASC,EAASC,EAAMC,GAC7BuC,GAGF,OAAOlE,EAAQsG,oBAAoB7E,GAC/BuF,EACAA,EAAKhC,OAAON,MAAK,SAASF,GACxB,OAAOA,EAAOjC,KAAOiC,EAAOvD,MAAQ+F,EAAKhC,WAuKjDjB,EAAsBD,GAEtBhD,EAAOgD,EAAIlD,EAAmB,aAO9BkD,EAAGtD,GAAkB,WACnB,OAAOiD,MAGTK,EAAGmD,SAAW,WACZ,MAAO,sBAkCTjH,EAAQkH,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIlG,KAAOmG,EACdD,EAAKxB,KAAK1E,GAMZ,OAJAkG,EAAKE,UAIE,SAASpC,IACd,KAAOkC,EAAKjB,QAAQ,CAClB,IAAIjF,EAAMkG,EAAKG,MACf,GAAIrG,KAAOmG,EAGT,OAFAnC,EAAK/D,MAAQD,EACbgE,EAAKzC,MAAO,EACLyC,EAQX,OADAA,EAAKzC,MAAO,EACLyC,IAsCXhF,EAAQ6D,OAASA,EAMjB7B,EAAQ7B,UAAY,CAClBiG,YAAapE,EAEb6D,MAAO,SAASyB,GAcd,GAbA7D,KAAK8D,KAAO,EACZ9D,KAAKuB,KAAO,EAGZvB,KAAKb,KAAOa,KAAKZ,WApgBjBP,EAqgBAmB,KAAKlB,MAAO,EACZkB,KAAKjB,SAAW,KAEhBiB,KAAKtB,OAAS,OACdsB,KAAKrB,SAzgBLE,EA2gBAmB,KAAKgC,WAAWzB,QAAQ2B,IAEnB2B,EACH,IAAK,IAAIb,KAAQhD,KAEQ,MAAnBgD,EAAKe,OAAO,IACZpH,EAAOiD,KAAKI,KAAMgD,KACjBT,OAAOS,EAAKgB,MAAM,MACrBhE,KAAKgD,QAnhBXnE,IAyhBFoF,KAAM,WACJjE,KAAKlB,MAAO,EAEZ,IACIoF,EADYlE,KAAKgC,WAAW,GACLG,WAC3B,GAAwB,UAApB+B,EAAWzE,KACb,MAAMyE,EAAWvF,IAGnB,OAAOqB,KAAKmE,MAGd9E,kBAAmB,SAAS+E,GAC1B,GAAIpE,KAAKlB,KACP,MAAMsF,EAGR,IAAI9F,EAAU0B,KACd,SAASqE,EAAOC,EAAKC,GAYnB,OAXAhF,EAAOE,KAAO,QACdF,EAAOZ,IAAMyF,EACb9F,EAAQiD,KAAO+C,EAEXC,IAGFjG,EAAQI,OAAS,OACjBJ,EAAQK,SApjBZE,KAujBY0F,EAGZ,IAAK,IAAI9B,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GACxBlD,EAASoC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOyC,EAAO,OAGhB,GAAI1C,EAAMC,QAAU5B,KAAK8D,KAAM,CAC7B,IAAIU,EAAW7H,EAAOiD,KAAK+B,EAAO,YAC9B8C,EAAa9H,EAAOiD,KAAK+B,EAAO,cAEpC,GAAI6C,GAAYC,EAAY,CAC1B,GAAIzE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,GACzB,GAAI7B,KAAK8D,KAAOnC,EAAMG,WAC3B,OAAOuC,EAAO1C,EAAMG,iBAGjB,GAAI0C,GACT,GAAIxE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,OAG3B,CAAA,IAAI4C,EAMT,MAAM,IAAI7F,MAAM,0CALhB,GAAIoB,KAAK8D,KAAOnC,EAAMG,WACpB,OAAOuC,EAAO1C,EAAMG,gBAU9BxC,OAAQ,SAASG,EAAMd,GACrB,IAAK,IAAI8D,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,QAAU5B,KAAK8D,MACrBnH,EAAOiD,KAAK+B,EAAO,eACnB3B,KAAK8D,KAAOnC,EAAMG,WAAY,CAChC,IAAI4C,EAAe/C,EACnB,OAIA+C,IACU,UAATjF,GACS,aAATA,IACDiF,EAAa9C,QAAUjD,GACvBA,GAAO+F,EAAa5C,aAGtB4C,EAAe,MAGjB,IAAInF,EAASmF,EAAeA,EAAavC,WAAa,GAItD,OAHA5C,EAAOE,KAAOA,EACdF,EAAOZ,IAAMA,EAET+F,GACF1E,KAAKtB,OAAS,OACdsB,KAAKuB,KAAOmD,EAAa5C,WAClB5C,GAGFc,KAAK2E,SAASpF,IAGvBoF,SAAU,SAASpF,EAAQwC,GACzB,GAAoB,UAAhBxC,EAAOE,KACT,MAAMF,EAAOZ,IAcf,MAXoB,UAAhBY,EAAOE,MACS,aAAhBF,EAAOE,KACTO,KAAKuB,KAAOhC,EAAOZ,IACM,WAAhBY,EAAOE,MAChBO,KAAKmE,KAAOnE,KAAKrB,IAAMY,EAAOZ,IAC9BqB,KAAKtB,OAAS,SACdsB,KAAKuB,KAAO,OACa,WAAhBhC,EAAOE,MAAqBsC,IACrC/B,KAAKuB,KAAOQ,GAGP7C,GAGT0F,OAAQ,SAAS9C,GACf,IAAK,IAAIW,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFA9B,KAAK2E,SAAShD,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPzC,IAKb2F,MAAS,SAASjD,GAChB,IAAK,IAAIa,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAIrC,EAASoC,EAAMQ,WACnB,GAAoB,UAAhB5C,EAAOE,KAAkB,CAC3B,IAAIqF,EAASvF,EAAOZ,IACpBuD,EAAcP,GAEhB,OAAOmD,GAMX,MAAM,IAAIlG,MAAM,0BAGlBmG,cAAe,SAAS1C,EAAUf,EAAYE,GAa5C,OAZAxB,KAAKjB,SAAW,CACd/B,SAAUoD,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBxB,KAAKtB,SAGPsB,KAAKrB,SA7rBPE,GAgsBOK,IAQJ3C,GAOsByI,EAAOzI,SAGtC,IACE0I,mBAAqB3I,EACrB,MAAO4I,GAUPC,SAAS,IAAK,yBAAdA,CAAwC7I,gCC1uB7B8I,yBACCC,gCAAoBC,mCAAAA,0DACrBA,WACJtC,KAAO,0BACPqC,QAAUA,uBAJwBzG,QAQ9B2G,yBACCC,gCAAwBF,mCAAAA,0DACzBA,WACJtC,KAAO,8BACPqC,kCAAoCG,2BAJE5G,QAQlC6G,wDACIH,2BAAAA,wDACJA,WACJtC,KAAO,4BACPqC,iFAJoCzG,QAQhC8G,wDACIJ,2BAAAA,wDACJA,WACJtC,KAAO,4CAH0BpE,iBCrBZ+G,mEAAf,kGACwB,qCAAO,sDAApCC,SAAAA,qCACD,CACLC,mCACEC,IAAAA,QACAC,IAAAA,WAKKA,QACG,IAAIL,EACR,6DAGG,IAAIE,EAAmB,CAAEG,OAAAA,EAAQD,QAAAA,kFCfhBH,mEAAf,sGAC8C,qCACzD,kDADMK,aAAAA,eAAgBC,IAAAA,2CAGjB,CACLJ,sCACS,IAAIG,EAAe,CAAEE,kBAAmB,GAD5BJ,YAGrBK,+BAAsBtI,UAChBA,aAAeoI,EACV,IAAIR,EAET5H,EAAIwH,QAAQe,WAAW,cAClB,IAAIxH,MACT,+DAGG,mFCjBiB+G,mEAAf,sGACiD,qCAC5D,qDADMU,aAAAA,kBAAmBJ,IAAAA,2CAGpB,CACLJ,sCACS,IAAIQ,EAAkB,CAAEH,oBADZJ,WAGrBK,+BAAsBtI,UACbA,aAAeoI,EAClB,IAAIR,EACJ,mFCXoBE,mEAAf,kGACqB,qCAAO,mDAAjCW,SAAAA,kCACD,CACLT,mCACEC,IAAAA,QACAS,IAAAA,WAKKA,QACG,IAAIb,EACR,0DAGG,IAAIY,EAAgB,CAAEC,OAAAA,EAAQC,SAAUV,kFCfvBH,mEAAf,sGACiD,qCAC5D,iDADMc,aAAAA,kBAAmBR,IAAAA,2CAGpB,CACLJ,sCAOS,IAAIY,EAAkB,CAC3BC,WANFA,SAOER,oBARFJ,WAWFK,+BAAsBtI,UACbA,aAAeoI,EAClB,IAAIR,EACJ,mFCrBoBE,mEAAf,kGACoB,qCAAO,kDAAhCgB,SAAAA,iCACD,CACLd,sCASS,IAAIc,EAAe,CAAEb,UAR5BA,QAQqCc,qBANrCA,mBAMyDC,cAPzDA,4FCJwBlB,mEAAf,sGACsD,qCACjE,0DADMM,aAAAA,yBAA0Ba,IAAAA,yCAG3B,CACLjB,qCACEC,IAAAA,QACAiB,IAAAA,OACAC,IAAAA,OACAC,IAAAA,oBAOKF,QACG,IAAIrB,EACR,8DAGC,eAAewB,KAAKH,SACjB,IAAIrB,EACR,yEAGG,IAAIoB,EAAuB,CAChCE,OAAAA,EACAC,gBAAAA,EACAE,QAAQ,EACRC,YAAQtB,GAAUiB,QAGtBZ,+BAAsBtI,UACbA,aAAeoI,EAClB,IAAIR,EACJ,mFCnCoBE,mEAAf,kGACyB,qCACpC,uDADM0B,SAAAA,sCAGD,CACLxB,mCAEEyB,IAAAA,IACAC,IAAAA,QACAC,IAAAA,cAOgB,MAVhB1B,cAWQ,IAAIJ,EACR,0DAGC,eAAewB,KAAKI,SACjB,IAAI5B,EACR,mEAGG,IAAI2B,EAAoB,CAAEC,IAAAA,EAAKC,QAAAA,EAASC,WAAAA,yECtBrD,SAA8B7B,mEAAf,kGACqB,qCAAO,mDAAjC8B,SAAAA,kCACD,CACL5B,mCAAqBC,IAAAA,QAASwB,IAAAA,QACvBA,QACG,IAAI5B,EACR,uDAGG,IAAI+B,EAAgB,CACzBH,IAAAA,EACAxB,QAAAA,EACAmB,gBAdiB,KAejBS,mBAhBiB,iGCMTC,EAAUC,MAT1B,SAA8BA,SAKN,iBAAbA,GAAsC,OAAbA,GAAqB,YAAaA,EAMhEC,CAAqBD,GAAW,IAC9BA,EAASzG,YACL,IAAIvC,MAAMgJ,EAASzG,cAEpByG,EAAS7G,QAAU,YAGrB6G,GAAY,cAGNE,wEAAf,WACEC,EACArJ,EACA4G,sEAGIyC,EAASC,iDACJD,EAASC,QAAQ,CAAEtJ,OAAAA,EAAQ4G,OAAAA,IAAUrE,KAAK0G,eAI/CI,EAASE,YAAaF,EAASG,yDAC1B,IAAI5E,SAAQ,SAAC1C,EAASC,GAC3BkH,EAASE,UACP,CACEvJ,OAAAA,EACA4G,OAAAA,EACA6C,KAAMJ,EAASG,gBACfE,QAAS,MACTC,GAAI,IAEN,SAACxK,EAAYkD,GACPlD,EACFgD,EAAOhD,GAEP+C,EAAQG,SAIbE,KAAK0G,eAKNI,EAASO,8CACJP,EAASO,KAAK5J,EAAQ4G,GAAQrE,KAAK0G,iBAGtC,IAAI/I,MACR,qKAIG,WACLmJ,EACAQ,2FAGqBT,EAAgBC,EAAU,cAAe,CAACQ,oCAC7C,yEAET,4FAIWC,sEAAf,WACLT,EACAQ,2FAEOT,EAAgBC,EAAU,iBAAkB,CAACQ,EAAS,8GAGxD,WAA8BR,2FAC5BD,EAAgBC,EAAU,kBAAmB,gFAGtCU,EACd9I,EASA+I,OAEIC,EACA1E,GAAO,EACL2E,6BAAO,WACXZ,EACAa,wFAEqBb,WAAfjH,SACDkD,IACH4E,EAAS9H,GACT4H,EAAQG,WAAWF,EAAKG,KAAK,KAAMf,EAASa,GAAWH,8GAGpD,iBACyB/I,0BAAtBqI,IAAAA,QAASa,IAAAA,gBACjB5E,GAAO,EACP2E,EAAKZ,EAASa,GACP,WACL5E,GAAO,EACP+E,aAAaL,KCrHnB,IAAMM,EAAM,CACVjG,KAAM,QACNkG,OAAQ,MACRC,SAAU,IAGNC,EAAQ,CACZpG,KAAM,cACNkG,OAAQ,QACRC,SAAU,IAGCE,EAAe,IAAIC,IAA8C,CAC5E,CACE,EACA,CACEjB,GAAI,EACJkB,eAAgBN,EAChBxJ,KAAM,OACN+J,SAAU,mBACVC,UAAW,UACXC,qCAGJ,CACE,EACA,CACErB,GAAI,EACJ5I,KAAM,YAGV,CACE,EACA,CACE4I,GAAI,EACJkB,eAAgBN,EAChBxJ,KAAM,UACN+J,SAAU,mBACVC,UAAW,UACXC,6CAGJ,CACE,EACA,CACErB,GAAI,EACJkB,eAAgBN,EAChBxJ,KAAM,UACN+J,SAAU,mBACVC,UAAW,UACXC,6CAGJ,CACE,EACA,CACErB,GAAI,EACJkB,eAAgBN,EAChBxJ,KAAM,SACN+J,SAAU,kBACVC,UAAW,SACXC,4CAGJ,CACE,EACA,CACErB,GAAI,EACJ5I,KAAM,SAGV,CACE,GACA,CACE4I,GAAI,GACJkB,eAAgBN,EAChBxJ,KAAM,QACN+J,SAAU,iBACVC,UAAW,QACXC,2CAGJ,CACE,IACA,CACErB,GAAI,IACJ5I,KAAM,SAGV,CACE,IACA,CACE4I,GAAI,IACJkB,eAAgBH,EAChB3J,KAAM,QACN+J,SAAU,kBACVC,UAAW,QACXC,wCAGJ,CACE,MACA,CACErB,GAAI,MACJkB,eAAgBH,EAChB3J,KAAM,SACN+J,SAAU,kBACVC,UAAW,SACXC,+CAGJ,CACE,KACA,CACErB,GAAI,KACJ5I,KAAM,UAGV,CACE,KACA,CACE4I,GAAI,KACJ5I,KAAM,cC3GNkK,EACJ,iEAGIC,EAAY,IAAIN,IACpB,CACE,CACEjB,GAAI,QACJrF,KAAM,QACNvD,KAAM,UACNoK,MAAUF,eACVG,QAAS,wBACiB,UAG5B,CACEzB,GAAI,WACJrF,KAAM,WACNvD,KAAM,UACNoK,MAAUF,kBACVG,QAAS,wBACiB,aAG5B,CACEzB,GAAI,SACJrF,KAAM,SACNvD,KAAM,SACNoK,MAAUF,gBACVG,QAAS,wBACiB,WAG5B,CACEzB,GAAI,SACJrF,KAAM,SACNvD,KAAM,SACNoK,MAAUF,gBACVG,QAAS,wBACiB,WAG5B,CACEzB,GAAI,YACJrF,KAAM,YACNvD,KAAM,MACNoK,MAAUF,mBACVG,QAAS,wBACiB,cAG5B,CACEzB,GAAI,SACJrF,KAAM,SACNvD,KAAM,MACNoK,MAAUF,gBACVG,QAAS,wBACiB,WAG5B,CACEzB,GAAI,UACJrF,KAAM,UACNvD,KAAM,UACNoK,MAAUF,gBACVG,QAAS,wBACiB,iBAG5BC,KAAI,SAACrD,SAAa,CAACA,EAAS2B,GAAI3B,OAIpC,SAASsD,EAAYC,UACZL,EAAUM,IAAID,GAsBvB,SAASE,EAA2B9B,SACvB,aAAPA,GAA4B,aAAPA,EAErB2B,GAdoBtD,EAcS0D,OAAOrC,WAzGjB,iBAAdsC,WACwB,iBAAxBA,UAAUC,WACjBD,UAAUC,UAAUC,QAAQ,aAAe,EA2FpC,QAEL7D,GAAYA,EAAS8D,WAChB,WAEF,YAO+CR,EAAY,WAG3DA,EAAY3B,IAAO2B,EAAY,WAjBxC,IAA0BtD,ECvD1B,IAEM+D,GAAmBC,gBAAmC,MAiB5D,SAASC,SACDC,EAAgBC,aAAWJ,OAEX,OAAlBG,QACI,IAAIhM,MACR,0GAKEkM,EAQR,eACQF,EAAgBC,aAAWJ,MACKM,WAAwB,MAAvDC,OAAaC,OACdC,EAAuBC,UAAgB,GAEvCL,EAAiBM,eAAiC,kBAChC,OAAlBR,EACK,MAGTM,EAAqBG,SAAU,EAC/BT,EAAcU,uBAAuBL,GAE9BD,KACN,CAACJ,EAAeI,WAEnBO,aAAU,cACHL,EAAqBG,SAA6B,OAAlBT,SAIrCA,EAAcU,uBAAuBL,GAC9B,WACLL,EAAcY,0BAA0BP,MAEzC,CAACC,EAAsBN,IAEnBE,EAnCgBW,GACfC,EAAWd,EAAXc,cAEDC,WAAQ,uBACDD,GAAQZ,eAAAA,MACnB,CAACA,EAAgBY,IAuKtB,SAASE,UACPC,IAAAA,SAEYC,IAAZC,WACAC,IAAAA,oBACAC,IAAAA,2BAIsB,OAFApB,aAAWJ,UAGzB,IAAI7L,MAAM,0DAGgBmM,WAAwB,MAAnDmB,OAAWC,SACQpB,WAAuB,MAA1C5J,OAAOiL,SACUrB,WAA6B,MAA9CtL,OAAM4M,SACetB,WAAiB,gBAAtCuB,OAAQC,OACTC,EAAmBC,iBACnBC,EAAevB,SAAe,GAElC5C,EAIEiE,EAJFjE,QACAzC,EAGE0G,EAHF1G,QACSiC,EAEPyE,EAFFG,QACOC,EACLJ,EADFrL,MAEI0L,EA/JR,gBACEtE,IAAAA,QACAR,IAAAA,SACAiE,IAAAA,sBAM8BjB,WA5Eb,MA4EV8B,OAASC,cAEhBvB,aAAU,cACHhD,GAAYR,OAIbgF,GAAS,EA8BPC,EA3BcvE,GAClB,SACEF,EACAR,EACAkF,OAEIC,EA5FO,WA6FJ,CACClF,yIACGQ,EAAkBT,EAAUQ,GAChCtH,MAAK,SAACzD,UACEA,EAAQ2P,EAAKC,OAAO5P,GAAOgG,WAjG/B,eAmGE,iBAnGF,uDAqGTqF,kBAASgE,GACFE,GAAUF,IAAYK,IACzBA,EAAcL,EACdI,EAASJ,QAKjBb,EAIyBqB,CAAY9E,EAASR,EAAU+E,UAEnD,WACLC,GAAS,EACTC,IACAF,EAtHa,UAwHd,CAACvE,EAASR,EAAUiE,IAEhBa,EAwGSS,CAAiB,CAAE/E,QAAAA,EAASR,SAAAA,EAAUiE,oBAAAA,MApGxD,gBACEjE,IAAAA,SACAkE,IAAAA,wBAKMsB,EAAkBpC,SAAsB,MAIxCqC,EAAuBrC,SAC3B,IAAIsC,KAGAnC,EAAyBF,eAAY,SAACsC,GACtCF,EAAqBnC,QAAQsC,IAAID,KAKrCA,EAAGH,EAAgBlC,SAGnBmC,EAAqBnC,QAAQuC,IAAIF,MAChC,IAEGlC,EAA4BJ,eAAY,SAACsC,GAC7CF,EAAqBnC,eAAeqC,KACnC,IAGGG,EAAoBzC,eAAY,SAACJ,GACjCuC,EAAgBlC,UAAYL,IAIhCuC,EAAgBlC,QAAUL,EAC1BwC,EAAqBnC,QAAQ9K,SAAQ,SAACmN,UAAOA,EAAG1C,SAC/C,WAEHO,aAAU,cACHxD,OAKDgF,GAAS,EAiBPe,EAfkBrF,GAAU,iBACzB,CACLT,QAAS,6DAAM8C,CAAe/C,IAC9Bc,SAAU,SAACkF,GACJhB,GACHc,EACwB,OAAtBE,EACI,KACAZ,EAAKC,OAAOW,GAAmBvK,gBAK1CyI,EAE4B+B,UAExB,WACLjB,GAAS,EACTe,KAzBAD,EAAkB,QA2BnB,CAAC9F,EAAUkE,EAAyB4B,IAEhC,CAAEvC,uBAAAA,EAAwBE,0BAAAA,GA8B/ByC,CAAoB,CAAElG,SAAAA,EAAUkE,wBAAAA,IAD1BX,IAAAA,uBAAwBE,IAAAA,0BAI1BO,EAAaJ,WACjB,2BC3QFuC,YAAAA,IAAAA,EAAqE,YAE/DnC,EAEF,CACFoC,UAAW,CAACC,EAAe,MAC3BC,MAAO,CAACC,EAAW,MACnBC,SAAU,CAACC,EAAc,MACzBC,OAAQ,CAACC,EAAY,MACrBC,SAAU,CAACC,EAAc,MACzBC,MAAO,CAACC,EAAW,MACnBC,cAAe,CAACC,EAAmB,MACnCC,WAAY,CAACC,EAAgB,MAC7BC,OAAQ,CAACC,EAAY,aAGU3S,OAAO4S,QAAQnB,kBAAiB,YAArD7F,OAAIiH,OAEc,mBAAjBA,EAMPvD,EAAW1D,KACb0D,EAAW1D,GAAI,GAAKiH,GANpBvD,EAAW1D,GAAM,CAACiH,EAA+B,aAU9CvD,ED8OCwD,CAAczD,KACpB,CAACA,IAGG1J,EAAQgJ,eAAY,WACpBoB,EAAiBgD,QACnBhD,EAAiBiD,aAEnBtD,EAAa,MACbC,EAAS,MACTG,EAAU,kBACT,CAACC,IAIJb,WAAQ,WACFiB,aAAqB8C,4BACvBnD,EAAU,SACVH,EAAS,IAAIhH,EAAsBwH,EAAUvH,aAE9C,CAACuH,QAEE+C,EAAUvE,yCACd,WAAO5F,gGAAAA,IAAAA,EAAc,YAEb6C,IAAOqE,EAAarB,QAE1BjJ,IAGIiG,IAAOqE,EAAarB,4DAInBU,EAAWvG,0BACd+G,EAAU,SACVH,EAAS,IAAI7G,EAA0BC,qCAMzC+G,EAAU,cAEHqD,KAAkC7D,EAAWvG,IAAgB,OAA9CqK,uBAGED,SAAAA,eAGlB/J,SAHAqG,iBAGqBA,EAAWrG,0BAAXqG,EAAWrG,wBAChCgK,GAAmB,6BAIvBtD,EAAU,SACVH,EAAS,IAAI7G,EAA0BC,gDAOvC2G,EAAa3G,aACPgH,EAAiBsD,SAASjK,OAAoBhH,GAAW,WAC/D0N,EAAU,mEAGNlE,IAAOqE,EAAarB,8DAMxBc,EAAa,MACbI,EAAU,WAENwD,gBAAeL,mDACjBtD,EAAS,IAAIhH,EAAsB2K,KAAI1K,yCAIrC6G,EAAU/F,4CACN6J,EAAe9D,EAAU/F,qDAE7BiG,EAAS4D,8BAKb5D,yHAGJ,CAACL,EAAY3J,EAAOoK,IAGtBjB,aAAU,cACHhD,GAAYR,OAIbgF,GAAS,SAEbV,EAAQ,mDAER4D,CAAqBlI,EAAUQ,GAAStH,MAAK,SAACiP,GACvCnD,IACHR,EAAU,aACVF,EAAQ6D,EAAa,WAAa,cAI/B,WACLnD,GAAS,EACTR,EAAU,gBACVF,EAAQ,UAET,CAAC9D,EAASR,QAEP2D,EAASC,WACb,uBAAO,CACLwE,kBAAmB3D,EACnBjE,QAASA,GAAW,KACpBsE,QAAAA,EACA/G,QAAAA,EACA6J,QAAAA,EACAzD,UAAAA,EACAH,WAAAA,EACA5K,MAAAA,EACA4G,SAAAA,EACAqI,YAAatK,YACTuD,EAAaa,IAAIpE,aAAUrG,OAAQ,UACnC,KACJ4Q,aACIlG,EADU+B,GAEiB,WAC/B9J,MAAAA,EACAkK,OAAAA,EACA7M,KAAAA,KAEF,CACE8I,EACAsE,EACA/G,EACA6J,EACAzD,EACAH,EACA5K,EACA4G,EACAtI,EACA2C,EACAkK,EACAE,WAKF9B,gBAACD,GAAiB6F,UAChB9S,MAAO,CACL8N,uBAAAA,EACAU,oBAAAA,EACAC,wBAAAA,EACAT,0BAAAA,EACAE,OAAAA,IAGDG,GAkBP,SAAS0E,GAAyBC,UAE9B9F,gBAAC+F,qBAAkBC,WAAY,SAAC3I,UAAaA,IAC3C2C,gBAACkB,oBAAsB4E,KAhB7B5E,GAAkB+E,UAAY,CAC5B9E,SAAU+E,OACV7E,WAAY6E,WAAmBA,UAC/B5E,oBAAqB4E,SACrB3E,wBAAyB2E,UAG3BhF,GAAkBiF,aAAe,CAC/B9E,WAAY,GACZC,oBAAqB,IACrBC,wBAAyB,KAW3BsE,GAAyBI,UAAY/E,GAAkB+E,UACvDJ,GAAyBM,aAAejF,GAAkBiF,yPDxX1D,SAA2BC,EAAgB7G,YAAAA,IAAAA,EAAa,eAChDvD,EAAWsD,EAAYC,UACrBvD,GAAYA,EAASoD,QAAQgH,IAAYA"}