{"version":3,"sources":["../../src/helpers/withDecimals.js"],"names":["amount","decimals","amountBn","BN","formattedAmount","type","value"],"mappings":"4QAGe,IACb;;;;;;KAOA,MAAOA,MAAP,CAAeC,QAAQ,CAAG,EAA1B,GAAiC,MACzBC,CAAAA,QAAQ,CAAG,GAAIC,YAAJ,CAAOH,MAAP,CADc,CAGzBI,eAAe,CAAG,uBAASF,QAAT,CAAmB,qBAAOD,QAAP,CAAnB,EAA4CA,QAA5C,IAHO,CAK/B,MAAO,CACLI,IAAI,CAAE,QADD,CAELC,KAAK,CAAEF,eAFF,CAIR,C","sourcesContent":["import BN from 'bn.js'\nimport { formatBN, tenPow } from './lib/formatBN'\n\nexport default () =>\n  /**\n   * Format an numerical amount with its decimals\n   *\n   * @param {*} amount The absolute amount, without any decimals.\n   * @param decimals The number of decimal places to format to. Defaults to 18.\n   * @return {Promise<radspec/evaluator/TypedValue>}\n   */\n  async (amount, decimals = 18) => {\n    const amountBn = new BN(amount)\n\n    const formattedAmount = formatBN(amountBn, tenPow(decimals), Number(decimals), false)\n\n    return {\n      type: 'string',\n      value: formattedAmount\n    }\n  }\n"],"file":"withDecimals.js"}