{"version":3,"sources":["../src/index.ts"],"names":["chainIdToNetwork","PortisConnector","dAppId","networks","config","chainIds","map","n","Number","chainId","every","c","invariant","supportedChainIds","handleOnLogout","bind","handleOnActiveWalletChanged","handleOnError","console","log","emitDeactivate","account","emitUpdate","error","emitError","activate","portis","onLogout","onActiveWalletChanged","onError","provider","enable","then","accounts","m","Portis","getProvider","getChainId","send","getAccount","deactivate","changeNetwork","newNetwork","isGasRelayEnabled","close","logout","AbstractConnector"],"mappings":"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","file":"portis-connector.esm.a587b3b5.js","sourceRoot":"../src","sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\nconst chainIdToNetwork: { [network: number]: string } = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan',\n  100: 'xdai',\n  30: 'orchid',\n  31: 'orchidTestnet',\n  99: 'core',\n  77: 'sokol',\n  61: 'classic',\n  8: 'ubiq',\n  108: 'thundercore',\n  18: 'thundercoreTestnet',\n  163: 'lightstreams',\n  122: 'fuse',\n  15001: 'maticTestnet'\n}\n\ntype Network = number | { chainId: string; [key: string]: any }\n\ninterface PortisConnectorArguments {\n  dAppId: string\n  networks: Network[]\n  config?: any\n}\n\nexport class PortisConnector extends AbstractConnector {\n  private readonly dAppId: string\n  private readonly networks: Network[]\n  private readonly config: any\n\n  public portis: any\n\n  constructor({ dAppId, networks, config = {} }: PortisConnectorArguments) {\n    const chainIds = networks.map((n): number => (typeof n === 'number' ? n : Number(n.chainId)))\n    invariant(\n      chainIds.every((c): boolean => !!chainIdToNetwork[c]),\n      `One or more unsupported networks ${networks}`\n    )\n    super({ supportedChainIds: chainIds })\n\n    this.dAppId = dAppId\n    this.networks = networks\n    this.config = config\n\n    this.handleOnLogout = this.handleOnLogout.bind(this)\n    this.handleOnActiveWalletChanged = this.handleOnActiveWalletChanged.bind(this)\n    this.handleOnError = this.handleOnError.bind(this)\n  }\n\n  private handleOnLogout(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onLogout' event\")\n    }\n    this.emitDeactivate()\n  }\n\n  private handleOnActiveWalletChanged(account: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onActiveWalletChanged' event with payload\", account)\n    }\n    this.emitUpdate({ account })\n  }\n\n  private handleOnError(error: Error): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onError' event\")\n    }\n    this.emitError(error)\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.portis) {\n      const Portis = await import('@portis/web3').then(m => m?.default ?? m)\n      this.portis = new Portis(\n        this.dAppId,\n        typeof this.networks[0] === 'number' ? chainIdToNetwork[this.networks[0]] : (this.networks[0] as any),\n        this.config\n      )\n    }\n\n    this.portis.onLogout(this.handleOnLogout)\n    this.portis.onActiveWalletChanged(this.handleOnActiveWalletChanged)\n    this.portis.onError(this.handleOnError)\n\n    const account = await this.portis.provider.enable().then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.portis.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.portis.provider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.portis.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.portis.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.portis.onLogout(() => {})\n    this.portis.onActiveWalletChanged(() => {})\n    this.portis.onError(() => {})\n  }\n\n  public async changeNetwork(newNetwork: number | Network, isGasRelayEnabled?: boolean) {\n    if (typeof newNetwork === 'number') {\n      invariant(!!chainIdToNetwork[newNetwork], `Invalid chainId ${newNetwork}`)\n      this.portis.changeNetwork(chainIdToNetwork[newNetwork], isGasRelayEnabled)\n      this.emitUpdate({ chainId: newNetwork })\n    } else {\n      this.portis.changeNetwork(newNetwork, isGasRelayEnabled)\n      this.emitUpdate({ chainId: Number(newNetwork.chainId) })\n    }\n  }\n\n  public async close() {\n    await this.portis.logout()\n    this.emitDeactivate()\n  }\n}\n"]}