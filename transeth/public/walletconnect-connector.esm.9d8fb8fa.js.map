{"version":3,"sources":["../src/index.ts"],"names":["URI_AVAILABLE","UserRejectedRequestError","name","constructor","message","Error","getSupportedChains","supportedChainIds","rpc","Object","keys","map","k","Number","undefined","WalletConnectConnector","config","handleChainChanged","bind","handleAccountsChanged","handleDisconnect","chainId","console","log","emitUpdate","accounts","account","emitDeactivate","walletConnectProvider","stop","removeListener","activate","enable","then","error","on","provider","wc","connected","createSession","length","emit","uri","m","WalletConnectProvider","getProvider","getChainId","send","getAccount","deactivate","close","AbstractConnector"],"mappings":"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","file":"walletconnect-connector.esm.9d8fb8fa.js","sourceRoot":"../src","sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { IWalletConnectProviderOptions } from '@walletconnect/types'\n\nexport const URI_AVAILABLE = 'URI_AVAILABLE'\n\nexport interface WalletConnectConnectorArguments extends IWalletConnectProviderOptions {\n  supportedChainIds?: number[]\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nfunction getSupportedChains({ supportedChainIds, rpc }: WalletConnectConnectorArguments): number[] | undefined {\n  if (supportedChainIds) {\n    return supportedChainIds\n  }\n\n  return rpc ? Object.keys(rpc).map(k => Number(k)) : undefined\n}\n\nexport class WalletConnectConnector extends AbstractConnector {\n  private readonly config: WalletConnectConnectorArguments\n\n  public walletConnectProvider?: any\n\n  constructor(config: WalletConnectConnectorArguments) {\n    super({ supportedChainIds: getSupportedChains(config) })\n\n    this.config = config\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleDisconnect = this.handleDisconnect.bind(this)\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n\n  private handleDisconnect(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'disconnect' event\")\n    }\n    this.emitDeactivate()\n    // we have to do this because of a @walletconnect/web3-provider bug\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n      this.walletConnectProvider = undefined\n    }\n\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletConnectProvider) {\n      const WalletConnectProvider = await import('@walletconnect/web3-provider').then(m => m?.default ?? m)\n      this.walletConnectProvider = new WalletConnectProvider(this.config)\n    }\n\n    // ensure that the uri is going to be available, and emit an event if there's a new uri\n    if (!this.walletConnectProvider.wc.connected) {\n      await this.walletConnectProvider.wc.createSession({\n        chainId: this.supportedChainIds && this.supportedChainIds.length > 0 ? this.supportedChainIds[0] : 1\n      })\n      this.emit(URI_AVAILABLE, this.walletConnectProvider.wc.uri)\n    }\n\n    const account = await this.walletConnectProvider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        // TODO ideally this would be a better check\n        if (error.message === 'User closed modal') {\n          throw new UserRejectedRequestError()\n        }\n\n        throw error\n      })\n\n    this.walletConnectProvider.on('disconnect', this.handleDisconnect)\n    this.walletConnectProvider.on('chainChanged', this.handleChainChanged)\n    this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.walletConnectProvider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.walletConnectProvider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.walletConnectProvider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.walletConnectProvider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect)\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n    }\n  }\n\n  public async close() {\n    await this.walletConnectProvider?.close()\n  }\n}\n"]}