{"version":3,"sources":["../src/index.ts"],"names":["CHAIN_ID","WalletLinkConnector","url","appName","appLogoUrl","darkMode","supportedChainIds","handleChainChanged","bind","handleAccountsChanged","activate","provider","request","method","accounts","account","on","window","ethereum","isCoinbaseWallet","walletLink","then","m","WalletLink","makeWeb3Provider","getProvider","getChainId","chainId","getAccount","deactivate","removeListener","close","emitDeactivate","console","log","emitUpdate","AbstractConnector"],"mappings":"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","file":"walletlink-connector.esm.de7183cf.js","sourceRoot":"../src","sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nconst CHAIN_ID = 1\n\ninterface WalletLinkConnectorArguments {\n  url: string\n  appName: string\n  appLogoUrl?: string\n  darkMode?: boolean\n  supportedChainIds?: number[]\n}\n\nexport class WalletLinkConnector extends AbstractConnector {\n  private readonly url: string\n  private readonly appName: string\n  private readonly appLogoUrl?: string\n  private readonly darkMode: boolean\n\n  public walletLink: any\n  private provider: any\n\n  constructor({ url, appName, appLogoUrl, darkMode, supportedChainIds }: WalletLinkConnectorArguments) {\n    super({ supportedChainIds: supportedChainIds })\n\n    this.url = url\n    this.appName = appName\n    this.appLogoUrl = appLogoUrl\n    this.darkMode = darkMode || false\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    // @ts-ignore\n    if (window.ethereum && window.ethereum.isCoinbaseWallet === true) {\n      // user is in the dapp browser on Coinbase Wallet\n      this.provider = window.ethereum\n    } else if (!this.walletLink) {\n      const WalletLink = await import('walletlink').then(m => m?.default ?? m)\n      this.walletLink = new WalletLink({\n        appName: this.appName,\n        darkMode: this.darkMode,\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\n      })\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\n    }\n\n    const accounts = await this.provider.request({\n      method: 'eth_requestAccounts'\n    })\n    const account = accounts[0]\n\n    this.provider.on('chainChanged', this.handleChainChanged)\n    this.provider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.provider, account: account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    const accounts = await this.provider.request({\n      method: 'eth_requestAccounts'\n    })\n    return accounts[0]\n  }\n\n  public deactivate() {\n    this.provider.removeListener('chainChanged', this.handleChainChanged)\n    this.provider.removeListener('accountsChanged', this.handleAccountsChanged)\n  }\n\n  public async close() {\n    this.provider.close()\n    this.emitDeactivate()\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId: chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n}\n"]}