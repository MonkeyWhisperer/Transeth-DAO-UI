{"version":3,"sources":["../node_modules/eth-provider/resolve/index.js","../node_modules/ethereum-provider/index.js","../node_modules/eth-provider/ConnectionManager/index.js","../node_modules/eth-provider/provider/index.js","../node_modules/eth-provider/presets/index.js","../node_modules/eth-provider/connections/injected.js","../node_modules/eth-provider/connections/unavailable.js","../node_modules/eth-provider/parse/index.js","../node_modules/eth-provider/connections/ws.js","../node_modules/eth-provider/connections/http.js","../node_modules/eth-provider/browser.js","../src/index.ts"],"names":["EventEmitter","require","dev","ConnectionManager","constructor","connections","targets","options","connected","status","interval","name","inSetup","connect","index","console","log","connection","length","protocol","location","on","err","connectionError","listenerCount","emit","warn","message","summary","closing","refresh","target","data","payload","toFixed","clearTimeout","connectTimer","setTimeout","close","error","code","id","jsonrpc","send","closed","module","exports","parse","WebSocket","WebSocketConnection","_WebSocket","url","create","Error","socket","e","addEventListener","payloads","forEach","load","Array","isArray","onClose","removeAllListeners","readyState","CONNECTING","_","JSON","stringify","cb","uuid","XHR","HTTPConnection","_XHR","subscriptions","pollId","init","method","params","response","pollSubscriptions","result","subscriptionTimeout","map","p","filter","n","filterStatus","res","statusText","internal","xhr","responded","abort","open","setRequestHeader","timeout","onerror","ontimeout","onreadystatechange","responseText","UserRejectedRequestError","FrameConnector","kwargs","supportedChainIds","invariant","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","networkId","emitUpdate","provider","chainId","accounts","account","reason","emitDeactivate","activate","ethProvider","enable","then","getProvider","getChainId","getAccount","deactivate","removeListener","AbstractConnector"],"mappings":"AEAA,AQAA,ADAA,AJAA,ACAA,AEAA,ADAA,AHAA,ADAA,AHAA,ACAA,MCAMA,AOAAA,ADAAA,YNAY,AOAA,ADAA,GNAGC,AOAAA,ADAAA,ONAO,AOAA,ADAA,CNAC,AOAA,ADAA,QNAD,AOAA,ADAA,CNA5B,AOAA,ADAA;AECA,ALAA,ACAA,ACAA,AHAA,ADAA,AHAA,ACAA;ACCA,AQAA,ADDA,AJCA,ACAA,AEDA,ADCA,AHAA,ADAA,AHAA,ACAA,MCAMC,AODAoE,ADAAvB,GNCG,CODC,CDAC,CNCC,CODC9C,CDACA,MCAM,CAAC,ADAA,CAAC,QNCe,AODjB,CAApB,CDAqB,CAArB,UNCA;AQCA,ALAA,ACAA,ACAA,AHAA,ADAA,AHAA,ACAA;ACCA,AQAA,ADDA,AJCA,ACAA,AEFA,ADEA,AHAA,ADAA,AHAA,ACAA,MCAME,AODAD,ADDAA,GCCG,ADDA,GCCG,ADDA,WNEZ,OODqC,ADDA,ENELF,WODhC,ADDA,CNEA,CAA6C;AAC3CI,AQAF,ADAA,AJAA,ACAA,AEDA,ADCA,AHAA,ADAA,AHAA,ACAA,ECAEA,EOAEmE,ADDAvB,GCCJ,MPAa,AMDb,CNCe3C,WAAF,EAAeC,OAAf,EAAwBC,OAAxB,EAAiC;AAC1C,AQAJ,ALAA,ACAA,ACAA,AHAA,ADAA,AHAA,ACAA;ACCI,AQAJ,ADAA,AJAA,ACAA,AEDA,ADCA,AHAA,ADAA,AHAA,ACAA,MQAMiE,ADDAvB,GNCG3C,OAAL,GAAeA,COAnB,KDDA,CNCI,GOAyBN,KDDKA,OCClC,CAA0C,IDD1C,CAA+C;ANE3C,AQAJ,ADAEI,AJAF,ACAA,AEDEA,ADCF,AHAA,ADAA,AHAA,ACAA,EQAEA,ADDAA,ONCOC,IOAI,ADDA,CCCEoE,ADDAvB,ICCF,EPAT,AOAiBC,GPAE9C,AOAV,CDDA,CCCaE,CDDC4C,GAAd,EAAmB5C,CCCnB,EPAT,AOA+B,IDDtB,EAA4B;ANErC,AQAJ,ADAI,AJAJ,ACAA,AEDI,ADCJ,AHAA,ADAA,AHAA,ACAA,SCASC,SAAL,GAAiB,KAAjB;AACA,AQAJ,ADAI+D,AJAJ,ACAA,AEDIvB,ADCJ,AJAA,AHAA,ACAA,IQAIuB,ADDAvB,GCCG,EPAEvC,COACgE,GDDG,CCCT,CPAA,CMDYvB,ENCE,QMDd,CNCA;AACA,AQAJ,ADAI,AJAJ,AGDIb,ADCJ,AJAA,AHAA,ACAA,IODIA,KNCK3B,AOAAF,KDDK,CAAC,ENCX,COAA,EPAgBD,COAC,ADDA,KCCjB,ADDsB6C,CNCC,CAAC1C,IMDP,CAAYyC,GNCb,AMDC,EAAiB5C,ENCE,IAApC,CMDiB,CAAP,EAAkC,CAAlC,CAAV;ANEA,AQAJ,ADAI,AJAJ,AGDG,ADCH,AJAA,AHAA,ACAA,SCASI,AOAA+D,IPAL,GAAYnE,MOAZ,CPAmB,CAACI,COAC,GPAT,EOAZ,EPA4B,SAA5B;AACA,AQAJ,ADAI,AJAJ,AEAA,AJAA,AHAA,ACAA,SCASC,AOAAH,MAAL,CPAA,EOAc,CPAC,IAAf,IOAA;APCA,AQAJ,ADAI,AJAJ,AGDE2C,ADCF,AJAA,AHAA,ACAA,EODEA,MAAM,CNCCvC,AOAAsC,ADDCA,GCCN,ADDI,EAAO5C,CCCA4C,CPAX,EOAA,GDDI,EAAgB;ANErB,AQAH,ADAI,ADDA,ADCJ,AJAA,AHAA,ACAA,QODQ,CCCCwB,ADDA3B,MCCL,GAAcsB,ADDd,EAAgB,ECCE,EAAlB,CDDqB7C,IAAL,CAAU,OAAV,EAAmB,IAAI4B,KAAJ,CAAU,kCAAV,CAAnB;AEEpB,ADAIhB,AFAJ,AJAA,AHAA,ACAA,IQAIA,UAAU,CAAC,MAAM,KAAKe,MAAL,EAAP,EAAsB,CAAtB,CAAV;APCFvC,AQAF,ADAG,ADFC,ADEJ,AJAA,AHAA,ACAA,ECAEA,MMFM,CNEC,CAAEC,KAAK,GAAG,CAAV,EAAa;AAClB,AQAJ,AFHU,ADGV,AJAA,AHAA,ACAA,QCAQZ,GAAG,AMHIoD,INGAxC,EMHL,GNGU,AMHI,IAAIkC,CNGH,CAArB,EAAwBjC,KMHJ,CAAcoC,CNGH,CAACnC,CMHZ,CAAd,CNGkB,CAAa,8DAA6D,KAAKL,IAAK,EAApF;AQC5B,ADAEyC,ADJ0C,ADI5C,AJAA,AHAA,ACAA,EQAEA,GDJE,CAAyC,ECIrC,GAAI,EDJwCG,CAAP,EAAU;ANKnD,AQAJ,ADAI,ADLqD,ADKzD,AJAA,AHAA,ACAA,QCAQ,AOAA,CAACgB,GAAL,CPAStD,AMLmD,CCKlD,IDLuDQ,GCKhD,CDL2C,CNKxD,AMLkE,GCKhDA,CPAC,GOAN,ADL2C,CCKjC,CPACR,AMLmDsC,CAAnB,CAAP,ICKpC,EAAmB,EPAb,CAAgB9C,COAC4C,KPAjB,AOAa,CAAU,IPAI,WAA9C,IAA6DvC,KAAK,IAAI,COAtC,CAAnB,CAAP,EPAqEG,UAAL,CAAgBH,KAA1F,EAAiG;AAC/F,AQAN,ADAI,ADNmF,ADMvF,AJAA,AHAA,ACAA,SQASO,CPACnB,COAN,CAAQ,CPAN,EAASa,IOAX,EAAiB,CPAC,CAACC,GAAR,CAAY,AOAA,2FPAZ;AACV,AODwB,AFC7B,AJAA,AHAA,ACAA,KCFI,KOC6B,CPCtB,IAAI,AODuBR,KPClBF,IODS,EAAoB,CPClC,CAAaY,GOD0BoB,GPCvC,EODkC,GPCV,CAA5B,EAA+B;AACpC,AOFyD,ADL3D,ADOJ,AJAA,AHAA,ACAA,KQFI,IDLKgB,CNOCpD,GAAJ,EAASa,AMPX,CAAYyC,MNOM,CAACxC,GAAR,CAAY,KMPvB,CAA6B,OAA7B,EAAsCM,GAAG,IAAI,KNOlC,AMPuCG,IAAL,CAAU,OAAV,EAAmBH,GAAnB,CAA7C;ANQC,AOFD,ADLA,ADOJ,AJAA,AHAA,ACAA,KCFW,IOAFsD,ADLAtB,ENOE,EOFP,EDLA,CAAYE,gBAAZ,CAA6B,MAA7B,EAAqC,MAAM;ANQzC,AOFH,ADLG,ADON,AJAA,AFAA,WOPW/B,CNOC,GMPN,CAAU,SAAV;ANOQN,AMNR,ADON,AJAA,AFAA,QCDcA,GMNHmC,KNMC,CMNN,CAAYE,gBAAZ,CAA6B,SAA7B,EAAwC7B,OAAO,IAAI;ANMjCP,AOAtBwD,ADLM,ADOR,AJAA,AFAA,EQFEA,IAAI,EPAkBxD,COAd,KDLIY,IAAI,GAAG,OAAOL,OAAO,CAACK,IAAf,KAAwB,QAAxB,GAAmCL,OAAO,CAACK,IAA3C,GAAkD,EAA/D;ANKI,AOCR,ADLIe,ALOR,AFAA,QOPQA,CCKCJ,CPD4B,GOCjC,ADLS,CCKC,ADLAX,CNI4B1B,GMJ7B,EAAO,CAACgB,CNIgB,CAAaR,CMJ9B,EAAM2C,ENIW,CAA/B,KMJc,KAAmB;ANKjC,AOAUf,ADJN,ALOV,AFAA,MQHgBA,KPALzB,EOAY,CDJTK,CCIW,EDJf,EAAS,CCIL,CPAR,GAAkB,EMLe,CACb,ENIGjB,WAAL,CAAiBc,QAAjB,EAA2BC,QAA3B,CAAlB;AAEA,AOF0ByD,ANIhC,AFAA,MQJgCA,KPErB5D,COF2B,EAAE,OPElC,CAAgBI,EAAhB,CAAmB,EOFX,KPER,EAA4BC,GAAG,IAAI;AACjC,AOH+CwD,ADH7CrB,ALQV,AFAA,MQLuDqB,IDH7CrB,ENME,AOHiD,CPGhD,COHkD,EAAjD,EPGIjD,AMNA,CAACkD,OAAT,CNMF,AMNmBC,ENME,EMNE,IAAI,CNMC,KAAKpC,eAAL,CAAqBT,KAArB,EAA4BQ,GAA5B,CAAP;AACrB,AOJ2DmB,ADFvD,ALQZ,AFAA,MQNmEA,EAAE,EAAE,EPI3D,IMNImB,CNMCpC,IMNI,CAACqC,OAAN,CNMJ,AMNkBF,CNMC,GMNf,CAAJ,EAAyB,CNMzB,CAAJ,EAAiC,OAAO,KAAKlC,IAAL,CAAU,OAAV,EAAmBH,GAAnB,CAAP;AACjCP,AOLM,ADDA4C,ALQd,AFAA,KQPI,EAAwE,CPKpE5C,AOLqEO,GAAD,EAAMyD,CDDpEpB,CNMC,CAACjC,EMNE,CAACgC,CNMX,CAAa,AOLuD,KAAmB,ADDjF,CAAazB,OAAO,IAAI,KAAKR,IAAL,CAAU,SAAV,EAAqBQ,OAArB,CAAxB,CNMsDX,GAAG,CAACK,OAAhE;AACD,AOLD,ADDO,ALQb,AFAA,OCNM,GODIL,GAAJ,ADHM,ECGG,IDDI,GCCG,KAAKG,IAAL,CAAU,OAAV,EAAmBH,GAAnB,CAAP;APOT,AONA,ADDQ,ALQd,AFAA,WCDWL,AONA0B,IAAL,CAAU,GDDGlB,ENOb,CAAgBJ,CMPR,CNOR,AMPkB,CNOC,OAAnB,CMPQ,CNOqBO,CMPA+B,IAArB,ENOoB,IAAa;AACvC,AOPUjB,ADAL,ALQb,AFAA,QQRkBA,KPOLlC,EOPY,EAAE,KPOnB,AOPQ,GPOS,KAAjB;AACA,AOR0BiC,ADCvB,ALQX,AFAA,QQTkCA,EAAE,CDL1B,CCK4B,CPQzBhB,AORG,IPQR,CAAU,OAAV;AACA,AOTiCoD,ADEhC,ALQT,AFAA,QQVyCA,CDP5B,CAAL,ENgBI,CAAC,COTkC,EAAE,EPS/BhD,OAAV,EAAmB,KAAKC,OAAL,AOTX;APUT,AOVmEgD,ADGnE,ALQP,AFAA,OCLM,AMfA,CCSoEA,MAAM,EAAE,CAAC,KAAKH,MAAN,EAAc,WAAd;APY5E,AOZU,ADIV,APQN,OQZM,EAA0G,CAACrD,CPYtGL,AMRAqC,ECJqG,EAAMyB,EDIhH,CAAYvB,GNQZ,CAAgBnC,COZ0F,CPY1G,CAAmB,GOZ0G,MPY7H,AMRA,CAA6B,CNQC,MAAM,AMRpC,EAAsC,MAAM,KAAKyC,OAAL,EAA5C;ANSE,AOZA,ADIH,APQL,KOxBI,OCYQ,CPYC7C,AOZAK,GAAL,EAAU,KPYV,CAAgBS,MAAhB,GAAyB,KAAKzB,OAAL,CAAaQ,KAAb,CAAzB;AACA,AOZE,ADIP,APQH,aCAaG,EOZEyD,QPYP,CAAgB5D,IOZd,CPYF,EOZuB,CPYCA,GOZtB,EPYF;AACA,AOZE,ARYV,aCAaR,EOZE0E,KPYP,CAAalE,KAAb,EAAoBL,IOZlB,EPYF,GAA6B,KAAKQ,UAAL,CAAgBR,MAA7C;AACA,AOZC,ADIPqD,APQF,EOREA,OAAO,GAAI,CNQAtD,SAAL,GAAiB,IAAjB;AACA,AMRJ,APQJ,SORS8C,INQI1C,EMRT,GAAc,ENQV,EMRJ,CNQmB,KAAf;AACA,AObA,ADKJ,APQJ,SORSgC,GNQG1C,CObCM,EPaL,AMRJ,ENQaO,CMRC,ICLV,ADKJ,ENQoB,CAACC,AObA,GPaR,CAAY,AObrB,gCPaqD,KAAKV,OAAL,CAAaQ,KAAb,EAAoBM,QAAhE;AACT,AObA,ADKJ,APQJ,QORQlB,GAAJ,ENQSuB,AObAA,ADKAV,INQL,AObA,CPaU,AObA,EDKE,CAACC,GAAR,CAAY,ENQjB,AObA,4BDKK;ANSN,AObA,ADKH,APQJ,OCRM,AOZA,EDYGS,IAAL,CAAU,OAAV;ANUE,AOdD,ADKD,APQJ,KQvBI,IDeKsC,ENSE9C,UAAL,CAAgBI,EAAhB,CAAmB,EMTrB,INSE,EAA2BW,IAAI,IAAI,KAAKP,IAAL,CAAU,MAAV,EAAkBO,IAAlB,CAAnC;AACA,AOdH,ADKA,APQH,WCCWf,UAAL,CAAgBI,EAAhB,CAAmB,SAAnB,EAA8BY,OAAO,IAAI,KAAKR,IAAL,CAAU,SAAV,EAAqBQ,OAArB,CAAzC;AACD,ADDL;ACEG,AOdD+C,ADKA1C,APQF,EQbE0C,ADKA1C,KAAK,GAAI,SCLQ,GAAI;AACnB,ADKA,APQJ,QORQ,CCLCK,IAAL,ADKSW,CCLC,KDKV,EAAiB;ANUnBxB,AOfcY,ADMV,APQN,ECCEZ,IOfcY,GPeP,CAAEhC,CMTA4C,ECNY,EAAE,EDMnB,CNSa,AMTDhB,ECNJ,CPeQ,EMThB,GNSqB5B,QAAlB,EAA4B;AACjC,AOhB4B+B,ADO3B,APQL,KOVI,CCL4BA,EPgBxBvC,AOhB0B,EAAE,CPgBhC,AOhBU,ADOH,ENSEa,OAAO,CAACC,GAAR,CAAa,wBAAuB,CAACN,QAAQ,GAAG,IAAZ,EAAkBwB,OAAlB,CAA0B,CAA1B,CAA6B,iBAAjE;AACTC,AOjBmC0C,ADQjC,APQN,ICCI1C,EOjBmC0C,KDQ5Bf,CCRkC,EAAE,EPiB/B,CAAC,CMTX,INSgB1B,YAAN,CAAZ,EOjBU;APkBV,AOlBoE0C,ADSnE,APQL,MQjBwEA,GPkB/D1C,GOlBqE,EAAE,CAAC,KAAKuC,CPkBlF,GAAoBtC,EOlBwD,QPkB9C,CAAC,MAAM,KAAKxB,OAAL,EAAP,EAAuBH,QAAvB,CAA9B;AACD,AOnBW,ADUX,APQH,KQlBI,EAA6F,CAACY,GAAD,EAAM2D,MAAN,KAAiB;AAC5G,ARkBN,UQlBU3D,GAAJ,EAAS;APoBbC,AOnBM,ADUNgB,APQF,ECCEhB,AMTAgB,KAAK,CAAEN,KCVIiD,EDUN,ENSU,AMTCvD,CNSCb,KAAF,CMTV,CNSmBQ,CMTCkB,ENSV,EAAc,AMTA,ECVvB,CDU0B,CAAC,CCVAH,ADU5B,EAA+B,QCVO,CAAC,MAAM,KAAK2C,iBAAL,EAAP,EAAiC,KAAjC,CAArC;APoBJ,AOnBI,ADUJ,APQJ,SCCS1E,AMTAmB,IAAL,CAAU,CCVC,CPmBX,CAAaX,GOnBGW,EPmBhB,CMTA,CNSoBhB,AOnBT,CAAU,ADUA,KNSrB,EOnBW,CPmBkBa,COnBCA,EPmB9B,COnBW,CAAP;AACD,ADSoBmB,APS3B,MOT2BA,CCZrB,CDYuB,EAAER,GCTlB,IDSyB,CAACQ,EAAd;ANUrB,AOlBI,ADQmCC,APU3C,MOV2CA,ENUnC,IOlBI,CPkBCpC,AOlBA,ADQqC,EAAE2B,GCRlCW,EPkBV,CAAa1B,CMVsC,CAACwB,CCRpD,EAAkB,CPkBlB,GAAsB,AMVL,CNUjB,AOlBuBwC,KPkBKpE,KAAhC,EAAuC,OOlBjB,GAA2B,KAAKkE,iBAAL,EAA3B;APmBpB,AMX+DzC,APWrE,MOXqEA,KNW1D3B,AMX+D,EAAE,KNWtE,GAAe,KAAf;AACA,AOnBE,ADOsEe,APY9E,QOZ8EA,ENYpEzB,EOnBE+E,CPmBN,EAASlE,AMZ6D,GCPpE,EAAY,EPmBE,CAACW,IAAR,CAAa,gFAAb,EAA+F,KAAKpB,OAApG;AACT,AOnBI2E,ADM6EzC,APavF,QObuFA,ECN7EyC,CPmBCnD,KOnBK,CAACqD,CPmBX,EOnBI,CAAWC,CAAC,IAAI;APoBrB,AOnBO,ADKgE,APc5E,KCJI,MAIO,KOnBKrC,KAAJ;APmBC,AMdY,APezB,KOfI;ANeE,AOnBM,ADKT,APeH,WCDWlC,KOnBK,EPmBV,CAAa,EAAEC,KAAf;AACD,AOpBaiC,ARqBlB,cQrBkBA,KAAK,GAAGoB,IAAI,CAACpB,KAAL,CAAWqC,CAAX,CAAR;APqBf,AOrBsC,ADOvCzC,APeF,EOfEA,IAAI,CAAEV,MCPI,CAA8B,ADOpC,EAAW,KCPgCsB,CAAP,EAAU;AAAER,ADQlD,APeJ,QOfQ,KAAKO,CCRyCP,KAAK,ADQnD,GCRsD,CDQvC,ICR+B,CDQ1BO,MAAL,CAAYU,UAAZ,KAA2B,KAAKV,MAAL,CAAYW,UAA1D,EAAsE;ANexE3B,AOvBmE,ADS/DD,APeN,ECDEC,IMdID,CNcC,GAAI,MMdK,CAAC6B,CAAC,IAAI,KAAKvB,IAAL,CAAUV,OAAV,CAAN,EAA0B,EAA1B,CAAV;ANeF,AMdC,APeL,KOjBI,INgBKJ,EMdE,IAAI,CNcX,AMdY,GNcG,EMdEyB,ENcjB,IMdW,IAAgB,KAAKA,MAAL,CAAYU,UAAZ,GAAyB,CAA7C,EAAgD;ACT/C,ADUN,APeN,WOfWxD,QCVQuC,CDUb,GAAiB,CCVX,IDUN;ANcF,AOvBO,ADUL,APeN,QCFQ,GO3BE,ADcCR,ENaEtB,AOvBAoE,GDUP,CAAWpD,ECdP,CAIUqD,CAAC,EPuBjB,CMbE,CNamB,AOvBAA,CAJf,ADcgB,ECVE5B,OAJlB,CAI0B0B,CAAC,IAAI,ADUnC,KCVwC3D,IAAL,CAAU,SAAV,EAAqB2D,CAArB,CAJ/B;AP4BJ,AOvBG,ADUJ,APeL,KOlBW,MNgBAnE,AMbA,UNaL,CAAgBqB,KAAhB,GADmB,CACK;AACzB,AOvBE,ADUD,APeN,KCJI,MAEO,AMbAgB,MAAL,CAAYX,IAAZ,CAAiBwB,IAAI,CAACC,SAAL,CAAenC,OAAf,CAAjB;ANcA,AOvBD,ADUA,APeL,KQvCI,MPqCOR,IAAL,CAAU,OAAV;AACD,AOvBF,ADUA,APeH;AACA;ACFIU,AOtBFG,ADnD6C,AP4E/C,EQzBEA,EPsBEH,GOtBG,GAAI,MPsBK,CAAC,KAAKC,YAAN,CAAZ;AACD,AOtBC,ARyBJ,QQzBQlC,GAAJ,EAASa,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACT,ADSJ6B,APgBA,MOhBM,CAACC,ECTEF,KDST,CCTI,EDSaI,CCTC,IAAd,IDSsB,IAAI,CAACG,GAAD,EAAMkB,EAAN,KAAa,IAAIpB,mBAAJ,CAAwBD,SAAxB,EAAmCG,GAAnC,EAAwCkB,EAAxC,CAA3C;ANcE9B,AOtBE,ARyBJ,ECHEA,KAAK,CAAEN,COtBAR,IAAL,CAAU,CPsBP,EAAWE,IOtBd,GPsBG,EAAoBa,IAAI,GAAG,CAAC,CAA5B,EAA+B;AAClC,AOtBAL,ARyBJ,IQzBIA,KPsBKV,IAAL,CAAU,EOtBE,CAAC,KAAKyD,CPsBlB,EAAqB,gBOtBT,CAAZ;APsBuBzC,AOrBvB,ARyBJ,MCJ2BA,EAAE,COrBpBsB,CPqBsB9B,OAAO,CAACQ,EAAd,OOrBrB;APqBuCC,AOpBxC,ARyBH,MCL2CA,OAAO,EAAET,OAAO,CAACS,OAAnC;AAA4CH,ADMrE,MCNqEA,KAAK,EAAE;AAAEZ,AOlB5E4D,ARyBF,EQzBEA,MPkB4E5D,MOlBhE,CPkB8D,AOlB5D6D,GAAF,EAAO;APkBkEhD,AOjBnF,ARyBJ,QCRuFA,AOjB/EgD,GAAG,CAAC/E,MAAJ,IAAc,GAAd,IAAqB+E,GAAG,CAAC/E,MAAJ,GAAa,GAAtC,EAA2C,OAAO+E,GAAP;APiB6B,AOhBxE,ARyBJ,UQzBUjD,KAAK,GAAG,IAAIc,KAAJ,CAAUmC,GAAG,CAACC,UAAd,CAAd;APgBqB,AOfrBlD,ARyBJ,IQzBIA,CPeA,IOfK,CAACiD,GAAN,GAAYA,GAAZ;APgBD,AOfC,ARyBJ,UQzBUjD,KAAK,CAACZ,OAAZ;AACD,ARyBH;ACTEgB,ADUF,ECVEA,IAAI,CAAEV,OAAF,EAAW;AACb,AOfFM,ARyBF,EQzBEA,KAAK,CPeC,AOfCN,KPeIrB,EOfN,EAAWe,GPed,EAAkB,EOff,EAAoBa,IAAI,GAAG,CAAC,CAA5B,EAA+B;APgBhCH,AOfF,ARyBJ,MCVMA,GOfGZ,IAAL,CAAU,EPeE,CAAC,MAAM,AOfnB,EAAqB,GPeGkB,IAAL,CAAUV,OAAV,CAAP,EAA2B,GAA3B,CAAV;AACD,AOhBsBQ,AR0B3B,KCZI,COduBA,EAAE,EAAER,CPgBpB,IAAI,EOhBuB,CAACQ,EPgBnBxB,AOhBK,UPgBV,CAAgB2B,MAApB,EAA4B;AACjC,AOjBqCF,AR2B3C,MQ3B2CA,KPiBhCH,EOjBuC,EAAEN,CPiB9C,CAAWA,KOjB0C,CAACS,CPiBtD,EAAoB,IOjBD,WPiBnB;AACD,AOlBgEH,AR4BrE,KCZW,COhB0DA,KPkB1D,AOlB+D,EAAE;APmBtE,AOnBwEZ,AR6B9E,QQ7B8EA,GPmBnEV,IOnBiE,MPmBtE,CAAgB0B,IAAhB,CAAqBV,OAArB;AACD,AOpBkFO,AR8BvF,QQ9BuFA;APqBpF,AOrByE,AR+B5E;AQ/ByB,ARgCzB,KQhCI;APrEyC,AOsE1C,ARgCH;AACA;ACVAK,AOrBEF,ARgCF,EQhCEA,IPqBI,AOrBA,CPqBCG,AOrBCb,OPqBR,AOrBM,EAAWyD,CPqBAvF,OOrBX,EAAqB,QPqB3B;AOpBI,ARgCJ,QQhCQ,KAAKyC,MAAT,EAAiB,OAAO,KAAKL,KAAL,CAAWN,OAAX,EAAoB,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","file":"frame-connector.esm.3d5b37e6.js","sourceRoot":"../src","sourcesContent":["const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n","const EventEmitter = require('events')\n\nclass EthereumProvider extends EventEmitter {\n  constructor (connection) {\n    super()\n    this.connected = false\n    this.nextId = 0\n    this.promises = {}\n    this.subscriptions = []\n    this.connection = connection\n    this.connection.on('connect', () => this.checkConnection())\n    this.connection.on('close', () => this.emit('close'))\n    this.connection.on('payload', payload => {\n      const { id, method, error, result } = payload\n      if (typeof id !== 'undefined') {\n        if (this.promises[id]) { // Fulfill promise\n          payload.error ? this.promises[id].reject(error) : this.promises[id].resolve(result)\n          delete this.promises[id]\n        }\n      } else if (method && method.indexOf('_subscription') > -1) { // Emit subscription result\n        this.emit(payload.params.subscription, payload.params.result)\n        this.emit(method, payload.params) // Latest EIP-1193\n        this.emit('data', payload) // Backwards Compatibility\n      }\n    })\n    this.on('newListener', (event, listener) => {\n      if (event === 'networkChanged') {\n        if (!this.attemptedNetworkSubscription && this.connected) this.startNetworkSubscription()\n      } else if (event === 'accountsChanged') {\n        if (!this.attemptedAccountsSubscription && this.connected) this.startAccountsSubscription()\n      }\n    })\n  }\n  async checkConnection () {\n    try {\n      this.emit('connect', await this._send('net_version'))\n      this.connected = true\n      if (this.listenerCount('networkChanged') && !this.attemptedNetworkSubscription) this.startNetworkSubscription()\n      if (this.listenerCount('accountsChanged') && !this.attemptedAccountsSubscription) this.startAccountsSubscription()\n    } catch (e) {\n      this.connected = false\n    }\n  }\n  async startNetworkSubscription () {\n    this.attemptedNetworkSubscription = true\n    try {\n      let networkChanged = await this.subscribe('eth_subscribe', 'networkChanged')\n      this.on(networkChanged, netId => this.emit('networkChanged', netId))\n    } catch (e) {\n      console.warn('Unable to subscribe to networkChanged', e)\n    }\n  }\n  async startAccountsSubscription () {\n    this.attemptedAccountsSubscription = true\n    try {\n      let accountsChanged = await this.subscribe('eth_subscribe', 'accountsChanged')\n      this.on(accountsChanged, accounts => this.emit('accountsChanged', accounts))\n    } catch (e) {\n      console.warn('Unable to subscribe to accountsChanged', e)\n    }\n  }\n  enable () {\n    return new Promise((resolve, reject) => {\n      this._send('eth_accounts').then(accounts => {\n        if (accounts.length > 0) {\n          this.accounts = accounts\n          this.coinbase = accounts[0]\n          this.emit('enable')\n          resolve(accounts)\n        } else {\n          const err = new Error('User Denied Full Provider')\n          err.code = 4001\n          reject(err)\n        }\n      }).catch(reject)\n    })\n  }\n  _send (method, params = []) {\n    if (!method || typeof method !== 'string') return new Error('Method is not a valid string.')\n    if (!(params instanceof Array)) return new Error('Params is not a valid array.')\n    const payload = { jsonrpc: '2.0', id: this.nextId++, method, params }\n    const promise = new Promise((resolve, reject) => { this.promises[payload.id] = { resolve, reject } })\n    this.connection.send(payload)\n    return promise\n  }\n  send (...args) { // Send can be clobbered, proxy sendPromise for backwards compatibility\n    return this._send(...args)\n  }\n  _sendBatch (requests) {\n    return Promise.all(requests.map(payload => this._send(payload.method, payload.params)))\n  }\n  subscribe (type, method, params = []) {\n    return this._send(type, [method, ...params]).then(id => {\n      this.subscriptions.push(id)\n      return id\n    })\n  }\n  unsubscribe (type, id) {\n    return this._send(type, [id]).then(success => {\n      if (success) {\n        this.subscriptions = this.subscriptions.filter(_id => _id !== id) // Remove subscription\n        this.removeAllListeners(id) // Remove listeners\n        return success\n      }\n    })\n  }\n  sendAsync (payload, cb) { // Backwards Compatibility\n    if (!cb || typeof cb !== 'function') return cb(new Error('Invalid or undefined callback provided to sendAsync'))\n    if (!payload) return cb(new Error('Invalid Payload'))\n    // sendAsync can be called with an array for batch requests used by web3.js 0.x\n    // this is not part of EIP-1193's backwards compatibility but we still want to support it\n    if (payload instanceof Array) {\n      return this.sendAsyncBatch(payload, cb)\n    } else {\n      return this._send(payload.method, payload.params).then(result => {\n        cb(null, { id: payload.id, jsonrpc: payload.jsonrpc, result })\n      }).catch(err => {\n        cb(err)\n      })\n    }\n  }\n  sendAsyncBatch (payload, cb) {\n    return this._sendBatch(payload).then((results) => {\n      let result = results.map((entry, index) => {\n        return { id: payload[index].id, jsonrpc: payload[index].jsonrpc, result: entry }\n      })\n      cb(null, result)\n    }).catch(err => {\n      cb(err)\n    })\n  }\n  isConnected () { // Backwards Compatibility\n    return this.connected\n  }\n  close () {\n    this.connection.close()\n    this.connected = false\n    let error = new Error(`Provider closed, subscription lost, please subscribe again.`)\n    this.subscriptions.forEach(id => this.emit(id, error)) // Send Error objects to any open subscriptions\n    this.subscriptions = [] // Clear subscriptions\n  }\n}\n\nmodule.exports = EthereumProvider\n","const EventEmitter = require('events')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nclass ConnectionManager extends EventEmitter {\n  constructor (connections, targets, options) {\n    super()\n    this.targets = targets\n    this.connections = connections\n    this.connected = false\n    this.status = 'loading'\n    this.interval = options.interval || 5000\n    this.name = options.name || 'default'\n    this.inSetup = true\n    this.connect()\n  }\n\n  connect (index = 0) {\n    if (dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`)\n\n    if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n      if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider')\n    } else if (this.targets.length === 0) {\n      if (dev) console.log('No valid targets supplied')\n    } else {\n      const { protocol, location } = this.targets[index]\n      this.connection = this.connections[protocol](location)\n\n      this.connection.on('error', err => {\n        if (!this.connected) return this.connectionError(index, err)\n        if (this.listenerCount('error')) return this.emit('error', err)\n        console.warn('eth-provider - Uncaught connection error: ' + err.message)\n      })\n\n      this.connection.on('close', (summary) => {\n        this.connected = false\n        this.emit('close')\n        if (!this.closing) this.refresh()\n      })\n\n      this.connection.on('connect', () => {\n        this.connection.target = this.targets[index]\n        this.connection.index = index\n        this.targets[index].status = this.connection.status\n        this.connected = true\n        this.inSetup = false\n        if (dev) console.log('Successfully connected to: ' + this.targets[index].location)\n        this.emit('connect')\n      })\n\n      this.connection.on('data', data => this.emit('data', data))\n      this.connection.on('payload', payload => this.emit('payload', payload))\n    }\n  }\n\n  refresh (interval = this.interval) {\n    if (dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`)\n    clearTimeout(this.connectTimer)\n    this.connectTimer = setTimeout(() => this.connect(), interval)\n  }\n\n  connectionError (index, err) {\n    this.targets[index].status = err\n    if (this.targets.length - 1 === index) {\n      this.inSetup = false\n      if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets)\n      this.refresh()\n    } else { // Not last target, move on the next connection option\n      this.connect(++index)\n    }\n  }\n\n  close () {\n    this.closing = true\n    if (this.connection) {\n      this.connection.close() // Let event bubble from here\n    } else {\n      this.emit('close')\n    }\n    clearTimeout(this.connectTimer)\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.inSetup) {\n      setTimeout(() => this.send(payload), 100)\n    } else if (this.connection.closed) {\n      this.error(payload, 'Not connected')\n    } else {\n      this.connection.send(payload)\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n","const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n","module.exports = {\n  injected: ['injected'],\n  frame: ['ws://127.0.0.1:1248', 'http://127.0.0.1:1248'],\n  direct: ['ws://127.0.0.1:8546', 'http://127.0.0.1:8545'], // IPC paths will be prepended in Node/Electron\n  infura: ['wss://mainnet.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://mainnet.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRopsten: ['wss://ropsten.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://ropsten.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRinkeby: ['wss://rinkeby.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://rinkeby.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraKovan: ['wss://kovan.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://kovan.infura.io/v3/786ade30f36244469480aa5c2bf0743b']\n}\n","const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.emit('error', new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.emit('error', new Error('No injected provider found')), 0)\n    }\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n","const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.emit('error', new Error(message)), 0)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n","let last, timeout\n\nmodule.exports = (res, cb) => {\n  const values = []\n  res\n    .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|')\n    .forEach(data => {\n      if (last) data = last + data // prepend the last chunk\n      let result\n      try {\n        result = JSON.parse(data)\n      } catch (e) {\n        last = data\n        clearTimeout(timeout) // restart timeout\n        timeout = setTimeout(() => cb(new Error('Parse response timeout')), 15 * 1000)\n        return\n      }\n      clearTimeout(timeout)\n      last = null\n      if (result) values.push(result)\n    })\n  cb(null, values)\n}\n","const EventEmitter = require('events')\nconst parse = require('../parse')\nconst dev = process.env.NODE_ENV === 'development'\n\nlet WebSocket\n\nclass WebSocketConnection extends EventEmitter {\n  constructor (_WebSocket, url, options) {\n    super()\n    WebSocket = _WebSocket\n    setTimeout(() => this.create(url, options), 0)\n  }\n\n  create (url, options) {\n    if (!WebSocket) this.emit('error', new Error('No WebSocket transport available'))\n    try { this.socket = new WebSocket(url) } catch (e) { return this.emit('error', e) }\n    this.socket.addEventListener('error', err => this.emit('error', err))\n    this.socket.addEventListener('open', () => {\n      this.emit('connect')\n      this.socket.addEventListener('message', message => {\n        const data = typeof message.data === 'string' ? message.data : ''\n        parse(data, (err, payloads) => {\n          if (err) return //\n          payloads.forEach(load => {\n            if (Array.isArray(load)) {\n              load.forEach(payload => this.emit('payload', payload))\n            } else {\n              this.emit('payload', load)\n            }\n          })\n        })\n      })\n      this.socket.addEventListener('close', () => this.onClose())\n    })\n  }\n\n  onClose () {\n    this.socket = null\n    this.closed = true\n    if (dev) console.log('Closing WebSocket connection')\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  close () {\n    if (this.socket) {\n      this.socket.close()\n    } else {\n      this.onClose()\n    }\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.socket && this.socket.readyState === this.socket.CONNECTING) {\n      setTimeout(_ => this.send(payload), 10)\n    } else if (!this.socket || this.socket.readyState > 1) {\n      this.connected = false\n      this.error(payload, 'Not connected')\n    } else {\n      this.socket.send(JSON.stringify(payload))\n    }\n  }\n}\n\nmodule.exports = WebSocket => (url, cb) => new WebSocketConnection(WebSocket, url, cb)\n","const EventEmitter = require('events')\nconst uuid = require('uuid/v4')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nlet XHR\n\nclass HTTPConnection extends EventEmitter {\n  constructor (_XHR, url, options) {\n    super()\n    XHR = _XHR\n    this.connected = false\n    this.subscriptions = false\n    this.status = 'loading'\n    this.url = url\n    this.pollId = uuid()\n    setTimeout(() => this.create(), 0)\n  }\n\n  create () {\n    if (!XHR) return this.emit('error', new Error('No HTTP transport available'))\n    this.on('error', () => { if (this.connected) this.close() })\n    this.init()\n  }\n\n  init () {\n    this.send({ jsonrpc: '2.0', method: 'eth_syncing', params: [], id: 1 }, (err, response) => {\n      if (err) return this.emit('error', err)\n      this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId, 'immediate'] }, (err, response) => {\n        if (!err) {\n          this.subscriptions = true\n          this.pollSubscriptions()\n        }\n        this.connected = true\n        this.emit('connect')\n      })\n    })\n  }\n\n  pollSubscriptions () {\n    this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId] }, (err, result) => {\n      if (err) {\n        this.subscriptionTimeout = setTimeout(() => this.pollSubscriptions(), 10000)\n        return this.emit('error', err)\n      } else {\n        if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions()\n        if (result) {\n          result.map(p => {\n            let parse\n            try { parse = JSON.parse(p) } catch (e) { parse = false }\n            return parse\n          }).filter(n => n).forEach(p => this.emit('payload', p))\n        }\n      }\n    })\n  }\n\n  close () {\n    if (dev) console.log('Closing HTTP connection')\n    this.closed = true\n    this.emit('close')\n    clearTimeout(this.subscriptionTimeout)\n    this.removeAllListeners()\n  }\n\n  filterStatus (res) {\n    if (res.status >= 200 && res.status < 300) return res\n    const error = new Error(res.statusText)\n    error.res = res\n    throw error.message\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload, internal) {\n    if (this.closed) return this.error(payload, 'Not connected')\n    if (payload.method === 'eth_subscribe') {\n      if (this.subscriptions) {\n        payload.pollId = this.pollId\n      } else {\n        return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint')\n      }\n    }\n    const xhr = new XHR()\n    let responded = false\n    const res = (err, result) => {\n      if (!responded) {\n        xhr.abort()\n        responded = true\n        if (internal) {\n          internal(err, result)\n        } else {\n          const { id, jsonrpc } = payload\n          const load = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result }\n          this.emit('payload', load)\n        }\n      }\n    }\n    xhr.open('POST', this.url, true)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.timeout = 60 * 1000\n    xhr.onerror = res\n    xhr.ontimeout = res\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        try {\n          const response = JSON.parse(xhr.responseText)\n          res(response.error, response.result)\n        } catch (e) {\n          res(e)\n        }\n      }\n    }\n    xhr.send(JSON.stringify(payload))\n  }\n}\n\nmodule.exports = XHR => (url, options) => new HTTPConnection(XHR, url, options)\n","const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets = ['injected', 'frame'], options = {}) => provider(connections, resolve(targets, presets), options)\n","import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport ethProvider from 'eth-provider'\nimport invariant from 'tiny-invariant'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class FrameConnector extends AbstractConnector {\n  private provider: any\n\n  constructor(kwargs: Required<AbstractConnectorArguments>) {\n    invariant(kwargs.supportedChainIds.length === 1, 'This connector only supports 1 chainId at the moment.')\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleNetworkChanged(networkId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ provider: this.provider, chainId: networkId })\n  }\n\n  private handleChainChanged(chainId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts.length === 0 ? null : accounts[0] })\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      this.provider = ethProvider('frame')\n    }\n\n    this.provider\n      .on('networkChanged', this.handleNetworkChanged)\n      .on('chainChanged', this.handleChainChanged)\n      .on('accountsChanged', this.handleAccountsChanged)\n      .on('close', this.handleClose)\n\n    const account = await this.provider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        if (error && (error as any).code === 4001) {\n          throw new UserRejectedRequestError()\n        } else {\n          throw error\n        }\n      })\n\n    return { provider: this.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider\n      .removeListener('networkChanged', this.handleNetworkChanged)\n      .removeListener('chainChanged', this.handleChainChanged)\n      .removeListener('accountsChanged', this.handleAccountsChanged)\n      .removeListener('close', this.handleClose)\n  }\n}\n"]}