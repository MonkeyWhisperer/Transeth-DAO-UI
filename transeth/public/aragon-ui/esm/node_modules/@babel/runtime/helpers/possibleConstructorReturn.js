import { unwrapExports, createCommonjsModule } from '../../../../_virtual/_commonjsHelpers.js';
import { __moduleExports as _typeof_1 } from './typeof.js';
import { __moduleExports as assertThisInitialized } from './assertThisInitialized.js';

var possibleConstructorReturn = createCommonjsModule(function (module) {
var _typeof = _typeof_1["default"];



function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _possibleConstructorReturn = /*@__PURE__*/unwrapExports(possibleConstructorReturn);

export default _possibleConstructorReturn;
export { possibleConstructorReturn as __moduleExports };
//# sourceMappingURL=possibleConstructorReturn.js.map
